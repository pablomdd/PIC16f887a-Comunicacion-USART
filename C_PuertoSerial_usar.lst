

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Wed Nov 06 14:53:20 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,delta=2
    13                           	psect	text549,local,class=CODE,delta=2
    14                           	psect	text550,local,class=CODE,delta=2
    15                           	psect	text553,local,class=CODE,delta=2
    16                           	psect	text555,local,class=CODE,delta=2
    17                           	psect	text557,local,class=CODE,delta=2
    18                           	psect	text558,local,class=CODE,delta=2
    19                           	psect	text561,local,class=CODE,delta=2
    20                           	psect	text575,local,class=CODE,delta=2
    21                           	psect	text576,local,class=CODE,delta=2
    22                           	psect	text578,local,class=CODE,delta=2
    23                           	psect	text580,local,class=CODE,delta=2
    24                           	psect	pa_nodes,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  000A                     	;#
    27                           
    28                           	psect	config
    29  2007  E0D4               	dw	57556	;#
    30  2008  FFFF               	dw	65535	;#
    31                           
    32                           	psect	strings
    33  0800                     __pstrings:	
    34  0800                     stringtab:	
    35                           ;	global	stringdir,stringtab,__stringbase
    36                           
    37  0800                     stringcode:	
    38                           ;	String table - string pointers are 1 byte each
    39                           
    40  0800                     stringdir:	
    41  0800  3008               	movlw	high stringdir
    42  0801  008A               	movwf	10
    43  0802  0804               	movf	4,w
    44  0803  0A84               	incf	4,f
    45  0804  0782               	addwf	2,f
    46  0805                     __stringbase:	
    47  0805  3400               	retlw	0
    48  0806                     __npowers_:	
    49  0806  3400               	retlw	0
    50  0807  3480               	retlw	128
    51  0808  343F               	retlw	63
    52  0809  34CD               	retlw	205
    53  080A  34CC               	retlw	204
    54  080B  343D               	retlw	61
    55  080C  34D7               	retlw	215
    56  080D  3423               	retlw	35
    57  080E  343C               	retlw	60
    58  080F  3412               	retlw	18
    59  0810  3483               	retlw	131
    60  0811  343A               	retlw	58
    61  0812  34B7               	retlw	183
    62  0813  34D1               	retlw	209
    63  0814  3438               	retlw	56
    64  0815  34C6               	retlw	198
    65  0816  3427               	retlw	39
    66  0817  3437               	retlw	55
    67  0818  3438               	retlw	56
    68  0819  3486               	retlw	134
    69  081A  3435               	retlw	53
    70  081B  34C0               	retlw	192
    71  081C  34D6               	retlw	214
    72  081D  3433               	retlw	51
    73  081E  34CC               	retlw	204
    74  081F  342B               	retlw	43
    75  0820  3432               	retlw	50
    76  0821  3470               	retlw	112
    77  0822  3489               	retlw	137
    78  0823  3430               	retlw	48
    79  0824  34E7               	retlw	231
    80  0825  34DB               	retlw	219
    81  0826  342E               	retlw	46
    82  0827  34E5               	retlw	229
    83  0828  343C               	retlw	60
    84  0829  341E               	retlw	30
    85  082A  3442               	retlw	66
    86  082B  34A2               	retlw	162
    87  082C  340D               	retlw	13
    88  082D                     __powers_:	
    89  082D  3400               	retlw	0
    90  082E  3480               	retlw	128
    91  082F  343F               	retlw	63
    92  0830  3400               	retlw	0
    93  0831  3420               	retlw	32
    94  0832  3441               	retlw	65
    95  0833  3400               	retlw	0
    96  0834  34C8               	retlw	200
    97  0835  3442               	retlw	66
    98  0836  3400               	retlw	0
    99  0837  347A               	retlw	122
   100  0838  3444               	retlw	68
   101  0839  3440               	retlw	64
   102  083A  341C               	retlw	28
   103  083B  3446               	retlw	70
   104  083C  3450               	retlw	80
   105  083D  34C3               	retlw	195
   106  083E  3447               	retlw	71
   107  083F  3424               	retlw	36
   108  0840  3474               	retlw	116
   109  0841  3449               	retlw	73
   110  0842  3497               	retlw	151
   111  0843  3418               	retlw	24
   112  0844  344B               	retlw	75
   113  0845  34BC               	retlw	188
   114  0846  34BE               	retlw	190
   115  0847  344C               	retlw	76
   116  0848  346B               	retlw	107
   117  0849  346E               	retlw	110
   118  084A  344E               	retlw	78
   119  084B  3403               	retlw	3
   120  084C  3415               	retlw	21
   121  084D  3450               	retlw	80
   122  084E  3479               	retlw	121
   123  084F  34AD               	retlw	173
   124  0850  3460               	retlw	96
   125  0851  34F3               	retlw	243
   126  0852  3449               	retlw	73
   127  0853  3471               	retlw	113
   128  0854                     _dpowers:	
   129  0854  3401               	retlw	1
   130  0855  3400               	retlw	0
   131  0856  3400               	retlw	0
   132  0857  3400               	retlw	0
   133  0858  340A               	retlw	10
   134  0859  3400               	retlw	0
   135  085A  3400               	retlw	0
   136  085B  3400               	retlw	0
   137  085C  3464               	retlw	100
   138  085D  3400               	retlw	0
   139  085E  3400               	retlw	0
   140  085F  3400               	retlw	0
   141  0860  34E8               	retlw	232
   142  0861  3403               	retlw	3
   143  0862  3400               	retlw	0
   144  0863  3400               	retlw	0
   145  0864  3410               	retlw	16
   146  0865  3427               	retlw	39
   147  0866  3400               	retlw	0
   148  0867  3400               	retlw	0
   149  0868  34A0               	retlw	160
   150  0869  3486               	retlw	134
   151  086A  3401               	retlw	1
   152  086B  3400               	retlw	0
   153  086C  3440               	retlw	64
   154  086D  3442               	retlw	66
   155  086E  340F               	retlw	15
   156  086F  3400               	retlw	0
   157  0870  3480               	retlw	128
   158  0871  3496               	retlw	150
   159  0872  3498               	retlw	152
   160  0873  3400               	retlw	0
   161  0874  3400               	retlw	0
   162  0875  34E1               	retlw	225
   163  0876  34F5               	retlw	245
   164  0877  3405               	retlw	5
   165  0878  3400               	retlw	0
   166  0879  34CA               	retlw	202
   167  087A  349A               	retlw	154
   168  087B  343B               	retlw	59
   169  001F                     _ADCON0	set	31
   170  001E                     _ADRESH	set	30
   171  0017                     _CCP1CON	set	23
   172  001D                     _CCP2CON	set	29
   173  0015                     _CCPR1L	set	21
   174  0008                     _PORTD	set	8
   175  001A                     _RCREG	set	26
   176  0018                     _RCSTA	set	24
   177  0001                     _TMR0	set	1
   178  0019                     _TXREG	set	25
   179  00F9                     _GO_DONE	set	249
   180  002E                     _RA6	set	46
   181  002F                     _RA7	set	47
   182  0065                     _RCIF	set	101
   183  0049                     _RE1	set	73
   184  005A                     _T0IF	set	90
   185  0090                     _T2CKPS0	set	144
   186  0091                     _T2CKPS1	set	145
   187  0092                     _TMR2ON	set	146
   188  0064                     _TXIF	set	100
   189  009F                     _ADCON1	set	159
   190  009E                     _ADRESL	set	158
   191  0081                     _OPTION_REG	set	129
   192  008F                     _OSCCON	set	143
   193  0092                     _PR2	set	146
   194  0099                     _SPBRG	set	153
   195  0085                     _TRISA	set	133
   196  0086                     _TRISB	set	134
   197  0088                     _TRISD	set	136
   198  0089                     _TRISE	set	137
   199  0098                     _TXSTA	set	152
   200  043E                     _TRISC6	set	1086
   201  043F                     _TRISC7	set	1087
   202  0188                     _ANSEL	set	392
   203  0189                     _ANSELH	set	393
   204  0187                     _BAUDCTL	set	391
   205  0005                     _PORTA	set	5
   206  087C                     STR_1:	
   207  087C  3445               	retlw	69	;'E'
   208  087D  346C               	retlw	108	;'l'
   209  087E  3420               	retlw	32	;' '
   210  087F  3476               	retlw	118	;'v'
   211  0880  3461               	retlw	97	;'a'
   212  0881  346C               	retlw	108	;'l'
   213  0882  346F               	retlw	111	;'o'
   214  0883  3472               	retlw	114	;'r'
   215  0884  3420               	retlw	32	;' '
   216  0885  3465               	retlw	101	;'e'
   217  0886  3473               	retlw	115	;'s'
   218  0887  343A               	retlw	58	;':'
   219  0888  3420               	retlw	32	;' '
   220  0889  3425               	retlw	37	;'%'
   221  088A  3466               	retlw	102	;'f'
   222  088B  3420               	retlw	32	;' '
   223  088C  3420               	retlw	32	;' '
   224  088D  3400               	retlw	0
   225                           
   226                           	psect	cinit
   227  0003                     start_initialization:	
   228  0003  30CC               	movlw	low __pbssBANK1
   229                           
   230                           ; Clear objects allocated to BANK1
   231  0004  1383               	bcf	3,7	;select IRP bank0
   232  0005  0084               	movwf	4
   233  0006  30E2               	movlw	low (__pbssBANK1+22)
   234  0007  120A  158A  2204   	fcall	clear_ram
   235  000A                     end_of_initialization:	
   236                           ;End of C runtime variable initialization code
   237                           
   238  000A  0183               	clrf	3
   239  000B  120A  158A  2E3C   	ljmp	_main	;jump to C main() function
   240                           
   241                           	psect	bssBANK1
   242  00CC                     __pbssBANK1:	
   243  00CC                     _num:	
   244  00CC                     	ds	3
   245  00CF                     _nin:	
   246  00CF                     	ds	2
   247  00D1                     _input:	
   248  00D1                     	ds	17
   249                           
   250                           	psect	clrtext
   251  0A04                     clear_ram:	
   252                           ;	Called with FSR containing the base address, and
   253                           ;	W with the last address+1
   254                           
   255  0A04  0064               	clrwdt	;clear the watchdog before getting into this loop
   256  0A05                     clrloop:	
   257  0A05  0180               	clrf	0	;clear RAM location pointed to by FSR
   258  0A06  0A84               	incf	4,f	;increment pointer
   259  0A07  0604               	xorwf	4,w	;XOR with final address
   260  0A08  1903               	btfsc	3,2	;have we reached the end yet?
   261  0A09  3400               	retlw	0	;all done for this memory range, return
   262  0A0A  0604               	xorwf	4,w	;XOR again to restore value
   263  0A0B  2A05               	goto	clrloop	;do the next byte
   264                           
   265                           	psect	cstackBANK1
   266  00A0                     __pcstackBANK1:	
   267  00A0                     _sprintf$1890:	
   268                           
   269                           ; 4 bytes @ 0x0
   270  00A0                     	ds	4
   271  00A4                     sprintf@ap:	
   272                           
   273                           ; 1 bytes @ 0x4
   274  00A4                     	ds	1
   275  00A5                     sprintf@flag:	
   276                           
   277                           ; 2 bytes @ 0x5
   278  00A5                     	ds	2
   279  00A7                     sprintf@prec:	
   280                           
   281                           ; 2 bytes @ 0x7
   282  00A7                     	ds	2
   283  00A9                     sprintf@_val:	
   284                           
   285                           ; 4 bytes @ 0x9
   286  00A9                     	ds	4
   287  00AD                     sprintf@integ:	
   288                           
   289                           ; 3 bytes @ 0xD
   290  00AD                     	ds	3
   291  00B0                     sprintf@sp:	
   292                           
   293                           ; 1 bytes @ 0x10
   294  00B0                     	ds	1
   295  00B1                     sprintf@exp:	
   296                           
   297                           ; 2 bytes @ 0x11
   298  00B1                     	ds	2
   299  00B3                     sprintf@fval:	
   300                           
   301                           ; 3 bytes @ 0x13
   302  00B3                     	ds	3
   303  00B6                     sprintf@c:	
   304                           
   305                           ; 1 bytes @ 0x16
   306  00B6                     	ds	1
   307  00B7                     main@buffer:	
   308                           
   309                           ; 15 bytes @ 0x17
   310  00B7                     	ds	15
   311  00C6                     main@i:	
   312                           
   313                           ; 2 bytes @ 0x26
   314  00C6                     	ds	2
   315  00C8                     main@i_1825:	
   316                           
   317                           ; 2 bytes @ 0x28
   318  00C8                     	ds	2
   319  00CA                     main@x:	
   320                           
   321                           ; 1 bytes @ 0x2A
   322  00CA                     	ds	1
   323  00CB                     main@x_1829:	
   324                           
   325                           ; 1 bytes @ 0x2B
   326  00CB                     	ds	1
   327                           
   328                           	psect	cstackCOMMON
   329  0070                     __pcstackCOMMON:	
   330  0070                     ?_putch:	
   331  0070                     ??_putch:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_gets_Serial:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ??_gets_Serial:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_msecbase:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ??_msecbase:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_pause:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_lcd_write:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?_lcd_clear:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ?_lcd_puts:	
   356                           ; 0 bytes @ 0x0
   357                           
   358  0070                     ?_lcd_goto:	
   359                           ; 0 bytes @ 0x0
   360                           
   361  0070                     ?_main:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ??_getch:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ?___ftge:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ?_getch:	
   371                           ; 1 bit 
   372                           
   373  0070                     ?___lbmod:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ?___wmul:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?___awmod:	
   380                           ; 2 bytes @ 0x0
   381                           
   382  0070                     ?___ftpack:	
   383                           ; 2 bytes @ 0x0
   384                           
   385  0070                     ?___ftneg:	
   386                           ; 3 bytes @ 0x0
   387                           
   388  0070                     ?__tdiv_to_l_:	
   389                           ; 3 bytes @ 0x0
   390                           
   391  0070                     ?__div_to_l_:	
   392                           ; 4 bytes @ 0x0
   393                           
   394  0070                     ?___lldiv:	
   395                           ; 4 bytes @ 0x0
   396                           
   397  0070                     putch@dato:	
   398                           ; 4 bytes @ 0x0
   399                           
   400  0070                     ___lbmod@divisor:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     pause@msvalue:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ___wmul@multiplier:	
   407                           ; 2 bytes @ 0x0
   408                           
   409  0070                     ___awmod@divisor:	
   410                           ; 2 bytes @ 0x0
   411                           
   412  0070                     ___ftneg@f1:	
   413                           ; 2 bytes @ 0x0
   414                           
   415  0070                     ___ftge@ff1:	
   416                           ; 3 bytes @ 0x0
   417                           
   418  0070                     __tdiv_to_l_@f1:	
   419                           ; 3 bytes @ 0x0
   420                           
   421  0070                     __div_to_l_@f1:	
   422                           ; 3 bytes @ 0x0
   423                           
   424  0070                     ___ftpack@arg:	
   425                           ; 3 bytes @ 0x0
   426                           
   427  0070                     ___lldiv@divisor:	
   428                           ; 3 bytes @ 0x0
   429                           
   430                           
   431                           ; 4 bytes @ 0x0
   432  0070                     	ds	1
   433  0071                     ??___lbmod:	
   434  0071                     gets_Serial@s:	
   435                           ; 0 bytes @ 0x1
   436                           
   437                           
   438                           ; 1 bytes @ 0x1
   439  0071                     	ds	1
   440  0072                     ??_pause:	
   441  0072                     ___lbmod@dividend:	
   442                           ; 0 bytes @ 0x2
   443                           
   444  0072                     pause@x:	
   445                           ; 1 bytes @ 0x2
   446                           
   447  0072                     gets_Serial@i:	
   448                           ; 2 bytes @ 0x2
   449                           
   450  0072                     ___wmul@multiplicand:	
   451                           ; 2 bytes @ 0x2
   452                           
   453  0072                     ___awmod@dividend:	
   454                           ; 2 bytes @ 0x2
   455                           
   456                           
   457                           ; 2 bytes @ 0x2
   458  0072                     	ds	1
   459  0073                     ??___ftneg:	
   460  0073                     ___lbmod@counter:	
   461                           ; 0 bytes @ 0x3
   462                           
   463  0073                     ___ftpack@exp:	
   464                           ; 1 bytes @ 0x3
   465                           
   466  0073                     ___ftge@ff2:	
   467                           ; 1 bytes @ 0x3
   468                           
   469  0073                     __tdiv_to_l_@f2:	
   470                           ; 3 bytes @ 0x3
   471                           
   472  0073                     __div_to_l_@f2:	
   473                           ; 3 bytes @ 0x3
   474                           
   475                           
   476                           ; 3 bytes @ 0x3
   477  0073                     	ds	1
   478  0074                     ??_lcd_write:	
   479  0074                     ??___wmul:	
   480                           ; 0 bytes @ 0x4
   481                           
   482  0074                     ??___awmod:	
   483                           ; 0 bytes @ 0x4
   484                           
   485  0074                     lcd_write@c:	
   486                           ; 0 bytes @ 0x4
   487                           
   488  0074                     ___lbmod@rem:	
   489                           ; 1 bytes @ 0x4
   490                           
   491  0074                     ___awmod@counter:	
   492                           ; 1 bytes @ 0x4
   493                           
   494  0074                     ___ftpack@sign:	
   495                           ; 1 bytes @ 0x4
   496                           
   497  0074                     gets_Serial@i_1836:	
   498                           ; 1 bytes @ 0x4
   499                           
   500  0074                     ___wmul@product:	
   501                           ; 2 bytes @ 0x4
   502                           
   503  0074                     ___lldiv@dividend:	
   504                           ; 2 bytes @ 0x4
   505                           
   506                           
   507                           ; 4 bytes @ 0x4
   508  0074                     	ds	1
   509  0075                     ??___ftpack:	
   510  0075                     ??_lcd_clear:	
   511                           ; 0 bytes @ 0x5
   512                           
   513  0075                     ??_lcd_puts:	
   514                           ; 0 bytes @ 0x5
   515                           
   516  0075                     ??_lcd_goto:	
   517                           ; 0 bytes @ 0x5
   518                           
   519  0075                     ?___lbdiv:	
   520                           ; 0 bytes @ 0x5
   521                           
   522  0075                     lcd_puts@s:	
   523                           ; 1 bytes @ 0x5
   524                           
   525  0075                     lcd_goto@pos:	
   526                           ; 1 bytes @ 0x5
   527                           
   528  0075                     ___lbdiv@divisor:	
   529                           ; 1 bytes @ 0x5
   530                           
   531  0075                     ___awmod@sign:	
   532                           ; 1 bytes @ 0x5
   533                           
   534                           
   535                           ; 1 bytes @ 0x5
   536  0075                     	ds	1
   537  0076                     ??__tdiv_to_l_:	
   538  0076                     ??__div_to_l_:	
   539                           ; 0 bytes @ 0x6
   540                           
   541  0076                     ??___lbdiv:	
   542                           ; 0 bytes @ 0x6
   543                           
   544  0076                     ??___ftge:	
   545                           ; 0 bytes @ 0x6
   546                           
   547  0076                     ?___awdiv:	
   548                           ; 0 bytes @ 0x6
   549                           
   550  0076                     gets_Serial@c:	
   551                           ; 2 bytes @ 0x6
   552                           
   553  0076                     ___lbdiv@dividend:	
   554                           ; 1 bytes @ 0x6
   555                           
   556  0076                     ___awdiv@divisor:	
   557                           ; 1 bytes @ 0x6
   558                           
   559                           
   560                           ; 2 bytes @ 0x6
   561  0076                     	ds	1
   562  0077                     ___lbdiv@counter:	
   563                           
   564                           ; 1 bytes @ 0x7
   565  0077                     	ds	1
   566  0078                     ??___lldiv:	
   567  0078                     ?___awtoft:	
   568                           ; 0 bytes @ 0x8
   569                           
   570  0078                     ?___lltoft:	
   571                           ; 3 bytes @ 0x8
   572                           
   573  0078                     ___lbdiv@quotient:	
   574                           ; 3 bytes @ 0x8
   575                           
   576  0078                     ___awtoft@c:	
   577                           ; 1 bytes @ 0x8
   578                           
   579  0078                     ___awdiv@dividend:	
   580                           ; 2 bytes @ 0x8
   581                           
   582  0078                     ___lldiv@quotient:	
   583                           ; 2 bytes @ 0x8
   584                           
   585  0078                     ___lltoft@c:	
   586                           ; 4 bytes @ 0x8
   587                           
   588                           
   589                           ; 4 bytes @ 0x8
   590  0078                     	ds	1
   591  0079                     ?___bmul:	
   592  0079                     ___bmul@multiplicand:	
   593                           ; 1 bytes @ 0x9
   594                           
   595                           
   596                           ; 1 bytes @ 0x9
   597  0079                     	ds	1
   598  007A                     ??___bmul:	
   599  007A                     ??___awdiv:	
   600                           ; 0 bytes @ 0xA
   601                           
   602  007A                     ___bmul@product:	
   603                           ; 0 bytes @ 0xA
   604                           
   605  007A                     ___awdiv@counter:	
   606                           ; 1 bytes @ 0xA
   607                           
   608                           
   609                           ; 1 bytes @ 0xA
   610  007A                     	ds	1
   611  007B                     ??___awtoft:	
   612  007B                     ___bmul@multiplier:	
   613                           ; 0 bytes @ 0xB
   614                           
   615  007B                     ___awtoft@sign:	
   616                           ; 1 bytes @ 0xB
   617                           
   618  007B                     ___awdiv@sign:	
   619                           ; 1 bytes @ 0xB
   620                           
   621                           
   622                           ; 1 bytes @ 0xB
   623  007B                     	ds	1
   624  007C                     ??___lltoft:	
   625  007C                     ___lldiv@counter:	
   626                           ; 0 bytes @ 0xC
   627                           
   628  007C                     ___lltoft@exp:	
   629                           ; 1 bytes @ 0xC
   630                           
   631  007C                     ___awdiv@quotient:	
   632                           ; 1 bytes @ 0xC
   633                           
   634                           
   635                           ; 2 bytes @ 0xC
   636  007C                     	ds	1
   637  007D                     ??___llmod:	
   638  007D                     ___llmod@counter:	
   639                           ; 0 bytes @ 0xD
   640                           
   641                           
   642                           ; 1 bytes @ 0xD
   643  007D                     	ds	1
   644  007E                     ??_fround:	
   645  007E                     ??___ftsub:	
   646                           ; 0 bytes @ 0xE
   647                           
   648                           
   649                           	psect	cstackBANK0
   650  0020                     __pcstackBANK0:	
   651                           ; 0 bytes @ 0xE
   652                           
   653  0020                     ?___fttol:	
   654  0020                     ?___llmod:	
   655                           ; 4 bytes @ 0x0
   656                           
   657  0020                     ___fttol@f1:	
   658                           ; 4 bytes @ 0x0
   659                           
   660  0020                     ___llmod@divisor:	
   661                           ; 3 bytes @ 0x0
   662                           
   663  0020                     __tdiv_to_l_@quot:	
   664                           ; 4 bytes @ 0x0
   665                           
   666  0020                     __div_to_l_@quot:	
   667                           ; 4 bytes @ 0x0
   668                           
   669                           
   670                           ; 4 bytes @ 0x0
   671  0020                     	ds	4
   672  0024                     ??___fttol:	
   673  0024                     __tdiv_to_l_@cntr:	
   674                           ; 0 bytes @ 0x4
   675                           
   676  0024                     __div_to_l_@cntr:	
   677                           ; 1 bytes @ 0x4
   678                           
   679  0024                     ___llmod@dividend:	
   680                           ; 1 bytes @ 0x4
   681                           
   682                           
   683                           ; 4 bytes @ 0x4
   684  0024                     	ds	1
   685  0025                     __tdiv_to_l_@exp1:	
   686  0025                     __div_to_l_@exp1:	
   687                           ; 1 bytes @ 0x5
   688                           
   689                           
   690                           ; 1 bytes @ 0x5
   691  0025                     	ds	2
   692  0027                     ___fttol@sign1:	
   693                           
   694                           ; 1 bytes @ 0x7
   695  0027                     	ds	1
   696  0028                     ___fttol@lval:	
   697                           
   698                           ; 4 bytes @ 0x8
   699  0028                     	ds	4
   700  002C                     ___fttol@exp1:	
   701                           
   702                           ; 1 bytes @ 0xC
   703  002C                     	ds	1
   704  002D                     ?___ftmul:	
   705  002D                     ___ftmul@f1:	
   706                           ; 3 bytes @ 0xD
   707                           
   708                           
   709                           ; 3 bytes @ 0xD
   710  002D                     	ds	3
   711  0030                     ___ftmul@f2:	
   712                           
   713                           ; 3 bytes @ 0x10
   714  0030                     	ds	3
   715  0033                     ??___ftmul:	
   716                           
   717                           ; 0 bytes @ 0x13
   718  0033                     	ds	3
   719  0036                     ___ftmul@exp:	
   720                           
   721                           ; 1 bytes @ 0x16
   722  0036                     	ds	1
   723  0037                     ___ftmul@f3_as_product:	
   724                           
   725                           ; 3 bytes @ 0x17
   726  0037                     	ds	3
   727  003A                     ___ftmul@cntr:	
   728                           
   729                           ; 1 bytes @ 0x1A
   730  003A                     	ds	1
   731  003B                     ___ftmul@sign:	
   732                           
   733                           ; 1 bytes @ 0x1B
   734  003B                     	ds	1
   735  003C                     ?_scale:	
   736  003C                     ?___ftadd:	
   737                           ; 3 bytes @ 0x1C
   738                           
   739  003C                     ___ftadd@f1:	
   740                           ; 3 bytes @ 0x1C
   741                           
   742                           
   743                           ; 3 bytes @ 0x1C
   744  003C                     	ds	3
   745  003F                     ??_scale:	
   746  003F                     ___ftadd@f2:	
   747                           ; 0 bytes @ 0x1F
   748                           
   749                           
   750                           ; 3 bytes @ 0x1F
   751  003F                     	ds	3
   752  0042                     ??___ftadd:	
   753                           
   754                           ; 0 bytes @ 0x22
   755  0042                     	ds	1
   756  0043                     _scale$2837:	
   757                           
   758                           ; 3 bytes @ 0x23
   759  0043                     	ds	2
   760  0045                     ___ftadd@sign:	
   761                           
   762                           ; 1 bytes @ 0x25
   763  0045                     	ds	1
   764  0046                     scale@scl:	
   765  0046                     ___ftadd@exp2:	
   766                           ; 1 bytes @ 0x26
   767                           
   768                           
   769                           ; 1 bytes @ 0x26
   770  0046                     	ds	1
   771  0047                     ___ftadd@exp1:	
   772                           
   773                           ; 1 bytes @ 0x27
   774  0047                     	ds	1
   775  0048                     ?_fround:	
   776  0048                     ?___ftsub:	
   777                           ; 3 bytes @ 0x28
   778                           
   779  0048                     ___ftsub@f2:	
   780                           ; 3 bytes @ 0x28
   781                           
   782                           
   783                           ; 3 bytes @ 0x28
   784  0048                     	ds	3
   785  004B                     ___ftsub@f1:	
   786  004B                     _fround$2836:	
   787                           ; 3 bytes @ 0x2B
   788                           
   789                           
   790                           ; 3 bytes @ 0x2B
   791  004B                     	ds	3
   792  004E                     _fround$2835:	
   793                           
   794                           ; 3 bytes @ 0x2E
   795  004E                     	ds	3
   796  0051                     fround@prec:	
   797                           
   798                           ; 1 bytes @ 0x31
   799  0051                     	ds	1
   800  0052                     ?_sprintf:	
   801  0052                     sprintf@f:	
   802                           ; 2 bytes @ 0x32
   803                           
   804                           
   805                           ; 1 bytes @ 0x32
   806  0052                     	ds	4
   807  0056                     ??_sprintf:	
   808                           
   809                           ; 0 bytes @ 0x36
   810  0056                     	ds	5
   811  005B                     ??_main:	
   812                           
   813                           ; 0 bytes @ 0x3B
   814  005B                     	ds	1
   815                           
   816                           	psect	maintext
   817  0E3C                     __pmaintext:	
   818 ;;Data sizes: Strings 18, constant 118, data 0, bss 22, persistent 0 stack 0
   819 ;;Auto spaces:   Size  Autos    Used
   820 ;; COMMON          14     14      14
   821 ;; BANK0           80     60      60
   822 ;; BANK1           80     44      66
   823 ;; BANK3           96      0       0
   824 ;; BANK2           96      0       0
   825 ;;
   826 ;; Pointer list with targets:
   827 ;; ?___ftpack	float  size(1) Largest target is 0
   828 ;;
   829 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   830 ;;
   831 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   832 ;;
   833 ;; ?___ftsub	float  size(1) Largest target is 0
   834 ;;
   835 ;; ?___lltoft	float  size(1) Largest target is 0
   836 ;;
   837 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   838 ;;
   839 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   840 ;;
   841 ;; ?___fttol	long  size(1) Largest target is 0
   842 ;;
   843 ;; ?___ftadd	float  size(1) Largest target is 0
   844 ;;
   845 ;; ?___ftneg	float  size(1) Largest target is 0
   846 ;;
   847 ;; ?___awmod	int  size(1) Largest target is 40
   848 ;;		 -> dpowers(CODE[40]), 
   849 ;;
   850 ;; ?___awdiv	int  size(1) Largest target is 0
   851 ;;
   852 ;; ?_scale	int  size(1) Largest target is 0
   853 ;;
   854 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   855 ;;
   856 ;; ?_fround	unsigned int  size(1) Largest target is 0
   857 ;;
   858 ;; ?___ftmul	float  size(1) Largest target is 0
   859 ;;
   860 ;; ?___awtoft	float  size(1) Largest target is 0
   861 ;;
   862 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 18
   863 ;;		 -> STR_1(CODE[18]), 
   864 ;;
   865 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 15
   866 ;;		 -> main@buffer(BANK1[15]), 
   867 ;;
   868 ;; ?_sprintf	int  size(1) Largest target is 0
   869 ;;
   870 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   871 ;;		 -> ?_sprintf(BANK0[2]), 
   872 ;;
   873 ;; S1879$_cp	PTR const unsigned char  size(1) Largest target is 0
   874 ;;
   875 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   876 ;;
   877 ;; gets_Serial@s	PTR unsigned char  size(1) Largest target is 17
   878 ;;		 -> input(BANK1[17]), main@buffer(BANK1[15]), 
   879 ;;
   880 ;; lcd_puts@s	PTR const unsigned char  size(1) Largest target is 17
   881 ;;		 -> input(BANK1[17]), main@buffer(BANK1[15]), 
   882 ;;
   883 ;; pa	PTR unsigned char  size(1) Largest target is 1
   884 ;;		 -> PORTA(BITSFR0[1]), 
   885 ;;
   886 ;;
   887 ;; Critical Paths under _main in COMMON
   888 ;;
   889 ;;   _sprintf->___awdiv
   890 ;;   _sprintf->__div_to_l_
   891 ;;   _sprintf->___llmod
   892 ;;   _lcd_goto->_lcd_write
   893 ;;   _lcd_puts->_lcd_write
   894 ;;   _lcd_clear->_lcd_write
   895 ;;   _scale->___awdiv
   896 ;;   _lcd_write->_pause
   897 ;;   ___lltoft->___ftpack
   898 ;;   ___awtoft->___ftpack
   899 ;;   ___ftmul->___awdiv
   900 ;;   ___llmod->___lldiv
   901 ;;   ___awdiv->___awmod
   902 ;;   ___fttol->___awdiv
   903 ;;   ___lbdiv->___lbmod
   904 ;;   ___bmul->___lbdiv
   905 ;;
   906 ;; Critical Paths under _main in BANK0
   907 ;;
   908 ;;   _main->_sprintf
   909 ;;   _sprintf->_fround
   910 ;;   ___ftsub->___ftadd
   911 ;;   _scale->___ftmul
   912 ;;   _fround->___ftadd
   913 ;;   ___ftmul->___fttol
   914 ;;   ___ftadd->___ftmul
   915 ;;
   916 ;; Critical Paths under _main in BANK1
   917 ;;
   918 ;;   _main->_sprintf
   919 ;;
   920 ;; Critical Paths under _main in BANK3
   921 ;;
   922 ;;   None.
   923 ;;
   924 ;; Critical Paths under _main in BANK2
   925 ;;
   926 ;;   None.
   927 ;;
   928 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   929 ;;
   930 ;;
   931 ;;Call Graph Tables:
   932 ;;
   933 ;; ---------------------------------------------------------------------------------
   934 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   935 ;; ---------------------------------------------------------------------------------
   936 ;; (0) _main                                                27    27      0   11265
   937 ;;                                             59 BANK0      1     1      0
   938 ;;                                             23 BANK1     21    21      0
   939 ;;                              _pause
   940 ;;                          _lcd_write
   941 ;;                          _lcd_clear
   942 ;;                              _putch
   943 ;;                        _gets_Serial
   944 ;;                           ___awtoft
   945 ;;                            ___ftmul
   946 ;;                            _sprintf
   947 ;;                           _lcd_goto
   948 ;;                           _lcd_puts
   949 ;; ---------------------------------------------------------------------------------
   950 ;; (1) _sprintf                                             38    34      4    9257
   951 ;;                                             50 BANK0      9     5      4
   952 ;;                                              0 BANK1     23    23      0
   953 ;;                             ___ftge
   954 ;;                            ___ftneg
   955 ;;                             ___wmul
   956 ;;                            ___awdiv
   957 ;;                              _scale
   958 ;;                            ___ftmul
   959 ;;                             _fround
   960 ;;                            ___ftadd
   961 ;;                            ___fttol
   962 ;;                         __div_to_l_
   963 ;;                        __tdiv_to_l_
   964 ;;                           ___lltoft
   965 ;;                            ___ftsub
   966 ;;                            ___lldiv
   967 ;;                            ___llmod
   968 ;; ---------------------------------------------------------------------------------
   969 ;; (1) _lcd_goto                                             1     1      0     112
   970 ;;                                              5 COMMON     1     1      0
   971 ;;                          _lcd_write
   972 ;; ---------------------------------------------------------------------------------
   973 ;; (1) _lcd_puts                                             1     1      0     135
   974 ;;                                              5 COMMON     1     1      0
   975 ;;                          _lcd_write
   976 ;; ---------------------------------------------------------------------------------
   977 ;; (1) _lcd_clear                                            0     0      0     136
   978 ;;                          _lcd_write
   979 ;;                              _pause
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (2) ___ftsub                                              6     0      6    1094
   982 ;;                                             40 BANK0      6     0      6
   983 ;;                            ___ftadd
   984 ;;                           ___lltoft (ARG)
   985 ;; ---------------------------------------------------------------------------------
   986 ;; (2) _scale                                               14    11      3    1688
   987 ;;                                             28 BANK0     11     8      3
   988 ;;                            ___awmod
   989 ;;                            ___awdiv
   990 ;;                            ___ftmul
   991 ;;                             ___bmul
   992 ;;                            ___fttol (ARG)
   993 ;; ---------------------------------------------------------------------------------
   994 ;; (2) _fround                                              13    10      3    1215
   995 ;;                                             40 BANK0     10     7      3
   996 ;;                            ___lbmod
   997 ;;                             ___bmul
   998 ;;                            ___lbdiv
   999 ;;                            ___ftmul
  1000 ;;                            ___ftadd (ARG)
  1001 ;; ---------------------------------------------------------------------------------
  1002 ;; (2) _lcd_write                                            1     1      0      90
  1003 ;;                                              4 COMMON     1     1      0
  1004 ;;                              _pause
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (2) ___lltoft                                             5     1      4     278
  1007 ;;                                              8 COMMON     5     1      4
  1008 ;;                           ___ftpack
  1009 ;; ---------------------------------------------------------------------------------
  1010 ;; (1) ___awtoft                                             4     1      3     300
  1011 ;;                                              8 COMMON     4     1      3
  1012 ;;                           ___ftpack
  1013 ;; ---------------------------------------------------------------------------------
  1014 ;; (3) ___ftmul                                             15     9      6     535
  1015 ;;                                             13 BANK0     15     9      6
  1016 ;;                           ___ftpack
  1017 ;;                           ___awtoft (ARG)
  1018 ;;                            ___fttol (ARG)
  1019 ;;                            ___awdiv (ARG)
  1020 ;;                            ___awmod (ARG)
  1021 ;;                             ___bmul (ARG)
  1022 ;;                            ___lbdiv (ARG)
  1023 ;;                            ___lbmod (ARG)
  1024 ;; ---------------------------------------------------------------------------------
  1025 ;; (3) ___ftadd                                             12     6      6    1049
  1026 ;;                                             28 BANK0     12     6      6
  1027 ;;                           ___ftpack
  1028 ;;                            ___lbmod (ARG)
  1029 ;;                             ___bmul (ARG)
  1030 ;;                            ___lbdiv (ARG)
  1031 ;;                            ___ftmul (ARG)
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (1) _gets_Serial                                          7     7      0     247
  1034 ;;                                              0 COMMON     7     7      0
  1035 ;;                              _getch
  1036 ;; ---------------------------------------------------------------------------------
  1037 ;; (3) _pause                                                4     2      2      46
  1038 ;;                                              0 COMMON     4     2      2
  1039 ;;                           _msecbase
  1040 ;; ---------------------------------------------------------------------------------
  1041 ;; (3) ___awmod                                              6     2      4     296
  1042 ;;                                              0 COMMON     6     2      4
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (2) ___lldiv                                             13     5      8     162
  1045 ;;                                              0 COMMON    13     5      8
  1046 ;; ---------------------------------------------------------------------------------
  1047 ;; (2) ___ftge                                               6     0      6     136
  1048 ;;                                              0 COMMON     6     0      6
  1049 ;; ---------------------------------------------------------------------------------
  1050 ;; (2) ___ftneg                                              3     0      3      45
  1051 ;;                                              0 COMMON     3     0      3
  1052 ;; ---------------------------------------------------------------------------------
  1053 ;; (2) ___llmod                                              9     1      8     159
  1054 ;;                                             13 COMMON     1     1      0
  1055 ;;                                              0 BANK0      8     0      8
  1056 ;;                            ___lldiv (ARG)
  1057 ;; ---------------------------------------------------------------------------------
  1058 ;; (3) ___awdiv                                              8     4      4     300
  1059 ;;                                              6 COMMON     8     4      4
  1060 ;;                            ___awmod (ARG)
  1061 ;; ---------------------------------------------------------------------------------
  1062 ;; (2) ___fttol                                             13     9      4     252
  1063 ;;                                              0 BANK0     13     9      4
  1064 ;;                           ___ftpack (ARG)
  1065 ;;                            ___awmod (ARG)
  1066 ;;                            ___awdiv (ARG)
  1067 ;;                             ___bmul (ARG)
  1068 ;; ---------------------------------------------------------------------------------
  1069 ;; (4) ___ftpack                                             8     3      5     209
  1070 ;;                                              0 COMMON     8     3      5
  1071 ;; ---------------------------------------------------------------------------------
  1072 ;; (3) ___lbmod                                              5     4      1     159
  1073 ;;                                              0 COMMON     5     4      1
  1074 ;; ---------------------------------------------------------------------------------
  1075 ;; (3) ___lbdiv                                              4     3      1     162
  1076 ;;                                              5 COMMON     4     3      1
  1077 ;;                            ___lbmod (ARG)
  1078 ;; ---------------------------------------------------------------------------------
  1079 ;; (2) ___wmul                                               6     2      4      92
  1080 ;;                                              0 COMMON     6     2      4
  1081 ;; ---------------------------------------------------------------------------------
  1082 ;; (3) ___bmul                                               3     2      1      68
  1083 ;;                                              9 COMMON     3     2      1
  1084 ;;                            ___lbmod (ARG)
  1085 ;;                            ___lbdiv (ARG)
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; (2) __div_to_l_                                          20    14      6     446
  1088 ;;                                              0 COMMON    14     8      6
  1089 ;;                                              0 BANK0      6     6      0
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1092 ;;                                              0 COMMON     9     3      6
  1093 ;;                                              0 BANK0      6     6      0
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; (2) _getch                                                0     0      0       0
  1096 ;; ---------------------------------------------------------------------------------
  1097 ;; (1) _putch                                                1     1      0      22
  1098 ;;                                              0 COMMON     1     1      0
  1099 ;; ---------------------------------------------------------------------------------
  1100 ;; (4) _msecbase                                             0     0      0       0
  1101 ;; ---------------------------------------------------------------------------------
  1102 ;; Estimated maximum stack depth 4
  1103 ;; ---------------------------------------------------------------------------------
  1104 ;; Call Graph Graphs:
  1105 ;; _main (ROOT)
  1106 ;;   _pause
  1107 ;;     _msecbase
  1108 ;;   _lcd_write
  1109 ;;     _pause
  1110 ;;       _msecbase
  1111 ;;   _lcd_clear
  1112 ;;     _lcd_write
  1113 ;;       _pause
  1114 ;;         _msecbase
  1115 ;;     _pause
  1116 ;;       _msecbase
  1117 ;;   _putch
  1118 ;;   _gets_Serial
  1119 ;;     _getch
  1120 ;;   ___awtoft
  1121 ;;     ___ftpack
  1122 ;;   ___ftmul
  1123 ;;     ___ftpack
  1124 ;;     ___awtoft (ARG)
  1125 ;;       ___ftpack
  1126 ;;     ___fttol (ARG)
  1127 ;;       ___ftpack (ARG)
  1128 ;;       ___awmod (ARG)
  1129 ;;       ___awdiv (ARG)
  1130 ;;         ___awmod (ARG)
  1131 ;;       ___bmul (ARG)
  1132 ;;         ___lbmod (ARG)
  1133 ;;         ___lbdiv (ARG)
  1134 ;;           ___lbmod (ARG)
  1135 ;;     ___awdiv (ARG)
  1136 ;;       ___awmod (ARG)
  1137 ;;     ___awmod (ARG)
  1138 ;;     ___bmul (ARG)
  1139 ;;       ___lbmod (ARG)
  1140 ;;       ___lbdiv (ARG)
  1141 ;;         ___lbmod (ARG)
  1142 ;;     ___lbdiv (ARG)
  1143 ;;       ___lbmod (ARG)
  1144 ;;     ___lbmod (ARG)
  1145 ;;   _sprintf
  1146 ;;     ___ftge
  1147 ;;     ___ftneg
  1148 ;;     ___wmul
  1149 ;;     ___awdiv
  1150 ;;       ___awmod (ARG)
  1151 ;;     _scale
  1152 ;;       ___awmod
  1153 ;;       ___awdiv
  1154 ;;         ___awmod (ARG)
  1155 ;;       ___ftmul
  1156 ;;         ___ftpack
  1157 ;;         ___awtoft (ARG)
  1158 ;;           ___ftpack
  1159 ;;         ___fttol (ARG)
  1160 ;;           ___ftpack (ARG)
  1161 ;;           ___awmod (ARG)
  1162 ;;           ___awdiv (ARG)
  1163 ;;             ___awmod (ARG)
  1164 ;;           ___bmul (ARG)
  1165 ;;             ___lbmod (ARG)
  1166 ;;             ___lbdiv (ARG)
  1167 ;;               ___lbmod (ARG)
  1168 ;;         ___awdiv (ARG)
  1169 ;;           ___awmod (ARG)
  1170 ;;         ___awmod (ARG)
  1171 ;;         ___bmul (ARG)
  1172 ;;           ___lbmod (ARG)
  1173 ;;           ___lbdiv (ARG)
  1174 ;;             ___lbmod (ARG)
  1175 ;;         ___lbdiv (ARG)
  1176 ;;           ___lbmod (ARG)
  1177 ;;         ___lbmod (ARG)
  1178 ;;       ___bmul
  1179 ;;         ___lbmod (ARG)
  1180 ;;         ___lbdiv (ARG)
  1181 ;;           ___lbmod (ARG)
  1182 ;;       ___fttol (ARG)
  1183 ;;         ___ftpack (ARG)
  1184 ;;         ___awmod (ARG)
  1185 ;;         ___awdiv (ARG)
  1186 ;;           ___awmod (ARG)
  1187 ;;         ___bmul (ARG)
  1188 ;;           ___lbmod (ARG)
  1189 ;;           ___lbdiv (ARG)
  1190 ;;             ___lbmod (ARG)
  1191 ;;     ___ftmul
  1192 ;;       ___ftpack
  1193 ;;       ___awtoft (ARG)
  1194 ;;         ___ftpack
  1195 ;;       ___fttol (ARG)
  1196 ;;         ___ftpack (ARG)
  1197 ;;         ___awmod (ARG)
  1198 ;;         ___awdiv (ARG)
  1199 ;;           ___awmod (ARG)
  1200 ;;         ___bmul (ARG)
  1201 ;;           ___lbmod (ARG)
  1202 ;;           ___lbdiv (ARG)
  1203 ;;             ___lbmod (ARG)
  1204 ;;       ___awdiv (ARG)
  1205 ;;         ___awmod (ARG)
  1206 ;;       ___awmod (ARG)
  1207 ;;       ___bmul (ARG)
  1208 ;;         ___lbmod (ARG)
  1209 ;;         ___lbdiv (ARG)
  1210 ;;           ___lbmod (ARG)
  1211 ;;       ___lbdiv (ARG)
  1212 ;;         ___lbmod (ARG)
  1213 ;;       ___lbmod (ARG)
  1214 ;;     _fround
  1215 ;;       ___lbmod
  1216 ;;       ___bmul
  1217 ;;         ___lbmod (ARG)
  1218 ;;         ___lbdiv (ARG)
  1219 ;;           ___lbmod (ARG)
  1220 ;;       ___lbdiv
  1221 ;;         ___lbmod (ARG)
  1222 ;;       ___ftmul
  1223 ;;         ___ftpack
  1224 ;;         ___awtoft (ARG)
  1225 ;;           ___ftpack
  1226 ;;         ___fttol (ARG)
  1227 ;;           ___ftpack (ARG)
  1228 ;;           ___awmod (ARG)
  1229 ;;           ___awdiv (ARG)
  1230 ;;             ___awmod (ARG)
  1231 ;;           ___bmul (ARG)
  1232 ;;             ___lbmod (ARG)
  1233 ;;             ___lbdiv (ARG)
  1234 ;;               ___lbmod (ARG)
  1235 ;;         ___awdiv (ARG)
  1236 ;;           ___awmod (ARG)
  1237 ;;         ___awmod (ARG)
  1238 ;;         ___bmul (ARG)
  1239 ;;           ___lbmod (ARG)
  1240 ;;           ___lbdiv (ARG)
  1241 ;;             ___lbmod (ARG)
  1242 ;;         ___lbdiv (ARG)
  1243 ;;           ___lbmod (ARG)
  1244 ;;         ___lbmod (ARG)
  1245 ;;       ___ftadd (ARG)
  1246 ;;         ___ftpack
  1247 ;;         ___lbmod (ARG)
  1248 ;;         ___bmul (ARG)
  1249 ;;           ___lbmod (ARG)
  1250 ;;           ___lbdiv (ARG)
  1251 ;;             ___lbmod (ARG)
  1252 ;;         ___lbdiv (ARG)
  1253 ;;           ___lbmod (ARG)
  1254 ;;         ___ftmul (ARG)
  1255 ;;           ___ftpack
  1256 ;;           ___awtoft (ARG)
  1257 ;;             ___ftpack
  1258 ;;           ___fttol (ARG)
  1259 ;;             ___ftpack (ARG)
  1260 ;;             ___awmod (ARG)
  1261 ;;             ___awdiv (ARG)
  1262 ;;               ___awmod (ARG)
  1263 ;;             ___bmul (ARG)
  1264 ;;               ___lbmod (ARG)
  1265 ;;               ___lbdiv (ARG)
  1266 ;;                 ___lbmod (ARG)
  1267 ;;           ___awdiv (ARG)
  1268 ;;             ___awmod (ARG)
  1269 ;;           ___awmod (ARG)
  1270 ;;           ___bmul (ARG)
  1271 ;;             ___lbmod (ARG)
  1272 ;;             ___lbdiv (ARG)
  1273 ;;               ___lbmod (ARG)
  1274 ;;           ___lbdiv (ARG)
  1275 ;;             ___lbmod (ARG)
  1276 ;;           ___lbmod (ARG)
  1277 ;;     ___ftadd
  1278 ;;       ___ftpack
  1279 ;;       ___lbmod (ARG)
  1280 ;;       ___bmul (ARG)
  1281 ;;         ___lbmod (ARG)
  1282 ;;         ___lbdiv (ARG)
  1283 ;;           ___lbmod (ARG)
  1284 ;;       ___lbdiv (ARG)
  1285 ;;         ___lbmod (ARG)
  1286 ;;       ___ftmul (ARG)
  1287 ;;         ___ftpack
  1288 ;;         ___awtoft (ARG)
  1289 ;;           ___ftpack
  1290 ;;         ___fttol (ARG)
  1291 ;;           ___ftpack (ARG)
  1292 ;;           ___awmod (ARG)
  1293 ;;           ___awdiv (ARG)
  1294 ;;             ___awmod (ARG)
  1295 ;;           ___bmul (ARG)
  1296 ;;             ___lbmod (ARG)
  1297 ;;             ___lbdiv (ARG)
  1298 ;;               ___lbmod (ARG)
  1299 ;;         ___awdiv (ARG)
  1300 ;;           ___awmod (ARG)
  1301 ;;         ___awmod (ARG)
  1302 ;;         ___bmul (ARG)
  1303 ;;           ___lbmod (ARG)
  1304 ;;           ___lbdiv (ARG)
  1305 ;;             ___lbmod (ARG)
  1306 ;;         ___lbdiv (ARG)
  1307 ;;           ___lbmod (ARG)
  1308 ;;         ___lbmod (ARG)
  1309 ;;     ___fttol
  1310 ;;       ___ftpack (ARG)
  1311 ;;       ___awmod (ARG)
  1312 ;;       ___awdiv (ARG)
  1313 ;;         ___awmod (ARG)
  1314 ;;       ___bmul (ARG)
  1315 ;;         ___lbmod (ARG)
  1316 ;;         ___lbdiv (ARG)
  1317 ;;           ___lbmod (ARG)
  1318 ;;     __div_to_l_
  1319 ;;     __tdiv_to_l_
  1320 ;;     ___lltoft
  1321 ;;       ___ftpack
  1322 ;;     ___ftsub
  1323 ;;       ___ftadd
  1324 ;;         ___ftpack
  1325 ;;         ___lbmod (ARG)
  1326 ;;         ___bmul (ARG)
  1327 ;;           ___lbmod (ARG)
  1328 ;;           ___lbdiv (ARG)
  1329 ;;             ___lbmod (ARG)
  1330 ;;         ___lbdiv (ARG)
  1331 ;;           ___lbmod (ARG)
  1332 ;;         ___ftmul (ARG)
  1333 ;;           ___ftpack
  1334 ;;           ___awtoft (ARG)
  1335 ;;             ___ftpack
  1336 ;;           ___fttol (ARG)
  1337 ;;             ___ftpack (ARG)
  1338 ;;             ___awmod (ARG)
  1339 ;;             ___awdiv (ARG)
  1340 ;;               ___awmod (ARG)
  1341 ;;             ___bmul (ARG)
  1342 ;;               ___lbmod (ARG)
  1343 ;;               ___lbdiv (ARG)
  1344 ;;                 ___lbmod (ARG)
  1345 ;;           ___awdiv (ARG)
  1346 ;;             ___awmod (ARG)
  1347 ;;           ___awmod (ARG)
  1348 ;;           ___bmul (ARG)
  1349 ;;             ___lbmod (ARG)
  1350 ;;             ___lbdiv (ARG)
  1351 ;;               ___lbmod (ARG)
  1352 ;;           ___lbdiv (ARG)
  1353 ;;             ___lbmod (ARG)
  1354 ;;           ___lbmod (ARG)
  1355 ;;       ___lltoft (ARG)
  1356 ;;         ___ftpack
  1357 ;;     ___lldiv
  1358 ;;     ___llmod
  1359 ;;       ___lldiv (ARG)
  1360 ;;   _lcd_goto
  1361 ;;     _lcd_write
  1362 ;;       _pause
  1363 ;;         _msecbase
  1364 ;;   _lcd_puts
  1365 ;;     _lcd_write
  1366 ;;       _pause
  1367 ;;         _msecbase
  1368 ;;
  1369 ;; Address spaces:
  1370 ;;Name               Size   Autos  Total    Cost      Usage
  1371 ;;BITCOMMON            E      0       0       0        0.0%
  1372 ;;EEDATA             100      0       0       0        0.0%
  1373 ;;NULL                 0      0       0       0        0.0%
  1374 ;;CODE                 0      0       0       0        0.0%
  1375 ;;COMMON               E      E       E       1      100.0%
  1376 ;;BITSFR0              0      0       0       1        0.0%
  1377 ;;SFR0                 0      0       0       1        0.0%
  1378 ;;BITSFR1              0      0       0       2        0.0%
  1379 ;;SFR1                 0      0       0       2        0.0%
  1380 ;;STACK                0      0       4       2        0.0%
  1381 ;;ABS                  0      0      8C       3        0.0%
  1382 ;;BITBANK0            50      0       0       4        0.0%
  1383 ;;BITSFR3              0      0       0       4        0.0%
  1384 ;;SFR3                 0      0       0       4        0.0%
  1385 ;;BANK0               50     3C      3C       5       75.0%
  1386 ;;BITSFR2              0      0       0       5        0.0%
  1387 ;;SFR2                 0      0       0       5        0.0%
  1388 ;;BITBANK1            50      0       0       6        0.0%
  1389 ;;BANK1               50     2C      42       7       82.5%
  1390 ;;BITBANK3            60      0       0       8        0.0%
  1391 ;;BANK3               60      0       0       9        0.0%
  1392 ;;BITBANK2            60      0       0      10        0.0%
  1393 ;;BANK2               60      0       0      11        0.0%
  1394 ;;DATA                 0      0      90      12        0.0%
  1395                           
  1396                           
  1397 ;; *************** function _main *****************
  1398 ;; Defined at:
  1399 ;;		line 94 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  x               1   43[BANK1 ] unsigned char 
  1404 ;;  x               1   42[BANK1 ] unsigned char 
  1405 ;;  num_f           2    0        int 
  1406 ;;  i               2   40[BANK1 ] int 
  1407 ;;  i               2   38[BANK1 ] int 
  1408 ;;  buffer         15   23[BANK1 ] unsigned char [15]
  1409 ;;  pos             1    0        unsigned char 
  1410 ;;  char_pwm        1    0        unsigned char 
  1411 ;;  char_recibid    1    0        unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;		None               void
  1414 ;; Registers used:
  1415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1416 ;; Tracked objects:
  1417 ;;		On entry : 17F/0
  1418 ;;		On exit  : 160/0
  1419 ;;		Unchanged: FFE00/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         0       0       0       0       0
  1422 ;;      Locals:         0       0      21       0       0
  1423 ;;      Temps:          0       1       0       0       0
  1424 ;;      Totals:         0       1      21       0       0
  1425 ;;Total ram usage:       22 bytes
  1426 ;; Hardware stack levels required when called:    4
  1427 ;; This function calls:
  1428 ;;		_pause
  1429 ;;		_lcd_write
  1430 ;;		_lcd_clear
  1431 ;;		_putch
  1432 ;;		_gets_Serial
  1433 ;;		___awtoft
  1434 ;;		___ftmul
  1435 ;;		_sprintf
  1436 ;;		_lcd_goto
  1437 ;;		_lcd_puts
  1438 ;; This function is called by:
  1439 ;;		Startup code after reset
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442  0E3C                     _main:	
  1443                           
  1444                           ;C_PuertoSerial_usart.c: 95: ANSEL=0x00;
  1445                           
  1446                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1447  0E3C  1683               	bsf	3,5	;RP0=1, select bank3
  1448  0E3D  1703               	bsf	3,6	;RP1=1, select bank3
  1449  0E3E  0188               	clrf	8	;volatile
  1450                           
  1451                           ;C_PuertoSerial_usart.c: 96: ANSELH=0x00;
  1452  0E3F  0189               	clrf	9	;volatile
  1453                           
  1454                           ;C_PuertoSerial_usart.c: 98: TRISA = 0x00;
  1455  0E40  1303               	bcf	3,6	;RP1=0, select bank1
  1456  0E41  0185               	clrf	5	;volatile
  1457                           
  1458                           ;C_PuertoSerial_usart.c: 99: TRISB = 0x00;
  1459  0E42  0186               	clrf	6	;volatile
  1460                           
  1461                           ;C_PuertoSerial_usart.c: 100: TRISD = 0x00;
  1462  0E43  0188               	clrf	8	;volatile
  1463                           
  1464                           ;C_PuertoSerial_usart.c: 103: TRISE=0x03;
  1465  0E44  3003               	movlw	3
  1466  0E45  0089               	movwf	9	;volatile
  1467                           
  1468                           ;C_PuertoSerial_usart.c: 104: ADCON1=0b00000000;
  1469  0E46  019F               	clrf	31	;volatile
  1470                           
  1471                           ;C_PuertoSerial_usart.c: 105: PR2=0xFF;
  1472  0E47  30FF               	movlw	255
  1473  0E48  0092               	movwf	18	;volatile
  1474                           
  1475                           ;C_PuertoSerial_usart.c: 107: CCP1CON = 0xC0;
  1476  0E49  30C0               	movlw	192
  1477  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0E4B  0097               	movwf	23	;volatile
  1479                           
  1480                           ;C_PuertoSerial_usart.c: 108: CCP2CON = 0xC0;
  1481  0E4C  009D               	movwf	29	;volatile
  1482  0E4D  300F               	movlw	15
  1483                           
  1484                           ;C_PuertoSerial_usart.c: 109: T2CKPS1 = 1;
  1485  0E4E  1492               	bsf	18,1
  1486                           
  1487                           ;C_PuertoSerial_usart.c: 110: T2CKPS0 = 1;
  1488  0E4F  1412               	bsf	18,0
  1489                           
  1490                           ;C_PuertoSerial_usart.c: 111: TMR2ON = 1;
  1491  0E50  1512               	bsf	18,2
  1492                           
  1493                           ;C_PuertoSerial_usart.c: 114: RA7=0;
  1494  0E51  1385               	bcf	5,7
  1495                           
  1496                           ;C_PuertoSerial_usart.c: 115: RA6=0;
  1497  0E52  1305               	bcf	5,6
  1498                           
  1499                           ;C_PuertoSerial_usart.c: 116: RE1=0;
  1500  0E53  1089               	bcf	9,1
  1501                           
  1502                           ;C_PuertoSerial_usart.c: 118: pause(15);
  1503  0E54  00F0               	movwf	?_pause
  1504  0E55  01F1               	clrf	?_pause+1
  1505  0E56  120A  158A  22BC   	fcall	_pause
      +       120A  158A         
  1506                           
  1507                           ;C_PuertoSerial_usart.c: 119: PORTD=init_value;
  1508  0E5B  3003               	movlw	3
  1509  0E5C  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0E5D  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0E5E  0088               	movwf	8	;volatile
  1512  0E5F  300A               	movlw	10
  1513                           
  1514                           ;C_PuertoSerial_usart.c: 120: ((RA6=1),(RA6=0));
  1515  0E60  1705               	bsf	5,6
  1516  0E61  1305               	bcf	5,6
  1517                           
  1518                           ;C_PuertoSerial_usart.c: 121: pause(10);
  1519  0E62  00F0               	movwf	?_pause
  1520  0E63  01F1               	clrf	?_pause+1
  1521  0E64  120A  158A  22BC   	fcall	_pause
      +       120A  158A         
  1522                           
  1523                           ;C_PuertoSerial_usart.c: 122: ((RA6=1),(RA6=0));
  1524  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0E6B  300A               	movlw	10
  1527  0E6C  1705               	bsf	5,6
  1528  0E6D  1305               	bcf	5,6
  1529                           
  1530                           ;C_PuertoSerial_usart.c: 123: pause(10);
  1531  0E6E  00F0               	movwf	?_pause
  1532  0E6F  01F1               	clrf	?_pause+1
  1533  0E70  120A  158A  22BC   	fcall	_pause
      +       120A  158A         
  1534                           
  1535                           ;C_PuertoSerial_usart.c: 124: ((RA6=1),(RA6=0));
  1536  0E75  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0E76  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0E77  300A               	movlw	10
  1539  0E78  1705               	bsf	5,6
  1540  0E79  1305               	bcf	5,6
  1541                           
  1542                           ;C_PuertoSerial_usart.c: 125: pause(10);
  1543  0E7A  00F0               	movwf	?_pause
  1544  0E7B  01F1               	clrf	?_pause+1
  1545  0E7C  120A  158A  22BC   	fcall	_pause
      +       120A  158A         
  1546                           
  1547                           ;C_PuertoSerial_usart.c: 126: PORTD=2;
  1548  0E81  3002               	movlw	2
  1549  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0E84  0088               	movwf	8	;volatile
  1552  0E85  3028               	movlw	40
  1553                           
  1554                           ;C_PuertoSerial_usart.c: 127: ((RA6=1),(RA6=0));
  1555  0E86  1705               	bsf	5,6
  1556  0E87  1305               	bcf	5,6
  1557                           
  1558                           ;C_PuertoSerial_usart.c: 129: lcd_write(0x28);
  1559  0E88  120A  158A  22AA   	fcall	_lcd_write
      +       120A  158A         
  1560                           
  1561                           ;C_PuertoSerial_usart.c: 130: lcd_write(0xC);
  1562  0E8D  300C               	movlw	12
  1563  0E8E  120A  158A  22AA   	fcall	_lcd_write
      +       120A  158A         
  1564                           
  1565                           ;C_PuertoSerial_usart.c: 131: lcd_clear();
  1566  0E93  120A  158A  2290   	fcall	_lcd_clear
      +       120A  158A         
  1567                           
  1568                           ;C_PuertoSerial_usart.c: 132: lcd_write(0x06);
  1569  0E98  3006               	movlw	6
  1570  0E99  120A  158A  22AA   	fcall	_lcd_write
      +       120A  158A         
  1571                           
  1572                           ;C_PuertoSerial_usart.c: 135: TRISC7=1;
  1573  0E9E  1683               	bsf	3,5	;RP0=1, select bank1
  1574  0E9F  3070               	movlw	112
  1575  0EA0  1787               	bsf	7,7
  1576                           
  1577                           ;C_PuertoSerial_usart.c: 136: TRISC6=0;
  1578  0EA1  1307               	bcf	7,6
  1579                           
  1580                           ;C_PuertoSerial_usart.c: 137: OSCCON=0x70;
  1581  0EA2  008F               	movwf	15	;volatile
  1582                           
  1583                           ;C_PuertoSerial_usart.c: 138: SPBRG=12;
  1584  0EA3  300C               	movlw	12
  1585  0EA4  0099               	movwf	25	;volatile
  1586                           
  1587                           ;C_PuertoSerial_usart.c: 139: RCSTA=0x90;
  1588  0EA5  3090               	movlw	144
  1589  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0EA7  0098               	movwf	24	;volatile
  1591                           
  1592                           ;C_PuertoSerial_usart.c: 140: TXSTA=0x20;
  1593  0EA8  3020               	movlw	32
  1594  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  1595  0EAA  0098               	movwf	24	;volatile
  1596                           
  1597                           ;C_PuertoSerial_usart.c: 141: BAUDCTL=0x00;
  1598  0EAB  1703               	bsf	3,6	;RP1=1, select bank3
  1599  0EAC  0187               	clrf	7	;volatile
  1600                           
  1601                           ;C_PuertoSerial_usart.c: 142: pause(500);
  1602  0EAD  30F4               	movlw	244
  1603  0EAE  00F0               	movwf	?_pause
  1604  0EAF  3001               	movlw	1
  1605  0EB0  00F1               	movwf	?_pause+1
  1606  0EB1  120A  158A  22BC   	fcall	_pause
      +       120A  158A         
  1607                           
  1608                           ;C_PuertoSerial_usart.c: 145: PORTA=0x01;
  1609  0EB6  3001               	movlw	1
  1610  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0EB9  0085               	movwf	5	;volatile
  1613                           
  1614                           ;C_PuertoSerial_usart.c: 150: char char_recibido;
  1615                           ;C_PuertoSerial_usart.c: 151: char char_pwm;
  1616                           ;C_PuertoSerial_usart.c: 152: char buffer[15];
  1617                           ;C_PuertoSerial_usart.c: 155: unsigned char pos=0;
  1618  0EBA  30FF               	movlw	255
  1619  0EBB  0085               	movwf	5
  1620                           
  1621                           ;C_PuertoSerial_usart.c: 156: for(int i=48; i<58; i++){
  1622  0EBC  3030               	movlw	48
  1623  0EBD  1683               	bsf	3,5	;RP0=1, select bank1
  1624  0EBE  00C6               	movwf	main@i^(0+128)
  1625  0EBF  01C7               	clrf	(main@i+1)^(0+128)
  1626  0EC0                     l5577:	
  1627                           
  1628                           ;C_PuertoSerial_usart.c: 157: putch(i);
  1629  0EC0  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0EC1  1303               	bcf	3,6	;RP1=0, select bank1
  1631  0EC2  0846               	movf	main@i^(0+128),w
  1632  0EC3  120A  158A  21FC   	fcall	_putch
      +       120A  158A         
  1633                           
  1634                           ;C_PuertoSerial_usart.c: 158: pause(20);
  1635  0EC8  3014               	movlw	20
  1636  0EC9  00F0               	movwf	?_pause
  1637  0ECA  01F1               	clrf	?_pause+1
  1638  0ECB  120A  158A  22BC   	fcall	_pause
      +       120A  158A         
  1639  0ED0  1683               	bsf	3,5	;RP0=1, select bank1
  1640  0ED1  1303               	bcf	3,6	;RP1=0, select bank1
  1641  0ED2  0AC6               	incf	main@i^(0+128),f
  1642  0ED3  1903               	skipnz
  1643  0ED4  0AC7               	incf	(main@i+1)^(0+128),f
  1644  0ED5  0847               	movf	(main@i+1)^(0+128),w
  1645  0ED6  3A80               	xorlw	128
  1646  0ED7  00FF               	movwf	127
  1647  0ED8  3080               	movlw	128
  1648  0ED9  027F               	subwf	127,w
  1649  0EDA  1D03               	skipz
  1650  0EDB  2EDE               	goto	u2875
  1651  0EDC  303A               	movlw	58
  1652  0EDD  0246               	subwf	main@i^(0+128),w
  1653  0EDE                     u2875:	
  1654  0EDE  1C03               	skipc
  1655  0EDF  2EC0               	goto	l5577
  1656                           
  1657                           ;C_PuertoSerial_usart.c: 159: }
  1658                           ;C_PuertoSerial_usart.c: 160: putch(0x0D);
  1659  0EE0  300D               	movlw	13
  1660  0EE1  120A  158A  21FC   	fcall	_putch
      +       120A  158A         
  1661                           
  1662                           ;C_PuertoSerial_usart.c: 161: putch(0x0A);
  1663  0EE6  300A               	movlw	10
  1664  0EE7  120A  158A  21FC   	fcall	_putch
      +       120A  158A         
  1665                           
  1666                           ;C_PuertoSerial_usart.c: 163: for(int i=97; i<123; i++){
  1667  0EEC  3061               	movlw	97
  1668  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  1669  0EEE  00C8               	movwf	main@i_1825^(0+128)
  1670  0EEF  01C9               	clrf	(main@i_1825+1)^(0+128)
  1671  0EF0                     l5591:	
  1672                           
  1673                           ;C_PuertoSerial_usart.c: 164: putch(i);
  1674  0EF0  1683               	bsf	3,5	;RP0=1, select bank1
  1675  0EF1  1303               	bcf	3,6	;RP1=0, select bank1
  1676  0EF2  0848               	movf	main@i_1825^(0+128),w
  1677  0EF3  120A  158A  21FC   	fcall	_putch
      +       120A  158A         
  1678                           
  1679                           ;C_PuertoSerial_usart.c: 165: pause(20);
  1680  0EF8  3014               	movlw	20
  1681  0EF9  00F0               	movwf	?_pause
  1682  0EFA  01F1               	clrf	?_pause+1
  1683  0EFB  120A  158A  22BC   	fcall	_pause
      +       120A  158A         
  1684  0F00  1683               	bsf	3,5	;RP0=1, select bank1
  1685  0F01  1303               	bcf	3,6	;RP1=0, select bank1
  1686  0F02  0AC8               	incf	main@i_1825^(0+128),f
  1687  0F03  1903               	skipnz
  1688  0F04  0AC9               	incf	(main@i_1825+1)^(0+128),f
  1689  0F05  0849               	movf	(main@i_1825+1)^(0+128),w
  1690  0F06  3A80               	xorlw	128
  1691  0F07  00FF               	movwf	127
  1692  0F08  3080               	movlw	128
  1693  0F09  027F               	subwf	127,w
  1694  0F0A  1D03               	skipz
  1695  0F0B  2F0E               	goto	u2885
  1696  0F0C  307B               	movlw	123
  1697  0F0D  0248               	subwf	main@i_1825^(0+128),w
  1698  0F0E                     u2885:	
  1699  0F0E  1C03               	skipc
  1700  0F0F  2EF0               	goto	l5591
  1701                           
  1702                           ;C_PuertoSerial_usart.c: 166: }
  1703                           ;C_PuertoSerial_usart.c: 167: putch(0x0D);
  1704  0F10  300D               	movlw	13
  1705  0F11  120A  158A  21FC   	fcall	_putch
      +       120A  158A         
  1706                           
  1707                           ;C_PuertoSerial_usart.c: 168: putch(0x0A);
  1708  0F16  300A               	movlw	10
  1709  0F17  120A  158A  21FC   	fcall	_putch
      +       120A  158A         
  1710                           
  1711                           ;C_PuertoSerial_usart.c: 169: PORTA=0x00;
  1712  0F1C  0185               	clrf	5	;volatile
  1713                           
  1714                           ;C_PuertoSerial_usart.c: 170: pause(1000);
  1715  0F1D  30E8               	movlw	232
  1716  0F1E  00F0               	movwf	?_pause
  1717  0F1F  3003               	movlw	3
  1718  0F20  00F1               	movwf	?_pause+1
  1719  0F21  120A  158A  22BC   	fcall	_pause
      +       120A  158A         
  1720                           
  1721                           ;C_PuertoSerial_usart.c: 175: gets_Serial(&buffer);
  1722  0F26  30B7               	movlw	main@buffer& (0+255)
  1723  0F27  120A  158A  2249   	fcall	_gets_Serial
      +       120A  158A         
  1724  0F2C                     l5605:	
  1725                           
  1726                           ;C_PuertoSerial_usart.c: 178: lcd_clear();
  1727  0F2C  120A  158A  2290   	fcall	_lcd_clear
      +       120A  158A         
  1728                           
  1729                           ;C_PuertoSerial_usart.c: 180: ADCON0=0b11010101;
  1730  0F31  30D5               	movlw	213
  1731  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0F34  009F               	movwf	31	;volatile
  1734                           
  1735                           ;C_PuertoSerial_usart.c: 181: GO_DONE = 1;
  1736  0F35  149F               	bsf	31,1
  1737  0F36                     l1090:	
  1738                           ;C_PuertoSerial_usart.c: 182: while (GO_DONE ==1);
  1739                           
  1740  0F36  189F               	btfsc	31,1
  1741  0F37  2F36               	goto	l1090
  1742                           
  1743                           ;C_PuertoSerial_usart.c: 183: nin=(ADRESH<<2)|(ADRESL>>6);
  1744  0F38  081E               	movf	30,w	;volatile
  1745  0F39  1683               	bsf	3,5	;RP0=1, select bank1
  1746  0F3A  00CF               	movwf	_nin^(0+128)
  1747  0F3B  01D0               	clrf	(_nin+1)^(0+128)
  1748  0F3C  1003               	clrc
  1749  0F3D  0DCF               	rlf	_nin^(0+128),f
  1750  0F3E  0DD0               	rlf	(_nin+1)^(0+128),f
  1751  0F3F  1003               	clrc
  1752  0F40  0DCF               	rlf	_nin^(0+128),f
  1753  0F41  0DD0               	rlf	(_nin+1)^(0+128),f
  1754  0F42  081E               	movf	30,w	;volatile
  1755  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  1756  0F44  00DB               	movwf	??_main
  1757  0F45  3006               	movlw	6
  1758  0F46                     u2905:	
  1759  0F46  1003               	clrc
  1760  0F47  0CDB               	rrf	??_main,f
  1761  0F48  3EFF               	addlw	-1
  1762  0F49  1D03               	skipz
  1763  0F4A  2F46               	goto	u2905
  1764  0F4B  085B               	movf	??_main,w
  1765  0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  1766  0F4D  04CF               	iorwf	_nin^(0+128),f
  1767                           
  1768                           ;C_PuertoSerial_usart.c: 184: CCPR1L=ADRESH;
  1769  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  1770  0F4F  081E               	movf	30,w	;volatile
  1771  0F50  0095               	movwf	21	;volatile
  1772                           
  1773                           ;C_PuertoSerial_usart.c: 187: int num_f = 255;
  1774  0F51  3028               	movlw	40
  1775  0F52  00AD               	movwf	?___ftmul
  1776  0F53  30A0               	movlw	160
  1777  0F54  00AE               	movwf	?___ftmul+1
  1778  0F55  303B               	movlw	59
  1779  0F56  00AF               	movwf	?___ftmul+2
  1780  0F57  1683               	bsf	3,5	;RP0=1, select bank1
  1781  0F58  0850               	movf	(_nin+1)^(0+128),w
  1782  0F59  00F9               	movwf	?___awtoft+1
  1783  0F5A  084F               	movf	_nin^(0+128),w
  1784  0F5B  00F8               	movwf	?___awtoft
  1785  0F5C  120A  158A  220C   	fcall	___awtoft
      +       120A  158A         
  1786  0F61  0878               	movf	?___awtoft,w
  1787  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0F63  00B0               	movwf	?___ftmul+3
  1789  0F64  0879               	movf	?___awtoft+1,w
  1790  0F65  00B1               	movwf	?___ftmul+4
  1791  0F66  087A               	movf	?___awtoft+2,w
  1792  0F67  00B2               	movwf	?___ftmul+5
  1793  0F68  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  1794  0F6D  082D               	movf	?___ftmul,w
  1795  0F6E  1683               	bsf	3,5	;RP0=1, select bank1
  1796  0F6F  00CC               	movwf	_num^(0+128)
  1797  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0F71  082E               	movf	?___ftmul+1,w
  1799  0F72  1683               	bsf	3,5	;RP0=1, select bank1
  1800  0F73  00CD               	movwf	(_num+1)^(0+128)
  1801  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0F75  082F               	movf	?___ftmul+2,w
  1803  0F76  1683               	bsf	3,5	;RP0=1, select bank1
  1804  0F77  00CE               	movwf	(_num+2)^(0+128)
  1805                           
  1806                           ;C_PuertoSerial_usart.c: 189: sprintf(buffer,"El valor es: %f  ", num);
  1807  0F78  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1808  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  1809  0F7A  00D2               	movwf	?_sprintf
  1810  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  1811  0F7C  084C               	movf	_num^(0+128),w
  1812  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0F7E  00D3               	movwf	?_sprintf+1
  1814  0F7F  1683               	bsf	3,5	;RP0=1, select bank1
  1815  0F80  084D               	movf	(_num+1)^(0+128),w
  1816  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0F82  00D4               	movwf	?_sprintf+2
  1818  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  1819  0F84  084E               	movf	(_num+2)^(0+128),w
  1820  0F85  1283               	bcf	3,5	;RP0=0, select bank0
  1821  0F86  00D5               	movwf	?_sprintf+3
  1822  0F87  30B7               	movlw	main@buffer& (0+255)
  1823  0F88  120A  118A  200E   	fcall	_sprintf
      +       120A  158A         
  1824                           
  1825                           ;C_PuertoSerial_usart.c: 192: for (char x = 0; x<17; x++)
  1826  0F8D  01CA               	clrf	main@x^(0+128)
  1827  0F8E                     l5627:	
  1828                           
  1829                           ;C_PuertoSerial_usart.c: 193: {
  1830                           ;C_PuertoSerial_usart.c: 194: putch (buffer[x]);
  1831  0F8E  084A               	movf	main@x^(0+128),w
  1832  0F8F  3EB7               	addlw	main@buffer& (0+255)
  1833  0F90  0084               	movwf	4
  1834  0F91  0800               	movf	0,w
  1835  0F92  120A  158A  21FC   	fcall	_putch
      +       120A  158A         
  1836  0F97  1683               	bsf	3,5	;RP0=1, select bank1
  1837  0F98  3011               	movlw	17
  1838  0F99  0ACA               	incf	main@x^(0+128),f
  1839  0F9A  024A               	subwf	main@x^(0+128),w
  1840  0F9B  1C03               	skipc
  1841  0F9C  2F8E               	goto	l5627
  1842                           
  1843                           ;C_PuertoSerial_usart.c: 195: }
  1844                           ;C_PuertoSerial_usart.c: 196: pause(200);
  1845  0F9D  30C8               	movlw	200
  1846  0F9E  00F0               	movwf	?_pause
  1847  0F9F  01F1               	clrf	?_pause+1
  1848  0FA0  120A  158A  22BC   	fcall	_pause
      +       120A  158A         
  1849                           
  1850                           ;C_PuertoSerial_usart.c: 198: putch(0x0D);
  1851  0FA5  300D               	movlw	13
  1852  0FA6  120A  158A  21FC   	fcall	_putch
      +       120A  158A         
  1853                           
  1854                           ;C_PuertoSerial_usart.c: 199: putch(0x0A);
  1855  0FAB  300A               	movlw	10
  1856  0FAC  120A  158A  21FC   	fcall	_putch
      +       120A  158A         
  1857                           
  1858                           ;C_PuertoSerial_usart.c: 202: gets_Serial(&input);
  1859  0FB1  30D1               	movlw	_input& (0+255)
  1860  0FB2  120A  158A  2249   	fcall	_gets_Serial
      +       120A  158A         
  1861                           
  1862                           ;C_PuertoSerial_usart.c: 205: for (char x = 0; x<15; x++)
  1863  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0FB9  01CB               	clrf	main@x_1829^(0+128)
  1866  0FBA                     l5643:	
  1867                           
  1868                           ;C_PuertoSerial_usart.c: 206: {
  1869                           ;C_PuertoSerial_usart.c: 207: putch (input[x]);
  1870  0FBA  084B               	movf	main@x_1829^(0+128),w
  1871  0FBB  3ED1               	addlw	_input& (0+255)
  1872  0FBC  0084               	movwf	4
  1873  0FBD  1383               	bcf	3,7	;select IRP bank1
  1874  0FBE  0800               	movf	0,w
  1875  0FBF  120A  158A  21FC   	fcall	_putch
      +       120A  158A         
  1876  0FC4  1683               	bsf	3,5	;RP0=1, select bank1
  1877  0FC5  300F               	movlw	15
  1878  0FC6  0ACB               	incf	main@x_1829^(0+128),f
  1879  0FC7  024B               	subwf	main@x_1829^(0+128),w
  1880  0FC8  1C03               	skipc
  1881  0FC9  2FBA               	goto	l5643
  1882                           
  1883                           ;C_PuertoSerial_usart.c: 208: }
  1884                           ;C_PuertoSerial_usart.c: 209: pause(200);
  1885  0FCA  30C8               	movlw	200
  1886  0FCB  00F0               	movwf	?_pause
  1887  0FCC  01F1               	clrf	?_pause+1
  1888  0FCD  120A  158A  22BC   	fcall	_pause
      +       120A  158A         
  1889                           
  1890                           ;C_PuertoSerial_usart.c: 212: lcd_goto(0);
  1891  0FD2  3000               	movlw	0
  1892  0FD3  120A  158A  2289   	fcall	_lcd_goto
      +       120A  158A         
  1893                           
  1894                           ;C_PuertoSerial_usart.c: 213: lcd_puts(input);
  1895  0FD8  30D1               	movlw	_input& (0+255)
  1896  0FD9  120A  158A  229B   	fcall	_lcd_puts
      +       120A  158A         
  1897                           
  1898                           ;C_PuertoSerial_usart.c: 214: lcd_goto(0x40);
  1899  0FDE  3040               	movlw	64
  1900  0FDF  120A  158A  2289   	fcall	_lcd_goto
      +       120A  158A         
  1901                           
  1902                           ;C_PuertoSerial_usart.c: 215: lcd_puts(buffer);
  1903  0FE4  30B7               	movlw	main@buffer& (0+255)
  1904  0FE5  120A  158A  229B   	fcall	_lcd_puts
      +       120A  158A         
  1905                           
  1906                           ;C_PuertoSerial_usart.c: 217: pause(2000);
  1907  0FEA  30D0               	movlw	208
  1908  0FEB  00F0               	movwf	?_pause
  1909  0FEC  3007               	movlw	7
  1910  0FED  00F1               	movwf	?_pause+1
  1911  0FEE  120A  158A  22BC   	fcall	_pause
      +       120A  158A         
  1912                           
  1913                           ;C_PuertoSerial_usart.c: 219: putch(0x0D);
  1914  0FF3  300D               	movlw	13
  1915  0FF4  120A  158A  21FC   	fcall	_putch
      +       120A  158A         
  1916                           
  1917                           ;C_PuertoSerial_usart.c: 220: putch(0x0A);
  1918  0FF9  300A               	movlw	10
  1919  0FFA  120A  158A  21FC   	fcall	_putch
      +       120A  158A         
  1920  0FFF  2F2C               	goto	l5605
  1921  1000                     __end_of_main:	
  1922                           
  1923                           	psect	text549
  1924  000E                     __ptext549:	
  1925 ;; =============== function _main ends ============
  1926                           
  1927                           
  1928 ;; *************** function _sprintf *****************
  1929 ;; Defined at:
  1930 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  sp              1    wreg     PTR unsigned char 
  1933 ;;		 -> main@buffer(15), 
  1934 ;;  f               1   50[BANK0 ] PTR const unsigned char 
  1935 ;;		 -> STR_1(18), 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  sp              1   16[BANK1 ] PTR unsigned char 
  1938 ;;		 -> main@buffer(15), 
  1939 ;;  _val            4    9[BANK1 ] struct .
  1940 ;;  fval            3   19[BANK1 ] struct .
  1941 ;;  integ           3   13[BANK1 ] struct .
  1942 ;;  ival            3    0        struct .
  1943 ;;  exp             2   17[BANK1 ] int 
  1944 ;;  prec            2    7[BANK1 ] int 
  1945 ;;  flag            2    5[BANK1 ] unsigned short 
  1946 ;;  width           2    0        int 
  1947 ;;  c               1   22[BANK1 ] char 
  1948 ;;  ap              1    4[BANK1 ] PTR void [1]
  1949 ;;		 -> ?_sprintf(2), 
  1950 ;;  d               1    0        unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  2   50[BANK0 ] int 
  1953 ;; Registers used:
  1954 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 60/0
  1957 ;;		On exit  : 160/20
  1958 ;;		Unchanged: FFE00/0
  1959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1960 ;;      Params:         0       4       0       0       0
  1961 ;;      Locals:         0       0      23       0       0
  1962 ;;      Temps:          0       5       0       0       0
  1963 ;;      Totals:         0       9      23       0       0
  1964 ;;Total ram usage:       32 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; Hardware stack levels required when called:    3
  1967 ;; This function calls:
  1968 ;;		___ftge
  1969 ;;		___ftneg
  1970 ;;		___wmul
  1971 ;;		___awdiv
  1972 ;;		_scale
  1973 ;;		___ftmul
  1974 ;;		_fround
  1975 ;;		___ftadd
  1976 ;;		___fttol
  1977 ;;		__div_to_l_
  1978 ;;		__tdiv_to_l_
  1979 ;;		___lltoft
  1980 ;;		___ftsub
  1981 ;;		___lldiv
  1982 ;;		___llmod
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987  000E                     _sprintf:	
  1988                           
  1989                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1990                           ;sprintf@sp stored from wreg
  1991  000E  1683               	bsf	3,5	;RP0=1, select bank1
  1992  000F  00B0               	movwf	sprintf@sp^(0+128)
  1993  0010  3053               	movlw	(?_sprintf+1)& (0+255)
  1994  0011  00A4               	movwf	sprintf@ap^(0+128)
  1995  0012                     l5497:	
  1996  0012  1283               	bcf	3,5	;RP0=0, select bank0
  1997  0013  0852               	movf	sprintf@f,w
  1998  0014  0AD2               	incf	sprintf@f,f
  1999  0015  0084               	movwf	4
  2000  0016  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2001  001B  1683               	bsf	3,5	;RP0=1, select bank1
  2002  001C  00B6               	movwf	sprintf@c^(0+128)
  2003  001D  08B6               	movf	sprintf@c^(0+128),f
  2004  001E  1903               	btfsc	3,2
  2005  001F  2B2C               	goto	l5499
  2006  0020  0836               	movf	sprintf@c^(0+128),w
  2007  0021  3A25               	xorlw	37
  2008  0022  1903               	skipnz
  2009  0023  2828               	goto	l5345
  2010  0024  0830               	movf	sprintf@sp^(0+128),w
  2011  0025  0084               	movwf	4
  2012  0026  0836               	movf	sprintf@c^(0+128),w
  2013  0027  2B28               	goto	L4
  2014  0028                     l5345:	
  2015  0028  01A5               	clrf	sprintf@flag^(0+128)
  2016  0029  01A6               	clrf	(sprintf@flag+1)^(0+128)
  2017  002A  282D               	goto	l5349
  2018  002B                     l1160:	
  2019  002B  1526               	bsf	(sprintf@flag^(0+128)+1),2
  2020  002C  283F               	goto	l5351
  2021  002D                     l5349:	
  2022  002D  1283               	bcf	3,5	;RP0=0, select bank0
  2023  002E  0852               	movf	sprintf@f,w
  2024  002F  0AD2               	incf	sprintf@f,f
  2025  0030  0084               	movwf	4
  2026  0031  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2027  0036  1683               	bsf	3,5	;RP0=1, select bank1
  2028  0037  00B6               	movwf	sprintf@c^(0+128)
  2029                           
  2030                           ; Switch size 1, requested type "space"
  2031                           ; Number of cases is 2, Range of values is 0 to 102
  2032                           ; switch strategies available:
  2033                           ; Name         Instructions Cycles
  2034                           ; simple_byte            7     4 (average)
  2035                           ; jumptable            260     6 (fixed)
  2036                           ; rangetable           107     6 (fixed)
  2037                           ; spacedrange          212     9 (fixed)
  2038                           ; locatedrange         103     3 (fixed)
  2039                           ;	Chosen strategy is simple_byte
  2040  0038  3A00               	xorlw	0	; case 0
  2041  0039  1903               	skipnz
  2042  003A  2B2C               	goto	l5499
  2043  003B  3A66               	xorlw	102	; case 102
  2044  003C  1903               	skipnz
  2045  003D  282B               	goto	l1160
  2046  003E  2812               	goto	l5497
  2047  003F                     l5351:	
  2048  003F  1283               	bcf	3,5	;RP0=0, select bank0
  2049  0040  3007               	movlw	7
  2050  0041  01D6               	clrf	??_sprintf
  2051  0042  1683               	bsf	3,5	;RP0=1, select bank1
  2052  0043  0526               	andwf	(sprintf@flag+1)^(0+128),w
  2053  0044  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0045  00D7               	movwf	??_sprintf+1
  2055  0046  0456               	iorwf	??_sprintf,w
  2056  0047  1903               	skipnz
  2057  0048  2B20               	goto	l5491
  2058  0049  3006               	movlw	6
  2059  004A  1683               	bsf	3,5	;RP0=1, select bank1
  2060  004B  00A7               	movwf	sprintf@prec^(0+128)
  2061  004C  01A8               	clrf	(sprintf@prec+1)^(0+128)
  2062  004D  0824               	movf	sprintf@ap^(0+128),w
  2063  004E  0084               	movwf	4
  2064  004F  1383               	bcf	3,7	;select IRP bank0
  2065  0050  0800               	movf	0,w
  2066  0051  00B3               	movwf	sprintf@fval^(0+128)
  2067  0052  0A84               	incf	4,f
  2068  0053  0800               	movf	0,w
  2069  0054  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2070  0055  0A84               	incf	4,f
  2071  0056  0800               	movf	0,w
  2072  0057  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2073  0058  3003               	movlw	3
  2074  0059  07A4               	addwf	sprintf@ap^(0+128),f
  2075  005A  0833               	movf	sprintf@fval^(0+128),w
  2076  005B  00F0               	movwf	?___ftge
  2077  005C  0834               	movf	(sprintf@fval+1)^(0+128),w
  2078  005D  00F1               	movwf	?___ftge+1
  2079  005E  0835               	movf	(sprintf@fval+2)^(0+128),w
  2080  005F  00F2               	movwf	?___ftge+2
  2081  0060  01F3               	clrf	?___ftge+3
  2082  0061  01F4               	clrf	?___ftge+4
  2083  0062  01F5               	clrf	?___ftge+5
  2084  0063  2600  120A  118A   	fcall	___ftge
  2085  0066  1803               	btfsc	3,0
  2086  0067  2879               	goto	l5365
  2087  0068  0833               	movf	sprintf@fval^(0+128),w
  2088  0069  00F0               	movwf	?___ftneg
  2089  006A  0834               	movf	(sprintf@fval+1)^(0+128),w
  2090  006B  00F1               	movwf	?___ftneg+1
  2091  006C  0835               	movf	(sprintf@fval+2)^(0+128),w
  2092  006D  00F2               	movwf	?___ftneg+2
  2093  006E  27F8  120A  118A   	fcall	___ftneg
  2094  0071  0870               	movf	?___ftneg,w
  2095  0072  00B3               	movwf	sprintf@fval^(0+128)
  2096  0073  0871               	movf	?___ftneg+1,w
  2097  0074  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2098  0075  0872               	movf	?___ftneg+2,w
  2099  0076  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2100  0077  3003               	movlw	3
  2101  0078  04A5               	iorwf	sprintf@flag^(0+128),f
  2102  0079                     l5365:	
  2103  0079  01B1               	clrf	sprintf@exp^(0+128)
  2104  007A  01B2               	clrf	(sprintf@exp+1)^(0+128)
  2105  007B  0835               	movf	(sprintf@fval+2)^(0+128),w
  2106  007C  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2107  007D  0433               	iorwf	sprintf@fval^(0+128),w
  2108  007E  1903               	skipnz
  2109  007F  2910               	goto	l5399
  2110  0080  30B3               	movlw	low sprintf@fval
  2111  0081  0084               	movwf	4
  2112  0082  0800               	movf	0,w
  2113  0083  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0084  00D6               	movwf	??_sprintf
  2115  0085  0A84               	incf	4,f
  2116  0086  0800               	movf	0,w
  2117  0087  00D7               	movwf	??_sprintf+1
  2118  0088  0A84               	incf	4,f
  2119  0089  0800               	movf	0,w
  2120  008A  00D8               	movwf	??_sprintf+2
  2121  008B  0A84               	incf	4,f
  2122  008C  0800               	movf	0,w
  2123  008D  00D9               	movwf	??_sprintf+3
  2124  008E  300F               	movlw	15
  2125  008F                     u2675:	
  2126  008F  1003               	clrc
  2127  0090  0CD9               	rrf	??_sprintf+3,f
  2128  0091  0CD8               	rrf	??_sprintf+2,f
  2129  0092  0CD7               	rrf	??_sprintf+1,f
  2130  0093  0CD6               	rrf	??_sprintf,f
  2131  0094  3EFF               	addlw	-1
  2132  0095  1D03               	skipz
  2133  0096  288F               	goto	u2675
  2134  0097  0857               	movf	??_sprintf+1,w
  2135  0098  1683               	bsf	3,5	;RP0=1, select bank1
  2136  0099  00B2               	movwf	(sprintf@exp+1)^(0+128)
  2137  009A  1283               	bcf	3,5	;RP0=0, select bank0
  2138  009B  0856               	movf	??_sprintf,w
  2139  009C  1683               	bsf	3,5	;RP0=1, select bank1
  2140  009D  00B1               	movwf	sprintf@exp^(0+128)
  2141  009E  3082               	movlw	-126
  2142  009F  01B2               	clrf	(sprintf@exp+1)^(0+128)
  2143  00A0  07B1               	addwf	sprintf@exp^(0+128),f
  2144  00A1  1C03               	skipc
  2145  00A2  03B2               	decf	(sprintf@exp+1)^(0+128),f
  2146  00A3  30FF               	movlw	-1
  2147  00A4  07B1               	addwf	sprintf@exp^(0+128),f
  2148  00A5  1C03               	skipc
  2149  00A6  03B2               	decf	(sprintf@exp+1)^(0+128),f
  2150  00A7  3003               	movlw	3
  2151  00A8  00F0               	movwf	?___wmul
  2152  00A9  01F1               	clrf	?___wmul+1
  2153  00AA  0832               	movf	(sprintf@exp+1)^(0+128),w
  2154  00AB  00F3               	movwf	?___wmul+3
  2155  00AC  0831               	movf	sprintf@exp^(0+128),w
  2156  00AD  00F2               	movwf	?___wmul+2
  2157  00AE  26C5  120A  118A   	fcall	___wmul
  2158  00B1  0871               	movf	?___wmul+1,w
  2159  00B2  00B2               	movwf	(sprintf@exp+1)^(0+128)
  2160  00B3  0870               	movf	?___wmul,w
  2161  00B4  00B1               	movwf	sprintf@exp^(0+128)
  2162  00B5  300A               	movlw	10
  2163  00B6  00F6               	movwf	?___awdiv
  2164  00B7  01F7               	clrf	?___awdiv+1
  2165  00B8  0832               	movf	(sprintf@exp+1)^(0+128),w
  2166  00B9  00F9               	movwf	?___awdiv+3
  2167  00BA  0831               	movf	sprintf@exp^(0+128),w
  2168  00BB  00F8               	movwf	?___awdiv+2
  2169  00BC  24C3  120A  118A   	fcall	___awdiv
  2170  00BF  0877               	movf	?___awdiv+1,w
  2171  00C0  00B2               	movwf	(sprintf@exp+1)^(0+128)
  2172  00C1  0876               	movf	?___awdiv,w
  2173  00C2  00B1               	movwf	sprintf@exp^(0+128)
  2174  00C3  1FB2               	btfss	(sprintf@exp+1)^(0+128),7
  2175  00C4  28C9               	goto	l5385
  2176  00C5  30FF               	movlw	-1
  2177  00C6  07B1               	addwf	sprintf@exp^(0+128),f
  2178  00C7  1C03               	skipc
  2179  00C8  03B2               	decf	(sprintf@exp+1)^(0+128),f
  2180  00C9                     l5385:	
  2181  00C9  0331               	decf	sprintf@exp^(0+128),w
  2182  00CA  3AFF               	xorlw	255
  2183  00CB  2331  120A  118A   	fcall	_scale
  2184  00CE  2722  120A  118A   	fcall	PL10	;call to abstracted procedure
  2185  00D1  273A  120A  118A   	fcall	PL12	;call to abstracted procedure
  2186  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  2187  00D5  082D               	movf	sprintf@integ^(0+128),w
  2188  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  2189  00D7  00B0               	movwf	?___ftmul+3
  2190  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  2191  00D9  082E               	movf	(sprintf@integ+1)^(0+128),w
  2192  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2193  00DB  00B1               	movwf	?___ftmul+4
  2194  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  2195  00DD  082F               	movf	(sprintf@integ+2)^(0+128),w
  2196  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  2197  00DF  00B2               	movwf	?___ftmul+5
  2198  00E0  2545  120A  118A   	fcall	___ftmul
  2199  00E3  082D               	movf	?___ftmul,w
  2200  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  2201  00E5  00AD               	movwf	sprintf@integ^(0+128)
  2202  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  2203  00E7  082E               	movf	?___ftmul+1,w
  2204  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  2205  00E9  00AE               	movwf	(sprintf@integ+1)^(0+128)
  2206  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  2207  00EB  082F               	movf	?___ftmul+2,w
  2208  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  2209  00ED  00AF               	movwf	(sprintf@integ+2)^(0+128)
  2210  00EE  2778  120A  118A   	fcall	PL19	;call to abstracted procedure
  2211  00F1  3080               	movlw	128
  2212  00F2  01F3               	clrf	?___ftge+3
  2213  00F3  00F4               	movwf	?___ftge+4
  2214  00F4  303F               	movlw	63
  2215  00F5  00F5               	movwf	?___ftge+5
  2216  00F6  2600  120A  118A   	fcall	___ftge
  2217  00F9  1803               	btfsc	3,0
  2218  00FA  2900               	goto	l5393
  2219  00FB  30FF               	movlw	-1
  2220  00FC  07B1               	addwf	sprintf@exp^(0+128),f
  2221  00FD  1C03               	skipc
  2222  00FE  03B2               	decf	(sprintf@exp+1)^(0+128),f
  2223  00FF  2910               	goto	l5399
  2224  0100                     l5393:	
  2225  0100  2778  120A  118A   	fcall	PL19	;call to abstracted procedure
  2226  0103  3020               	movlw	32
  2227  0104  01F3               	clrf	?___ftge+3
  2228  0105  00F4               	movwf	?___ftge+4
  2229  0106  3041               	movlw	65
  2230  0107  00F5               	movwf	?___ftge+5
  2231  0108  2600  120A  118A   	fcall	___ftge
  2232  010B  1C03               	btfss	3,0
  2233  010C  2910               	goto	l5399
  2234  010D  0AB1               	incf	sprintf@exp^(0+128),f
  2235  010E  1903               	skipnz
  2236  010F  0AB2               	incf	(sprintf@exp+1)^(0+128),f
  2237  0110                     l5399:	
  2238  0110  3006               	movlw	6
  2239  0111  120A  158A  24EA   	fcall	_fround
      +       120A  118A         
  2240  0116  0848               	movf	?_fround,w
  2241  0117  00BC               	movwf	?___ftadd
  2242  0118  0849               	movf	?_fround+1,w
  2243  0119  00BD               	movwf	?___ftadd+1
  2244  011A  084A               	movf	?_fround+2,w
  2245  011B  00BE               	movwf	?___ftadd+2
  2246  011C  1683               	bsf	3,5	;RP0=1, select bank1
  2247  011D  0833               	movf	sprintf@fval^(0+128),w
  2248  011E  1283               	bcf	3,5	;RP0=0, select bank0
  2249  011F  00BF               	movwf	?___ftadd+3
  2250  0120  1683               	bsf	3,5	;RP0=1, select bank1
  2251  0121  0834               	movf	(sprintf@fval+1)^(0+128),w
  2252  0122  1283               	bcf	3,5	;RP0=0, select bank0
  2253  0123  00C0               	movwf	?___ftadd+4
  2254  0124  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0125  0835               	movf	(sprintf@fval+2)^(0+128),w
  2256  0126  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0127  00C1               	movwf	?___ftadd+5
  2258  0128  120A  158A  2428   	fcall	___ftadd
      +       120A  118A         
  2259  012D  083C               	movf	?___ftadd,w
  2260  012E  1683               	bsf	3,5	;RP0=1, select bank1
  2261  012F  00B3               	movwf	sprintf@fval^(0+128)
  2262  0130  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0131  083D               	movf	?___ftadd+1,w
  2264  0132  1683               	bsf	3,5	;RP0=1, select bank1
  2265  0133  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2266  0134  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0135  083E               	movf	?___ftadd+2,w
  2268  0136  1683               	bsf	3,5	;RP0=1, select bank1
  2269  0137  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2270  0138  0832               	movf	(sprintf@exp+1)^(0+128),w
  2271  0139  3A80               	xorlw	128
  2272  013A  00FF               	movwf	127
  2273  013B  3080               	movlw	128
  2274  013C  027F               	subwf	127,w
  2275  013D  1D03               	skipz
  2276  013E  2941               	goto	u2715
  2277  013F  300A               	movlw	10
  2278  0140  0231               	subwf	sprintf@exp^(0+128),w
  2279  0141                     u2715:	
  2280  0141  1803               	skipnc
  2281  0142  2962               	goto	l5409
  2282  0143  27AD               	call	PL28	;select bank 1
  2283  0144  0835               	movf	(sprintf@fval+2)^(0+128),w
  2284  0145  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2285  0146  0433               	iorwf	sprintf@fval^(0+128),w
  2286  0147  1903               	skipnz
  2287  0148  29A1               	goto	l5425
  2288  0149  0833               	movf	sprintf@fval^(0+128),w
  2289  014A  272F  120A  118A   	fcall	PL11	;call to abstracted procedure
  2290  014D  262C  120A  118A   	fcall	___fttol
  2291  0150  0823               	movf	?___fttol+3,w
  2292  0151  0422               	iorwf	?___fttol+2,w
  2293  0152  0421               	iorwf	?___fttol+1,w
  2294  0153  0420               	iorwf	?___fttol,w
  2295  0154  1D03               	skipz
  2296  0155  29A1               	goto	l5425
  2297  0156  1683               	bsf	3,5	;RP0=1, select bank1
  2298  0157  0832               	movf	(sprintf@exp+1)^(0+128),w
  2299  0158  3A80               	xorlw	128
  2300  0159  00FF               	movwf	127
  2301  015A  3080               	movlw	128
  2302  015B  027F               	subwf	127,w
  2303  015C  1D03               	skipz
  2304  015D  2960               	goto	u2745
  2305  015E  3002               	movlw	2
  2306  015F  0231               	subwf	sprintf@exp^(0+128),w
  2307  0160                     u2745:	
  2308  0160  1C03               	skipc
  2309  0161  29A1               	goto	l5425
  2310  0162                     l5409:	
  2311  0162  27AD               	call	PL28	;select bank 1
  2312  0163  2778  120A  118A   	fcall	PL19	;call to abstracted procedure
  2313  0166  3070               	movlw	112
  2314  0167  00F3               	movwf	?___ftge+3
  2315  0168  3089               	movlw	137
  2316  0169  00F4               	movwf	?___ftge+4
  2317  016A  3040               	movlw	64
  2318  016B  00F5               	movwf	?___ftge+5
  2319  016C  2600  120A  118A   	fcall	___ftge
  2320  016F  1803               	btfsc	3,0
  2321  0170  2973               	goto	l5413
  2322  0171  30F7               	movlw	-9
  2323  0172  2974               	goto	L1
  2324  0173                     l5413:	
  2325  0173  30F8               	movlw	-8
  2326  0174                     L1:	
  2327  0174  07B1               	addwf	sprintf@exp^(0+128),f
  2328  0175  1C03               	skipc
  2329  0176  03B2               	decf	(sprintf@exp+1)^(0+128),f
  2330  0177  0831               	movf	sprintf@exp^(0+128),w
  2331  0178  2331  120A  118A   	fcall	_scale
  2332  017B  2722               	fcall	PL10	;call to abstracted procedure
  2333  017C  00F0               	movwf	?__tdiv_to_l_
  2334  017D  0834               	movf	(sprintf@fval+1)^(0+128),w
  2335  017E  00F1               	movwf	?__tdiv_to_l_+1
  2336  017F  0835               	movf	(sprintf@fval+2)^(0+128),w
  2337  0180  00F2               	movwf	?__tdiv_to_l_+2
  2338  0181  082D               	movf	sprintf@integ^(0+128),w
  2339  0182  00F3               	movwf	?__tdiv_to_l_+3
  2340  0183  082E               	movf	(sprintf@integ+1)^(0+128),w
  2341  0184  00F4               	movwf	?__tdiv_to_l_+4
  2342  0185  082F               	movf	(sprintf@integ+2)^(0+128),w
  2343  0186  00F5               	movwf	?__tdiv_to_l_+5
  2344  0187  120A  158A  22D8   	fcall	__tdiv_to_l_
      +       120A  118A         
  2345  018C  0873               	movf	?__tdiv_to_l_+3,w
  2346  018D  1683               	bsf	3,5	;RP0=1, select bank1
  2347  018E  00A3               	movwf	(_sprintf$1890+3)^(0+128)
  2348  018F  0872               	movf	?__tdiv_to_l_+2,w
  2349  0190  00A2               	movwf	(_sprintf$1890+2)^(0+128)
  2350  0191  0871               	movf	?__tdiv_to_l_+1,w
  2351  0192  00A1               	movwf	(_sprintf$1890+1)^(0+128)
  2352  0193  0870               	movf	?__tdiv_to_l_,w
  2353  0194  00A0               	movwf	_sprintf$1890^(0+128)
  2354  0195  0823               	movf	(_sprintf$1890+3)^(0+128),w
  2355  0196  00AC               	movwf	(sprintf@_val+3)^(0+128)
  2356  0197  0822               	movf	(_sprintf$1890+2)^(0+128),w
  2357  0198  00AB               	movwf	(sprintf@_val+2)^(0+128)
  2358  0199  0821               	movf	(_sprintf$1890+1)^(0+128),w
  2359  019A  00AA               	movwf	(sprintf@_val+1)^(0+128)
  2360  019B  0820               	movf	_sprintf$1890^(0+128),w
  2361  019C  00A9               	movwf	sprintf@_val^(0+128)
  2362  019D  01B3               	clrf	sprintf@fval^(0+128)
  2363  019E  01B4               	clrf	(sprintf@fval+1)^(0+128)
  2364  019F  01B5               	clrf	(sprintf@fval+2)^(0+128)
  2365  01A0  29DE               	goto	l5429
  2366  01A1                     l5425:	
  2367  01A1  27AD               	call	PL28	;select bank 1
  2368  01A2  0833               	movf	sprintf@fval^(0+128),w
  2369  01A3  272F  120A  118A   	fcall	PL11	;call to abstracted procedure
  2370  01A6  262C  120A  118A   	fcall	___fttol
  2371  01A9  26F0               	fcall	PL5	;call to abstracted procedure
  2372  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  2373  01AB  00A9               	movwf	sprintf@_val^(0+128)
  2374  01AC  082C               	movf	(sprintf@_val+3)^(0+128),w
  2375  01AD  00FB               	movwf	?___lltoft+3
  2376  01AE  082B               	movf	(sprintf@_val+2)^(0+128),w
  2377  01AF  00FA               	movwf	?___lltoft+2
  2378  01B0  082A               	movf	(sprintf@_val+1)^(0+128),w
  2379  01B1  00F9               	movwf	?___lltoft+1
  2380  01B2  0829               	movf	sprintf@_val^(0+128),w
  2381  01B3  00F8               	movwf	?___lltoft
  2382  01B4  120A  158A  2229   	fcall	___lltoft
      +       120A  118A         
  2383  01B9  0878               	movf	?___lltoft,w
  2384  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2385  01BB  00C8               	movwf	?___ftsub
  2386  01BC  0879               	movf	?___lltoft+1,w
  2387  01BD  00C9               	movwf	?___ftsub+1
  2388  01BE  087A               	movf	?___lltoft+2,w
  2389  01BF  00CA               	movwf	?___ftsub+2
  2390  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  2391  01C1  0833               	movf	sprintf@fval^(0+128),w
  2392  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2393  01C3  00CB               	movwf	?___ftsub+3
  2394  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  2395  01C5  0834               	movf	(sprintf@fval+1)^(0+128),w
  2396  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2397  01C7  00CC               	movwf	?___ftsub+4
  2398  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  2399  01C9  0835               	movf	(sprintf@fval+2)^(0+128),w
  2400  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2401  01CB  00CD               	movwf	?___ftsub+5
  2402  01CC  120A  158A  2412   	fcall	___ftsub
      +       120A  118A         
  2403  01D1  0848               	movf	?___ftsub,w
  2404  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2405  01D3  00B3               	movwf	sprintf@fval^(0+128)
  2406  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  2407  01D5  0849               	movf	?___ftsub+1,w
  2408  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2409  01D7  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2410  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2411  01D9  084A               	movf	?___ftsub+2,w
  2412  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  2413  01DB  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2414  01DC  01B1               	clrf	sprintf@exp^(0+128)
  2415  01DD  01B2               	clrf	(sprintf@exp+1)^(0+128)
  2416  01DE                     l5429:	
  2417  01DE  01B6               	clrf	sprintf@c^(0+128)
  2418  01DF  0AB6               	incf	sprintf@c^(0+128),f
  2419  01E0                     l5435:	
  2420  01E0  26DE               	fcall	PL3	;call to abstracted procedure
  2421  01E1  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2422  01E6  00D7               	movwf	??_sprintf+1
  2423  01E7  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2424  01EC  00D8               	movwf	??_sprintf+2
  2425  01ED  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2426  01F2  00D9               	movwf	??_sprintf+3
  2427  01F3  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2428  01F8  00DA               	movwf	??_sprintf+4
  2429  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2430  01FA  022C               	subwf	(sprintf@_val+3)^(0+128),w
  2431  01FB  1D03               	skipz
  2432  01FC  2A0D               	goto	u2765
  2433  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2434  01FE  0859               	movf	??_sprintf+3,w
  2435  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2436  0200  022B               	subwf	(sprintf@_val+2)^(0+128),w
  2437  0201  1D03               	skipz
  2438  0202  2A0D               	goto	u2765
  2439  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2440  0204  0858               	movf	??_sprintf+2,w
  2441  0205  1683               	bsf	3,5	;RP0=1, select bank1
  2442  0206  022A               	subwf	(sprintf@_val+1)^(0+128),w
  2443  0207  1D03               	skipz
  2444  0208  2A0D               	goto	u2765
  2445  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2446  020A  0857               	movf	??_sprintf+1,w
  2447  020B  1683               	bsf	3,5	;RP0=1, select bank1
  2448  020C  0229               	subwf	sprintf@_val^(0+128),w
  2449  020D                     u2765:	
  2450  020D  1C03               	btfss	3,0
  2451  020E  2A14               	goto	l5443
  2452  020F  0AB6               	incf	sprintf@c^(0+128),f
  2453  0210  0836               	movf	sprintf@c^(0+128),w
  2454  0211  3A0A               	xorlw	10
  2455  0212  1D03               	skipz
  2456  0213  29E0               	goto	l5435
  2457  0214                     l5443:	
  2458  0214  0825               	movf	sprintf@flag^(0+128),w
  2459  0215  3903               	andlw	3
  2460  0216  1903               	btfsc	3,2
  2461  0217  2A4A               	goto	l5453
  2462  0218  0830               	movf	sprintf@sp^(0+128),w
  2463  0219  0084               	movwf	4
  2464  021A  302D               	movlw	45
  2465  021B  2A46               	goto	L5
  2466  021C                     l5449:	
  2467  021C  26E8  120A  118A   	fcall	PL4	;call to abstracted procedure
  2468  021F  26DE               	fcall	PL3	;call to abstracted procedure
  2469  0220  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2470  0225  00F0               	movwf	?___lldiv
  2471  0226  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2472  022B  00F1               	movwf	?___lldiv+1
  2473  022C  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2474  0231  00F2               	movwf	?___lldiv+2
  2475  0232  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2476  0237  2745  120A  118A   	fcall	PL13	;call to abstracted procedure
  2477  023A  27B0  120A  118A   	fcall	___lldiv
  2478  023D  275B  120A  118A   	fcall	PL16	;call to abstracted procedure
  2479  0240  2687  120A  118A   	fcall	___llmod
  2480  0243  276F  120A  118A   	fcall	PL18	;call to abstracted procedure
  2481  0246                     L5:	
  2482  0246  1383               	bcf	3,7	;select IRP bank0
  2483  0247  0080               	movwf	0
  2484  0248  1683               	bsf	3,5	;RP0=1, select bank1
  2485  0249  0AB0               	incf	sprintf@sp^(0+128),f
  2486  024A                     l5453:	
  2487  024A  03B6               	decf	sprintf@c^(0+128),f
  2488  024B  0F36               	incfsz	sprintf@c^(0+128),w
  2489  024C  2A1C               	goto	l5449
  2490  024D                     l5461:	
  2491  024D  0832               	movf	(sprintf@exp+1)^(0+128),w
  2492  024E  3A80               	xorlw	128
  2493  024F  00FF               	movwf	127
  2494  0250  3080               	movlw	128
  2495  0251  027F               	subwf	127,w
  2496  0252  1D03               	skipz
  2497  0253  2A56               	goto	u2805
  2498  0254  3001               	movlw	1
  2499  0255  0231               	subwf	sprintf@exp^(0+128),w
  2500  0256                     u2805:	
  2501  0256  1C03               	btfss	3,0
  2502  0257  2A61               	goto	l5463
  2503  0258  27AD               	call	PL28	;select bank 1
  2504  0259  0830               	movf	sprintf@sp^(0+128),w
  2505  025A  27A6  120A  118A   	fcall	PL26	;call to abstracted procedure
  2506  025D  07B1               	addwf	sprintf@exp^(0+128),f
  2507  025E  1C03               	skipc
  2508  025F  03B2               	decf	(sprintf@exp+1)^(0+128),f
  2509  0260  2A4D               	goto	l5461
  2510  0261                     l5463:	
  2511  0261  27AD               	call	PL28	;select bank 1
  2512  0262  0828               	movf	(sprintf@prec+1)^(0+128),w
  2513  0263  3A80               	xorlw	128
  2514  0264  00FF               	movwf	127
  2515  0265  3080               	movlw	128
  2516  0266  027F               	subwf	127,w
  2517  0267  1D03               	skipz
  2518  0268  2A6B               	goto	u2815
  2519  0269  3009               	movlw	9
  2520  026A  0227               	subwf	sprintf@prec^(0+128),w
  2521  026B                     u2815:	
  2522  026B  1C03               	skipc
  2523  026C  2A70               	goto	l5467
  2524  026D  3008               	movlw	8
  2525  026E  27AD               	call	PL28	;select bank 1
  2526  026F  2A72               	goto	L2
  2527  0270                     l5467:	
  2528  0270  27AD               	call	PL28	;select bank 1
  2529  0271  0827               	movf	sprintf@prec^(0+128),w
  2530  0272                     L2:	
  2531  0272  00B6               	movwf	sprintf@c^(0+128)
  2532  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0274  00D6               	movwf	??_sprintf
  2534  0275  01D7               	clrf	??_sprintf+1
  2535  0276  1BD6               	btfsc	??_sprintf,7
  2536  0277  03D7               	decf	??_sprintf+1,f
  2537  0278  1683               	bsf	3,5	;RP0=1, select bank1
  2538  0279  02A7               	subwf	sprintf@prec^(0+128),f
  2539  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2540  027B  0857               	movf	??_sprintf+1,w
  2541  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2542  027D  1C03               	skipc
  2543  027E  03A8               	decf	(sprintf@prec+1)^(0+128),f
  2544  027F  02A8               	subwf	(sprintf@prec+1)^(0+128),f
  2545  0280  0836               	movf	sprintf@c^(0+128),w
  2546  0281  1903               	btfsc	3,2
  2547  0282  2A89               	goto	l5473
  2548  0283  0830               	movf	sprintf@sp^(0+128),w
  2549  0284  0084               	movwf	4
  2550  0285  302E               	movlw	46
  2551  0286  1383               	bcf	3,7	;select IRP bank0
  2552  0287  0080               	movwf	0
  2553  0288  0AB0               	incf	sprintf@sp^(0+128),f
  2554  0289                     l5473:	
  2555  0289  0836               	movf	sprintf@c^(0+128),w
  2556  028A  2331  120A  118A   	fcall	_scale
  2557  028D  083C               	movf	?_scale,w
  2558  028E  00B0               	movwf	?___ftmul+3
  2559  028F  083D               	movf	?_scale+1,w
  2560  0290  00B1               	movwf	?___ftmul+4
  2561  0291  083E               	movf	?_scale+2,w
  2562  0292  00B2               	movwf	?___ftmul+5
  2563  0293  1683               	bsf	3,5	;RP0=1, select bank1
  2564  0294  0833               	movf	sprintf@fval^(0+128),w
  2565  0295  273A  120A  118A   	fcall	PL12	;call to abstracted procedure
  2566  0298  2545  120A  118A   	fcall	___ftmul
  2567  029B  082D               	movf	?___ftmul,w
  2568  029C  00A0               	movwf	?___fttol
  2569  029D  082E               	movf	?___ftmul+1,w
  2570  029E  00A1               	movwf	?___fttol+1
  2571  029F  082F               	movf	?___ftmul+2,w
  2572  02A0  00A2               	movwf	?___fttol+2
  2573  02A1  262C  120A  118A   	fcall	___fttol
  2574  02A4  26F0  120A  118A   	fcall	PL5	;call to abstracted procedure
  2575  02A7  2B0F               	goto	L3
  2576  02A8                     l5475:	
  2577  02A8  26E8  120A  118A   	fcall	PL4	;call to abstracted procedure
  2578  02AB  26DE               	fcall	PL3	;call to abstracted procedure
  2579  02AC  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2580  02B1  00F0               	movwf	?___lldiv
  2581  02B2  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2582  02B7  00F1               	movwf	?___lldiv+1
  2583  02B8  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2584  02BD  00F2               	movwf	?___lldiv+2
  2585  02BE  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2586  02C3  2745  120A  118A   	fcall	PL13	;call to abstracted procedure
  2587  02C6  27B0  120A  118A   	fcall	___lldiv
  2588  02C9  275B  120A  118A   	fcall	PL16	;call to abstracted procedure
  2589  02CC  2687  120A  118A   	fcall	___llmod
  2590  02CF  276F  120A  118A   	fcall	PL18	;call to abstracted procedure
  2591  02D2  1383               	bcf	3,7	;select IRP bank0
  2592  02D3  0080               	movwf	0
  2593  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  2594  02D5  0AB0               	incf	sprintf@sp^(0+128),f
  2595  02D6  26DE               	fcall	PL3	;call to abstracted procedure
  2596  02D7  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2597  02DC  00A0               	movwf	?___llmod
  2598  02DD  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2599  02E2  00A1               	movwf	?___llmod+1
  2600  02E3  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2601  02E8  00A2               	movwf	?___llmod+2
  2602  02E9  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2603  02EE  00A3               	movwf	?___llmod+3
  2604  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  2605  02F0  082C               	movf	(sprintf@_val+3)^(0+128),w
  2606  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2607  02F2  00A7               	movwf	?___llmod+7
  2608  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  2609  02F4  082B               	movf	(sprintf@_val+2)^(0+128),w
  2610  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2611  02F6  00A6               	movwf	?___llmod+6
  2612  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2613  02F8  082A               	movf	(sprintf@_val+1)^(0+128),w
  2614  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2615  02FA  00A5               	movwf	?___llmod+5
  2616  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  2617  02FC  0829               	movf	sprintf@_val^(0+128),w
  2618  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2619  02FE  00A4               	movwf	?___llmod+4
  2620  02FF  2687  120A  118A   	fcall	___llmod
  2621  0302  0823               	movf	?___llmod+3,w
  2622  0303  1683               	bsf	3,5	;RP0=1, select bank1
  2623  0304  00AC               	movwf	(sprintf@_val+3)^(0+128)
  2624  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2625  0306  0822               	movf	?___llmod+2,w
  2626  0307  1683               	bsf	3,5	;RP0=1, select bank1
  2627  0308  00AB               	movwf	(sprintf@_val+2)^(0+128)
  2628  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2629  030A  0821               	movf	?___llmod+1,w
  2630  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2631  030C  00AA               	movwf	(sprintf@_val+1)^(0+128)
  2632  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2633  030E  0820               	movf	?___llmod,w
  2634  030F                     L3:	
  2635  030F  1683               	bsf	3,5	;RP0=1, select bank1
  2636  0310  00A9               	movwf	sprintf@_val^(0+128)
  2637  0311  03B6               	decf	sprintf@c^(0+128),f
  2638  0312  0F36               	incfsz	sprintf@c^(0+128),w
  2639  0313  2AA8               	goto	l5475
  2640  0314                     l5489:	
  2641  0314  0828               	movf	(sprintf@prec+1)^(0+128),w
  2642  0315  0427               	iorwf	sprintf@prec^(0+128),w
  2643  0316  1903               	btfsc	3,2
  2644  0317  2812               	goto	l5497
  2645  0318  0830               	movf	sprintf@sp^(0+128),w
  2646  0319  27A6  120A  118A   	fcall	PL26	;call to abstracted procedure
  2647  031C  07A7               	addwf	sprintf@prec^(0+128),f
  2648  031D  1C03               	skipc
  2649  031E  03A8               	decf	(sprintf@prec+1)^(0+128),f
  2650  031F  2B14               	goto	l5489
  2651  0320                     l5491:	
  2652  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2653  0321  0825               	movf	sprintf@flag^(0+128),w
  2654  0322  3903               	andlw	3
  2655  0323  1903               	btfsc	3,2
  2656  0324  2812               	goto	l5497
  2657  0325  0830               	movf	sprintf@sp^(0+128),w
  2658  0326  0084               	movwf	4
  2659  0327  302D               	movlw	45
  2660  0328                     L4:	
  2661  0328  1383               	bcf	3,7	;select IRP bank0
  2662  0329  0080               	movwf	0
  2663  032A  0AB0               	incf	sprintf@sp^(0+128),f
  2664  032B  2812               	goto	l5497
  2665  032C                     l5499:	
  2666  032C  0830               	movf	sprintf@sp^(0+128),w
  2667  032D  0084               	movwf	4
  2668  032E  1383               	bcf	3,7	;select IRP bank0
  2669  032F  0180               	clrf	0
  2670  0330  0008               	return
  2671  0331                     __end_of_sprintf:	
  2672  0331                     __ptext554:	
  2673 ;; =============== function ___ftsub ends ============
  2674                           
  2675                           
  2676 ;; *************** function _scale *****************
  2677 ;; Defined at:
  2678 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  scl             1    wreg     char 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  scl             1   38[BANK0 ] char 
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  3   28[BANK0 ] char 
  2685 ;; Registers used:
  2686 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 60/20
  2689 ;;		On exit  : 60/0
  2690 ;;		Unchanged: FFF9F/0
  2691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2692 ;;      Params:         0       3       0       0       0
  2693 ;;      Locals:         0       4       0       0       0
  2694 ;;      Temps:          0       4       0       0       0
  2695 ;;      Totals:         0      11       0       0       0
  2696 ;;Total ram usage:       11 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:    2
  2699 ;; This function calls:
  2700 ;;		___awmod
  2701 ;;		___awdiv
  2702 ;;		___ftmul
  2703 ;;		___bmul
  2704 ;; This function is called by:
  2705 ;;		_sprintf
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708  0331                     _scale:	
  2709                           
  2710                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2711                           ;scale@scl stored from wreg
  2712  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0332  00C6               	movwf	scale@scl
  2714  0333  1FC6               	btfss	scale@scl,7
  2715  0334  2BFD               	goto	l5297
  2716  0335  09C6               	comf	scale@scl,f
  2717  0336  0AC6               	incf	scale@scl,f
  2718  0337  0846               	movf	scale@scl,w
  2719  0338  3A80               	xorlw	128
  2720  0339  3E12               	addlw	-238
  2721  033A  1C03               	skipc
  2722  033B  2BA1               	goto	l5287
  2723  033C  300A               	movlw	10
  2724  033D  2750  120A  118A   	fcall	PL14	;call to abstracted procedure
  2725  0340  2508  120A  118A   	fcall	___awmod
  2726  0343  0871               	movf	?___awmod+1,w
  2727  0344  00F9               	movwf	?___awdiv+3
  2728  0345  0870               	movf	?___awmod,w
  2729  0346  00F8               	movwf	?___awdiv+2
  2730  0347  24C3  120A  118A   	fcall	___awdiv
  2731  034A  277F               	fcall	PL20	;call to abstracted procedure
  2732  034B  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  2733  034C  0084               	movwf	4
  2734  034D  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2735  0352  00AD               	movwf	?___ftmul
  2736  0353  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2737  0358  00AE               	movwf	?___ftmul+1
  2738  0359  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2739  035E  278F  120A  118A   	fcall	PL23	;call to abstracted procedure
  2740  0361  1BF8               	btfsc	?___awdiv+2,7
  2741  0362  03F9               	decf	?___awdiv+3,f
  2742  0363  24C3  120A  118A   	fcall	___awdiv
  2743  0366  2713               	fcall	PL8	;call to abstracted procedure
  2744  0367  3E37               	addlw	low ((__npowers_-__stringbase+54))
  2745  0368  0084               	movwf	4
  2746  0369  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2747  036E  00B0               	movwf	?___ftmul+3
  2748  036F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2749  0374  00B1               	movwf	?___ftmul+4
  2750  0375  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2751  037A  00B2               	movwf	?___ftmul+5
  2752  037B  2545  120A  118A   	fcall	___ftmul
  2753  037E  26FE  120A  118A   	fcall	PL6	;call to abstracted procedure
  2754  0381  1BF2               	btfsc	?___awmod+2,7
  2755  0382  03F3               	decf	?___awmod+3,f
  2756  0383  2508  120A  118A   	fcall	___awmod
  2757  0386  270B               	fcall	PL7	;call to abstracted procedure
  2758  0387  3E01               	addlw	low (__npowers_-__stringbase)
  2759  0388  0084               	movwf	4
  2760  0389  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2761  038E  00AD               	movwf	?___ftmul
  2762  038F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2763  0394  00AE               	movwf	?___ftmul+1
  2764  0395  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2765  039A  2787  120A  118A   	fcall	PL21	;call to abstracted procedure
  2766  039D  2545  120A  118A   	fcall	___ftmul
  2767  03A0  2F1B               	ljmp	PL9	;call to abstracted procedure
  2768  03A1                     l5287:	
  2769  03A1  0846               	movf	scale@scl,w
  2770  03A2  3A80               	xorlw	128
  2771  03A3  3E75               	addlw	-139
  2772  03A4  1C03               	skipc
  2773  03A5  2BE6               	goto	l5293
  2774  03A6  300A               	movlw	10
  2775  03A7  00F0               	movwf	?___awmod
  2776  03A8  01F1               	clrf	?___awmod+1
  2777  03A9  0846               	movf	scale@scl,w
  2778  03AA  00F2               	movwf	?___awmod+2
  2779  03AB  01F3               	clrf	?___awmod+3
  2780  03AC  1BF2               	btfsc	?___awmod+2,7
  2781  03AD  03F3               	decf	?___awmod+3,f
  2782  03AE  2508  120A  118A   	fcall	___awmod
  2783  03B1  270B               	fcall	PL7	;call to abstracted procedure
  2784  03B2  3E01               	addlw	low (__npowers_-__stringbase)
  2785  03B3  0084               	movwf	4
  2786  03B4  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2787  03B9  00AD               	movwf	?___ftmul
  2788  03BA  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2789  03BF  00AE               	movwf	?___ftmul+1
  2790  03C0  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2791  03C5  2797  120A  118A   	fcall	PL24	;call to abstracted procedure
  2792  03C8  1BF8               	btfsc	?___awdiv+2,7
  2793  03C9  03F9               	decf	?___awdiv+3,f
  2794  03CA  24C3  120A  118A   	fcall	___awdiv
  2795  03CD  2713               	fcall	PL8	;call to abstracted procedure
  2796  03CE  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  2797  03CF  0084               	movwf	4
  2798  03D0  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2799  03D5  00B0               	movwf	?___ftmul+3
  2800  03D6  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2801  03DB  00B1               	movwf	?___ftmul+4
  2802  03DC  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2803  03E1  00B2               	movwf	?___ftmul+5
  2804  03E2  2545  120A  118A   	fcall	___ftmul
  2805  03E5  2F1B               	ljmp	PL9	;call to abstracted procedure
  2806  03E6                     l5293:	
  2807  03E6  3003               	movlw	3
  2808  03E7  00F9               	movwf	?___bmul
  2809  03E8  0846               	movf	scale@scl,w
  2810  03E9  25B4               	fcall	___bmul
  2811  03EA  3E01               	addlw	low (__npowers_-__stringbase)
  2812  03EB  0084               	movwf	4
  2813  03EC  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2814  03F1  00BC               	movwf	?_scale
  2815  03F2  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2816  03F7  00BD               	movwf	?_scale+1
  2817  03F8  120A  158A  2000   	fcall	stringdir
  2818  03FB  00BE               	movwf	?_scale+2
  2819  03FC  0008               	return
  2820  03FD                     l5297:	
  2821  03FD  0846               	movf	scale@scl,w
  2822  03FE  3A80               	xorlw	128
  2823  03FF  3E12               	addlw	-238
  2824  0400  1C03               	skipc
  2825  0401  2C67               	goto	l5305
  2826  0402  300A               	movlw	10
  2827  0403  2750  120A  118A   	fcall	PL14	;call to abstracted procedure
  2828  0406  2508  120A  118A   	fcall	___awmod
  2829  0409  0871               	movf	?___awmod+1,w
  2830  040A  00F9               	movwf	?___awdiv+3
  2831  040B  0870               	movf	?___awmod,w
  2832  040C  00F8               	movwf	?___awdiv+2
  2833  040D  24C3  120A  118A   	fcall	___awdiv
  2834  0410  277F               	fcall	PL20	;call to abstracted procedure
  2835  0411  3E43               	addlw	low ((__powers_-__stringbase+27))
  2836  0412  0084               	movwf	4
  2837  0413  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2838  0418  00AD               	movwf	?___ftmul
  2839  0419  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2840  041E  00AE               	movwf	?___ftmul+1
  2841  041F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2842  0424  278F  120A  118A   	fcall	PL23	;call to abstracted procedure
  2843  0427  1BF8               	btfsc	?___awdiv+2,7
  2844  0428  03F9               	decf	?___awdiv+3,f
  2845  0429  24C3  120A  118A   	fcall	___awdiv
  2846  042C  2713               	fcall	PL8	;call to abstracted procedure
  2847  042D  3E5E               	addlw	low ((__powers_-__stringbase+54))
  2848  042E  0084               	movwf	4
  2849  042F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2850  0434  00B0               	movwf	?___ftmul+3
  2851  0435  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2852  043A  00B1               	movwf	?___ftmul+4
  2853  043B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2854  0440  00B2               	movwf	?___ftmul+5
  2855  0441  2545  120A  118A   	fcall	___ftmul
  2856  0444  26FE  120A  118A   	fcall	PL6	;call to abstracted procedure
  2857  0447  1BF2               	btfsc	?___awmod+2,7
  2858  0448  03F3               	decf	?___awmod+3,f
  2859  0449  2508  120A  118A   	fcall	___awmod
  2860  044C  270B               	fcall	PL7	;call to abstracted procedure
  2861  044D  3E28               	addlw	low (__powers_-__stringbase)
  2862  044E  0084               	movwf	4
  2863  044F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2864  0454  00AD               	movwf	?___ftmul
  2865  0455  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2866  045A  00AE               	movwf	?___ftmul+1
  2867  045B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2868  0460  2787  120A  118A   	fcall	PL21	;call to abstracted procedure
  2869  0463  2545  120A  118A   	fcall	___ftmul
  2870  0466  2F1B               	ljmp	PL9	;call to abstracted procedure
  2871  0467                     l5305:	
  2872  0467  0846               	movf	scale@scl,w
  2873  0468  3A80               	xorlw	128
  2874  0469  3E75               	addlw	-139
  2875  046A  1C03               	skipc
  2876  046B  2CAC               	goto	l5311
  2877  046C  300A               	movlw	10
  2878  046D  00F0               	movwf	?___awmod
  2879  046E  01F1               	clrf	?___awmod+1
  2880  046F  0846               	movf	scale@scl,w
  2881  0470  00F2               	movwf	?___awmod+2
  2882  0471  01F3               	clrf	?___awmod+3
  2883  0472  1BF2               	btfsc	?___awmod+2,7
  2884  0473  03F3               	decf	?___awmod+3,f
  2885  0474  2508  120A  118A   	fcall	___awmod
  2886  0477  270B               	fcall	PL7	;call to abstracted procedure
  2887  0478  3E28               	addlw	low (__powers_-__stringbase)
  2888  0479  0084               	movwf	4
  2889  047A  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2890  047F  00AD               	movwf	?___ftmul
  2891  0480  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2892  0485  00AE               	movwf	?___ftmul+1
  2893  0486  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2894  048B  2797  120A  118A   	fcall	PL24	;call to abstracted procedure
  2895  048E  1BF8               	btfsc	?___awdiv+2,7
  2896  048F  03F9               	decf	?___awdiv+3,f
  2897  0490  24C3  120A  118A   	fcall	___awdiv
  2898  0493  2713               	fcall	PL8	;call to abstracted procedure
  2899  0494  3E43               	addlw	low ((__powers_-__stringbase+27))
  2900  0495  0084               	movwf	4
  2901  0496  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2902  049B  00B0               	movwf	?___ftmul+3
  2903  049C  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2904  04A1  00B1               	movwf	?___ftmul+4
  2905  04A2  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2906  04A7  00B2               	movwf	?___ftmul+5
  2907  04A8  2545  120A  118A   	fcall	___ftmul
  2908  04AB  2F1B               	ljmp	PL9	;call to abstracted procedure
  2909  04AC                     l5311:	
  2910  04AC  3003               	movlw	3
  2911  04AD  00F9               	movwf	?___bmul
  2912  04AE  0846               	movf	scale@scl,w
  2913  04AF  25B4               	fcall	___bmul
  2914  04B0  3E28               	addlw	low (__powers_-__stringbase)
  2915  04B1  0084               	movwf	4
  2916  04B2  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2917  04B7  00BC               	movwf	?_scale
  2918  04B8  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2919  04BD  00BD               	movwf	?_scale+1
  2920  04BE  120A  158A  2000   	fcall	stringdir
  2921  04C1  00BE               	movwf	?_scale+2
  2922  04C2  0008               	return
  2923  04C3                     __end_of_scale:	
  2924  04C3                     __ptext568:	
  2925 ;; =============== function ___llmod ends ============
  2926                           
  2927                           
  2928 ;; *************** function ___awdiv *****************
  2929 ;; Defined at:
  2930 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  divisor         2    6[COMMON] int 
  2933 ;;  dividend        2    8[COMMON] int 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  quotient        2   12[COMMON] int 
  2936 ;;  sign            1   11[COMMON] unsigned char 
  2937 ;;  counter         1   10[COMMON] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  2    6[COMMON] int 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, status,0
  2942 ;; Tracked objects:
  2943 ;;		On entry : 40/20
  2944 ;;		On exit  : 40/20
  2945 ;;		Unchanged: FFFBF/0
  2946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2947 ;;      Params:         4       0       0       0       0
  2948 ;;      Locals:         4       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0
  2950 ;;      Totals:         8       0       0       0       0
  2951 ;;Total ram usage:        8 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; This function calls:
  2954 ;;		Nothing
  2955 ;; This function is called by:
  2956 ;;		_scale
  2957 ;;		_sprintf
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960  04C3                     ___awdiv:	
  2961                           
  2962                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2963  04C3  01FB               	clrf	___awdiv@sign
  2964  04C4  1FF7               	btfss	___awdiv@divisor+1,7
  2965  04C5  2CCD               	goto	l4899
  2966  04C6  09F6               	comf	___awdiv@divisor,f
  2967  04C7  09F7               	comf	___awdiv@divisor+1,f
  2968  04C8  0AF6               	incf	___awdiv@divisor,f
  2969  04C9  1903               	skipnz
  2970  04CA  0AF7               	incf	___awdiv@divisor+1,f
  2971  04CB  01FB               	clrf	___awdiv@sign
  2972  04CC  0AFB               	incf	___awdiv@sign,f
  2973  04CD                     l4899:	
  2974  04CD  1FF9               	btfss	___awdiv@dividend+1,7
  2975  04CE  2CD6               	goto	l4905
  2976  04CF  09F8               	comf	___awdiv@dividend,f
  2977  04D0  09F9               	comf	___awdiv@dividend+1,f
  2978  04D1  0AF8               	incf	___awdiv@dividend,f
  2979  04D2  1903               	skipnz
  2980  04D3  0AF9               	incf	___awdiv@dividend+1,f
  2981  04D4  3001               	movlw	1
  2982  04D5  06FB               	xorwf	___awdiv@sign,f
  2983  04D6                     l4905:	
  2984  04D6  01FC               	clrf	___awdiv@quotient
  2985  04D7  01FD               	clrf	___awdiv@quotient+1
  2986  04D8  0877               	movf	___awdiv@divisor+1,w
  2987  04D9  0476               	iorwf	___awdiv@divisor,w
  2988  04DA  1903               	skipnz
  2989  04DB  2CFB               	goto	l4927
  2990  04DC  01FA               	clrf	___awdiv@counter
  2991  04DD                     L14:	
  2992  04DD  0AFA               	incf	___awdiv@counter,f
  2993  04DE  1BF7               	btfsc	___awdiv@divisor+1,7
  2994  04DF  2CE4               	goto	l4915
  2995  04E0  1003               	clrc
  2996  04E1  0DF6               	rlf	___awdiv@divisor,f
  2997  04E2  0DF7               	rlf	___awdiv@divisor+1,f
  2998  04E3  2CDD               	goto	L14
  2999  04E4                     l4915:	
  3000  04E4  1003               	clrc
  3001  04E5  0DFC               	rlf	___awdiv@quotient,f
  3002  04E6  0DFD               	rlf	___awdiv@quotient+1,f
  3003  04E7  0877               	movf	___awdiv@divisor+1,w
  3004  04E8  0279               	subwf	___awdiv@dividend+1,w
  3005  04E9  1D03               	skipz
  3006  04EA  2CED               	goto	u1985
  3007  04EB  0876               	movf	___awdiv@divisor,w
  3008  04EC  0278               	subwf	___awdiv@dividend,w
  3009  04ED                     u1985:	
  3010  04ED  1C03               	skipc
  3011  04EE  2CF7               	goto	L15
  3012  04EF  0876               	movf	___awdiv@divisor,w
  3013  04F0  02F8               	subwf	___awdiv@dividend,f
  3014  04F1  0877               	movf	___awdiv@divisor+1,w
  3015  04F2  1C03               	skipc
  3016  04F3  03F9               	decf	___awdiv@dividend+1,f
  3017  04F4  02F9               	subwf	___awdiv@dividend+1,f
  3018  04F5  147C               	bsf	___awdiv@quotient,0
  3019  04F6  1003               	clrc
  3020  04F7                     L15:	
  3021  04F7  0CF7               	rrf	___awdiv@divisor+1,f
  3022  04F8  0CF6               	rrf	___awdiv@divisor,f
  3023  04F9  0BFA               	decfsz	___awdiv@counter,f
  3024  04FA  2CE4               	goto	l4915
  3025  04FB                     l4927:	
  3026  04FB  087B               	movf	___awdiv@sign,w
  3027  04FC  1903               	btfsc	3,2
  3028  04FD  2D03               	goto	l4931
  3029  04FE  09FC               	comf	___awdiv@quotient,f
  3030  04FF  09FD               	comf	___awdiv@quotient+1,f
  3031  0500  0AFC               	incf	___awdiv@quotient,f
  3032  0501  1903               	skipnz
  3033  0502  0AFD               	incf	___awdiv@quotient+1,f
  3034  0503                     l4931:	
  3035  0503  087D               	movf	___awdiv@quotient+1,w
  3036  0504  00F7               	movwf	?___awdiv+1
  3037  0505  087C               	movf	___awdiv@quotient,w
  3038  0506  00F6               	movwf	?___awdiv
  3039  0507  0008               	return
  3040  0508                     __end_of___awdiv:	
  3041  0508                     __ptext563:	
  3042 ;; =============== function _pause ends ============
  3043                           
  3044                           
  3045 ;; *************** function ___awmod *****************
  3046 ;; Defined at:
  3047 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  divisor         2    0[COMMON] int 
  3050 ;;  dividend        2    2[COMMON] int 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  sign            1    5[COMMON] unsigned char 
  3053 ;;  counter         1    4[COMMON] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  2    0[COMMON] int 
  3056 ;; Registers used:
  3057 ;;		wreg, status,2, status,0
  3058 ;; Tracked objects:
  3059 ;;		On entry : 60/0
  3060 ;;		On exit  : 60/0
  3061 ;;		Unchanged: FFF9F/0
  3062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3063 ;;      Params:         4       0       0       0       0
  3064 ;;      Locals:         2       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0
  3066 ;;      Totals:         6       0       0       0       0
  3067 ;;Total ram usage:        6 bytes
  3068 ;; Hardware stack levels used:    1
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_scale
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075  0508                     ___awmod:	
  3076                           
  3077                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3078  0508  01F5               	clrf	___awmod@sign
  3079  0509  1FF3               	btfss	___awmod@dividend+1,7
  3080  050A  2D12               	goto	l5017
  3081  050B  09F2               	comf	___awmod@dividend,f
  3082  050C  09F3               	comf	___awmod@dividend+1,f
  3083  050D  0AF2               	incf	___awmod@dividend,f
  3084  050E  1903               	skipnz
  3085  050F  0AF3               	incf	___awmod@dividend+1,f
  3086  0510  01F5               	clrf	___awmod@sign
  3087  0511  0AF5               	incf	___awmod@sign,f
  3088  0512                     l5017:	
  3089  0512  1FF1               	btfss	___awmod@divisor+1,7
  3090  0513  2D19               	goto	l5021
  3091  0514  09F0               	comf	___awmod@divisor,f
  3092  0515  09F1               	comf	___awmod@divisor+1,f
  3093  0516  0AF0               	incf	___awmod@divisor,f
  3094  0517  1903               	skipnz
  3095  0518  0AF1               	incf	___awmod@divisor+1,f
  3096  0519                     l5021:	
  3097  0519  0871               	movf	___awmod@divisor+1,w
  3098  051A  0470               	iorwf	___awmod@divisor,w
  3099  051B  1903               	skipnz
  3100  051C  2D38               	goto	l5037
  3101  051D  01F4               	clrf	___awmod@counter
  3102  051E                     L7:	
  3103  051E  0AF4               	incf	___awmod@counter,f
  3104  051F  1BF1               	btfsc	___awmod@divisor+1,7
  3105  0520  2D25               	goto	l5029
  3106  0521  1003               	clrc
  3107  0522  0DF0               	rlf	___awmod@divisor,f
  3108  0523  0DF1               	rlf	___awmod@divisor+1,f
  3109  0524  2D1E               	goto	L7
  3110  0525                     l5029:	
  3111  0525  0871               	movf	___awmod@divisor+1,w
  3112  0526  0273               	subwf	___awmod@dividend+1,w
  3113  0527  1D03               	skipz
  3114  0528  2D2B               	goto	u2175
  3115  0529  0870               	movf	___awmod@divisor,w
  3116  052A  0272               	subwf	___awmod@dividend,w
  3117  052B                     u2175:	
  3118  052B  1C03               	skipc
  3119  052C  2D34               	goto	L8
  3120  052D  0870               	movf	___awmod@divisor,w
  3121  052E  02F2               	subwf	___awmod@dividend,f
  3122  052F  0871               	movf	___awmod@divisor+1,w
  3123  0530  1C03               	skipc
  3124  0531  03F3               	decf	___awmod@dividend+1,f
  3125  0532  02F3               	subwf	___awmod@dividend+1,f
  3126  0533  1003               	clrc
  3127  0534                     L8:	
  3128  0534  0CF1               	rrf	___awmod@divisor+1,f
  3129  0535  0CF0               	rrf	___awmod@divisor,f
  3130  0536  0BF4               	decfsz	___awmod@counter,f
  3131  0537  2D25               	goto	l5029
  3132  0538                     l5037:	
  3133  0538  0875               	movf	___awmod@sign,w
  3134  0539  1903               	btfsc	3,2
  3135  053A  2D40               	goto	l5041
  3136  053B  09F2               	comf	___awmod@dividend,f
  3137  053C  09F3               	comf	___awmod@dividend+1,f
  3138  053D  0AF2               	incf	___awmod@dividend,f
  3139  053E  1903               	skipnz
  3140  053F  0AF3               	incf	___awmod@dividend+1,f
  3141  0540                     l5041:	
  3142  0540  0873               	movf	___awmod@dividend+1,w
  3143  0541  00F1               	movwf	?___awmod+1
  3144  0542  0872               	movf	___awmod@dividend,w
  3145  0543  00F0               	movwf	?___awmod
  3146  0544  0008               	return
  3147  0545                     __end_of___awmod:	
  3148  0545                     __ptext559:	
  3149 ;; =============== function ___awtoft ends ============
  3150                           
  3151                           
  3152 ;; *************** function ___ftmul *****************
  3153 ;; Defined at:
  3154 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  f1              3   13[BANK0 ] float 
  3157 ;;  f2              3   16[BANK0 ] float 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
  3160 ;;  sign            1   27[BANK0 ] unsigned char 
  3161 ;;  cntr            1   26[BANK0 ] unsigned char 
  3162 ;;  exp             1   22[BANK0 ] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  3   13[BANK0 ] float 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0, pclath, cstack
  3167 ;; Tracked objects:
  3168 ;;		On entry : 60/0
  3169 ;;		On exit  : 60/0
  3170 ;;		Unchanged: FFF9F/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3172 ;;      Params:         0       6       0       0       0
  3173 ;;      Locals:         0       6       0       0       0
  3174 ;;      Temps:          0       3       0       0       0
  3175 ;;      Totals:         0      15       0       0       0
  3176 ;;Total ram usage:       15 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    1
  3179 ;; This function calls:
  3180 ;;		___ftpack
  3181 ;; This function is called by:
  3182 ;;		_main
  3183 ;;		_fround
  3184 ;;		_scale
  3185 ;;		_sprintf
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188  0545                     ___ftmul:	
  3189                           
  3190                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3191  0545  082D               	movf	___ftmul@f1,w
  3192  0546  00B3               	movwf	??___ftmul
  3193  0547  082E               	movf	___ftmul@f1+1,w
  3194  0548  00B4               	movwf	??___ftmul+1
  3195  0549  082F               	movf	___ftmul@f1+2,w
  3196  054A  00B5               	movwf	??___ftmul+2
  3197  054B  1003               	clrc
  3198  054C  0D34               	rlf	??___ftmul+1,w
  3199  054D  0D35               	rlf	??___ftmul+2,w
  3200  054E  00B6               	movwf	___ftmul@exp
  3201  054F  08B6               	movf	___ftmul@exp,f
  3202  0550  1D03               	skipz
  3203  0551  2D56               	goto	l5167
  3204  0552  01AD               	clrf	?___ftmul
  3205  0553  01AE               	clrf	?___ftmul+1
  3206  0554  01AF               	clrf	?___ftmul+2
  3207  0555  0008               	return
  3208  0556                     l5167:	
  3209  0556  0830               	movf	___ftmul@f2,w
  3210  0557  00B3               	movwf	??___ftmul
  3211  0558  0831               	movf	___ftmul@f2+1,w
  3212  0559  00B4               	movwf	??___ftmul+1
  3213  055A  0832               	movf	___ftmul@f2+2,w
  3214  055B  00B5               	movwf	??___ftmul+2
  3215  055C  1003               	clrc
  3216  055D  0D34               	rlf	??___ftmul+1,w
  3217  055E  0D35               	rlf	??___ftmul+2,w
  3218  055F  00BB               	movwf	___ftmul@sign
  3219  0560  08BB               	movf	___ftmul@sign,f
  3220  0561  1D03               	skipz
  3221  0562  2D67               	goto	l5173
  3222  0563  01AD               	clrf	?___ftmul
  3223  0564  01AE               	clrf	?___ftmul+1
  3224  0565  01AF               	clrf	?___ftmul+2
  3225  0566  0008               	return
  3226  0567                     l5173:	
  3227  0567  083B               	movf	___ftmul@sign,w
  3228  0568  3E7B               	addlw	123
  3229  0569  07B6               	addwf	___ftmul@exp,f
  3230  056A  082F               	movf	___ftmul@f1+2,w
  3231  056B  00BB               	movwf	___ftmul@sign
  3232  056C  0832               	movf	___ftmul@f2+2,w
  3233  056D  06BB               	xorwf	___ftmul@sign,f
  3234  056E  3080               	movlw	128
  3235  056F  05BB               	andwf	___ftmul@sign,f
  3236  0570  3007               	movlw	7
  3237  0571  17AE               	bsf	___ftmul@f1+1,7
  3238  0572  17B1               	bsf	___ftmul@f2+1,7
  3239  0573  01B2               	clrf	___ftmul@f2+2
  3240  0574  01B7               	clrf	___ftmul@f3_as_product
  3241  0575  01B8               	clrf	___ftmul@f3_as_product+1
  3242  0576  01B9               	clrf	___ftmul@f3_as_product+2
  3243  0577  00BA               	movwf	___ftmul@cntr
  3244  0578                     l5191:	
  3245  0578  1C2D               	btfss	___ftmul@f1,0
  3246  0579  2D82               	goto	l5195
  3247  057A  0830               	movf	___ftmul@f2,w
  3248  057B  2765  120A  118A   	fcall	PL17	;call to abstracted procedure
  3249  057E  1803               	skipnc
  3250  057F  0A32               	incf	___ftmul@f2+2,w
  3251  0580  1D03               	btfss	3,2
  3252  0581  07B9               	addwf	___ftmul@f3_as_product+2,f
  3253  0582                     l5195:	
  3254  0582  1003               	clrc
  3255  0583  0CAF               	rrf	___ftmul@f1+2,f
  3256  0584  0CAE               	rrf	___ftmul@f1+1,f
  3257  0585  0CAD               	rrf	___ftmul@f1,f
  3258  0586  1003               	clrc
  3259  0587  0DB0               	rlf	___ftmul@f2,f
  3260  0588  0DB1               	rlf	___ftmul@f2+1,f
  3261  0589  0DB2               	rlf	___ftmul@f2+2,f
  3262  058A  0BBA               	decfsz	___ftmul@cntr,f
  3263  058B  2D78               	goto	l5191
  3264  058C  3009               	movlw	9
  3265  058D  00BA               	movwf	___ftmul@cntr
  3266  058E                     l5203:	
  3267  058E  1C2D               	btfss	___ftmul@f1,0
  3268  058F  2D98               	goto	l5207
  3269  0590  0830               	movf	___ftmul@f2,w
  3270  0591  2765  120A  118A   	fcall	PL17	;call to abstracted procedure
  3271  0594  1803               	skipnc
  3272  0595  0A32               	incf	___ftmul@f2+2,w
  3273  0596  1D03               	btfss	3,2
  3274  0597  07B9               	addwf	___ftmul@f3_as_product+2,f
  3275  0598                     l5207:	
  3276  0598  1003               	clrc
  3277  0599  0CAF               	rrf	___ftmul@f1+2,f
  3278  059A  0CAE               	rrf	___ftmul@f1+1,f
  3279  059B  0CAD               	rrf	___ftmul@f1,f
  3280  059C  1003               	clrc
  3281  059D  0CB9               	rrf	___ftmul@f3_as_product+2,f
  3282  059E  0CB8               	rrf	___ftmul@f3_as_product+1,f
  3283  059F  0CB7               	rrf	___ftmul@f3_as_product,f
  3284  05A0  0BBA               	decfsz	___ftmul@cntr,f
  3285  05A1  2D8E               	goto	l5203
  3286  05A2  0837               	movf	___ftmul@f3_as_product,w
  3287  05A3  00F0               	movwf	?___ftpack
  3288  05A4  0838               	movf	___ftmul@f3_as_product+1,w
  3289  05A5  00F1               	movwf	?___ftpack+1
  3290  05A6  0839               	movf	___ftmul@f3_as_product+2,w
  3291  05A7  00F2               	movwf	?___ftpack+2
  3292  05A8  0836               	movf	___ftmul@exp,w
  3293  05A9  00F3               	movwf	?___ftpack+3
  3294  05AA  083B               	movf	___ftmul@sign,w
  3295  05AB  00F4               	movwf	?___ftpack+4
  3296  05AC  25C2               	fcall	___ftpack
  3297  05AD  0870               	movf	?___ftpack,w
  3298  05AE  00AD               	movwf	?___ftmul
  3299  05AF  0871               	movf	?___ftpack+1,w
  3300  05B0  00AE               	movwf	?___ftmul+1
  3301  05B1  0872               	movf	?___ftpack+2,w
  3302  05B2  00AF               	movwf	?___ftmul+2
  3303  05B3  0008               	return
  3304  05B4                     __end_of___ftmul:	
  3305  05B4                     __ptext574:	
  3306 ;; =============== function ___wmul ends ============
  3307                           
  3308                           
  3309 ;; *************** function ___bmul *****************
  3310 ;; Defined at:
  3311 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  multiplier      1    wreg     unsigned char 
  3314 ;;  multiplicand    1    9[COMMON] unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  multiplier      1   11[COMMON] unsigned char 
  3317 ;;  product         1   10[COMMON] unsigned char 
  3318 ;; Return value:  Size  Location     Type
  3319 ;;                  1    wreg      unsigned char 
  3320 ;; Registers used:
  3321 ;;		wreg, status,2, status,0
  3322 ;; Tracked objects:
  3323 ;;		On entry : 60/0
  3324 ;;		On exit  : 60/0
  3325 ;;		Unchanged: FFF9F/0
  3326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3327 ;;      Params:         1       0       0       0       0
  3328 ;;      Locals:         2       0       0       0       0
  3329 ;;      Temps:          0       0       0       0       0
  3330 ;;      Totals:         3       0       0       0       0
  3331 ;;Total ram usage:        3 bytes
  3332 ;; Hardware stack levels used:    1
  3333 ;; This function calls:
  3334 ;;		Nothing
  3335 ;; This function is called by:
  3336 ;;		_fround
  3337 ;;		_scale
  3338 ;; This function uses a non-reentrant model
  3339 ;;
  3340  05B4                     ___bmul:	
  3341                           
  3342                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3343                           ;___bmul@multiplier stored from wreg
  3344  05B4  00FB               	movwf	___bmul@multiplier
  3345  05B5  01FA               	clrf	___bmul@product
  3346  05B6                     l4753:	
  3347  05B6  0879               	movf	___bmul@multiplicand,w
  3348  05B7  187B               	btfsc	___bmul@multiplier,0
  3349  05B8  07FA               	addwf	___bmul@product,f
  3350  05B9  1003               	clrc
  3351  05BA  0DF9               	rlf	___bmul@multiplicand,f
  3352  05BB  1003               	clrc
  3353  05BC  0CFB               	rrf	___bmul@multiplier,f
  3354  05BD  08FB               	movf	___bmul@multiplier,f
  3355  05BE  1D03               	skipz
  3356  05BF  2DB6               	goto	l4753
  3357  05C0  087A               	movf	___bmul@product,w
  3358  05C1  0008               	return
  3359  05C2                     __end_of___bmul:	
  3360  05C2                     __ptext570:	
  3361 ;; =============== function ___fttol ends ============
  3362                           
  3363                           
  3364 ;; *************** function ___ftpack *****************
  3365 ;; Defined at:
  3366 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  arg             3    0[COMMON] unsigned um
  3369 ;;  exp             1    3[COMMON] unsigned char 
  3370 ;;  sign            1    4[COMMON] unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;                  3    0[COMMON] float 
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0
  3377 ;; Tracked objects:
  3378 ;;		On entry : 40/20
  3379 ;;		On exit  : 40/20
  3380 ;;		Unchanged: FFFBF/0
  3381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3382 ;;      Params:         5       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0
  3384 ;;      Temps:          3       0       0       0       0
  3385 ;;      Totals:         8       0       0       0       0
  3386 ;;Total ram usage:        8 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		___ftadd
  3392 ;;		___ftmul
  3393 ;;		___awtoft
  3394 ;;		___lltoft
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397  05C2                     ___ftpack:	
  3398                           
  3399                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3400  05C2  0873               	movf	___ftpack@exp,w
  3401  05C3  1903               	btfsc	3,2
  3402  05C4  2DCA               	goto	l4829
  3403  05C5  0872               	movf	___ftpack@arg+2,w
  3404  05C6  0471               	iorwf	___ftpack@arg+1,w
  3405  05C7  0470               	iorwf	___ftpack@arg,w
  3406  05C8  1D03               	skipz
  3407  05C9  2DD3               	goto	l4835
  3408  05CA                     l4829:	
  3409  05CA  01F0               	clrf	?___ftpack
  3410  05CB  01F1               	clrf	?___ftpack+1
  3411  05CC  01F2               	clrf	?___ftpack+2
  3412  05CD  0008               	return
  3413  05CE                     l4833:	
  3414  05CE  0AF3               	incf	___ftpack@exp,f
  3415  05CF  1003               	clrc
  3416  05D0  0CF2               	rrf	___ftpack@arg+2,f
  3417  05D1  0CF1               	rrf	___ftpack@arg+1,f
  3418  05D2  0CF0               	rrf	___ftpack@arg,f
  3419  05D3                     l4835:	
  3420  05D3  30FE               	movlw	254
  3421  05D4  0572               	andwf	___ftpack@arg+2,w
  3422  05D5  1903               	btfsc	3,2
  3423  05D6  2DE2               	goto	l4839
  3424  05D7  2DCE               	goto	l4833
  3425  05D8                     l4837:	
  3426  05D8  0AF3               	incf	___ftpack@exp,f
  3427  05D9  0AF0               	incf	___ftpack@arg,f
  3428  05DA  1903               	skipnz
  3429  05DB  0AF1               	incf	___ftpack@arg+1,f
  3430  05DC  1903               	skipnz
  3431  05DD  0AF2               	incf	___ftpack@arg+2,f
  3432  05DE  1003               	clrc
  3433  05DF  0CF2               	rrf	___ftpack@arg+2,f
  3434  05E0  0CF1               	rrf	___ftpack@arg+1,f
  3435  05E1  0CF0               	rrf	___ftpack@arg,f
  3436  05E2                     l4839:	
  3437  05E2  30FF               	movlw	255
  3438  05E3  0572               	andwf	___ftpack@arg+2,w
  3439  05E4  1903               	btfsc	3,2
  3440  05E5  2DEC               	goto	l4843
  3441  05E6  2DD8               	goto	l4837
  3442  05E7                     l4841:	
  3443  05E7  03F3               	decf	___ftpack@exp,f
  3444  05E8  1003               	clrc
  3445  05E9  0DF0               	rlf	___ftpack@arg,f
  3446  05EA  0DF1               	rlf	___ftpack@arg+1,f
  3447  05EB  0DF2               	rlf	___ftpack@arg+2,f
  3448  05EC                     l4843:	
  3449  05EC  1FF1               	btfss	___ftpack@arg+1,7
  3450  05ED  2DE7               	goto	l4841
  3451  05EE  1C73               	btfss	___ftpack@exp,0
  3452  05EF  13F1               	bcf	___ftpack@arg+1,7
  3453  05F0  1003               	clrc
  3454  05F1  0CF3               	rrf	___ftpack@exp,f
  3455  05F2  0873               	movf	___ftpack@exp,w
  3456  05F3  00F7               	movwf	??___ftpack+2
  3457  05F4  01F6               	clrf	??___ftpack+1
  3458  05F5  01F5               	clrf	??___ftpack
  3459  05F6  0875               	movf	??___ftpack,w
  3460  05F7  04F0               	iorwf	___ftpack@arg,f
  3461  05F8  0876               	movf	??___ftpack+1,w
  3462  05F9  04F1               	iorwf	___ftpack@arg+1,f
  3463  05FA  0877               	movf	??___ftpack+2,w
  3464  05FB  04F2               	iorwf	___ftpack@arg+2,f
  3465  05FC  0874               	movf	___ftpack@sign,w
  3466  05FD  1D03               	skipz
  3467  05FE  17F2               	bsf	___ftpack@arg+2,7
  3468  05FF  0008               	return
  3469  0600                     __end_of___ftpack:	
  3470  0600                     __ptext565:	
  3471 ;; =============== function ___lldiv ends ============
  3472                           
  3473                           
  3474 ;; *************** function ___ftge *****************
  3475 ;; Defined at:
  3476 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftge.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  ff1             3    0[COMMON] float 
  3479 ;;  ff2             3    3[COMMON] float 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;		None
  3482 ;; Return value:  Size  Location     Type
  3483 ;;		None               void
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0
  3486 ;; Tracked objects:
  3487 ;;		On entry : 60/20
  3488 ;;		On exit  : 60/20
  3489 ;;		Unchanged: FFF9F/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3491 ;;      Params:         6       0       0       0       0
  3492 ;;      Locals:         0       0       0       0       0
  3493 ;;      Temps:          0       0       0       0       0
  3494 ;;      Totals:         6       0       0       0       0
  3495 ;;Total ram usage:        6 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_sprintf
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503  0600                     ___ftge:	
  3504                           
  3505                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3506  0600  1FF2               	btfss	___ftge@ff1+2,7
  3507  0601  2E0F               	goto	l4967
  3508  0602  0870               	movf	___ftge@ff1,w
  3509  0603  3C00               	sublw	0
  3510  0604  00F0               	movwf	___ftge@ff1
  3511  0605  0871               	movf	___ftge@ff1+1,w
  3512  0606  1C03               	skipc
  3513  0607  0F71               	incfsz	___ftge@ff1+1,w
  3514  0608  3C00               	sublw	0
  3515  0609  00F1               	movwf	___ftge@ff1+1
  3516  060A  0872               	movf	___ftge@ff1+2,w
  3517  060B  1C03               	skipc
  3518  060C  0F72               	incfsz	___ftge@ff1+2,w
  3519  060D  3C80               	sublw	128
  3520  060E  00F2               	movwf	___ftge@ff1+2
  3521  060F                     l4967:	
  3522  060F  1FF5               	btfss	___ftge@ff2+2,7
  3523  0610  2E1E               	goto	l4971
  3524  0611  0873               	movf	___ftge@ff2,w
  3525  0612  3C00               	sublw	0
  3526  0613  00F3               	movwf	___ftge@ff2
  3527  0614  0874               	movf	___ftge@ff2+1,w
  3528  0615  1C03               	skipc
  3529  0616  0F74               	incfsz	___ftge@ff2+1,w
  3530  0617  3C00               	sublw	0
  3531  0618  00F4               	movwf	___ftge@ff2+1
  3532  0619  0875               	movf	___ftge@ff2+2,w
  3533  061A  1C03               	skipc
  3534  061B  0F75               	incfsz	___ftge@ff2+2,w
  3535  061C  3C80               	sublw	128
  3536  061D  00F5               	movwf	___ftge@ff2+2
  3537  061E                     l4971:	
  3538  061E  3080               	movlw	128
  3539  061F  06F2               	xorwf	___ftge@ff1+2,f
  3540  0620  06F5               	xorwf	___ftge@ff2+2,f
  3541  0621  0875               	movf	___ftge@ff2+2,w
  3542  0622  0272               	subwf	___ftge@ff1+2,w
  3543  0623  1D03               	skipz
  3544  0624  0008               	return
  3545  0625  0874               	movf	___ftge@ff2+1,w
  3546  0626  0271               	subwf	___ftge@ff1+1,w
  3547  0627  1D03               	skipz
  3548  0628  0008               	return
  3549  0629  0873               	movf	___ftge@ff2,w
  3550  062A  0270               	subwf	___ftge@ff1,w
  3551  062B  0008               	return
  3552  062C                     __end_of___ftge:	
  3553  062C                     __ptext569:	
  3554 ;; =============== function ___awdiv ends ============
  3555                           
  3556                           
  3557 ;; *************** function ___fttol *****************
  3558 ;; Defined at:
  3559 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  f1              3    0[BANK0 ] float 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  lval            4    8[BANK0 ] unsigned long 
  3564 ;;  exp1            1   12[BANK0 ] unsigned char 
  3565 ;;  sign1           1    7[BANK0 ] unsigned char 
  3566 ;; Return value:  Size  Location     Type
  3567 ;;                  4    0[BANK0 ] long 
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0
  3570 ;; Tracked objects:
  3571 ;;		On entry : 60/0
  3572 ;;		On exit  : 60/0
  3573 ;;		Unchanged: FFF9F/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3575 ;;      Params:         0       4       0       0       0
  3576 ;;      Locals:         0       6       0       0       0
  3577 ;;      Temps:          0       3       0       0       0
  3578 ;;      Totals:         0      13       0       0       0
  3579 ;;Total ram usage:       13 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; This function calls:
  3582 ;;		Nothing
  3583 ;; This function is called by:
  3584 ;;		_sprintf
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587  062C                     ___fttol:	
  3588                           
  3589                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3590  062C  279F  120A  118A   	fcall	PL25	;call to abstracted procedure
  3591  062F  1003               	clrc
  3592  0630  0D25               	rlf	??___fttol+1,w
  3593  0631  0D26               	rlf	??___fttol+2,w
  3594  0632  00AC               	movwf	___fttol@exp1
  3595  0633  08AC               	movf	___fttol@exp1,f
  3596  0634  1D03               	skipz
  3597  0635  2E3B               	goto	l4857
  3598  0636                     l4855:	
  3599  0636  01A0               	clrf	?___fttol
  3600  0637  01A1               	clrf	?___fttol+1
  3601  0638  01A2               	clrf	?___fttol+2
  3602  0639  01A3               	clrf	?___fttol+3
  3603  063A  0008               	return
  3604  063B                     l4857:	
  3605  063B  279F  120A  118A   	fcall	PL25	;call to abstracted procedure
  3606  063E  3017               	movlw	23
  3607  063F                     u1875:	
  3608  063F  1003               	clrc
  3609  0640  0CA6               	rrf	??___fttol+2,f
  3610  0641  0CA5               	rrf	??___fttol+1,f
  3611  0642  0CA4               	rrf	??___fttol,f
  3612  0643  3EFF               	addlw	-1
  3613  0644  1D03               	skipz
  3614  0645  2E3F               	goto	u1875
  3615  0646  0824               	movf	??___fttol,w
  3616  0647  00A7               	movwf	___fttol@sign1
  3617  0648  17A1               	bsf	___fttol@f1+1,7
  3618  0649  01A2               	clrf	___fttol@f1+2
  3619  064A  0820               	movf	___fttol@f1,w
  3620  064B  00A8               	movwf	___fttol@lval
  3621  064C  0821               	movf	___fttol@f1+1,w
  3622  064D  00A9               	movwf	___fttol@lval+1
  3623  064E  0822               	movf	___fttol@f1+2,w
  3624  064F  00AA               	movwf	___fttol@lval+2
  3625  0650  308E               	movlw	142
  3626  0651  01AB               	clrf	___fttol@lval+3
  3627  0652  02AC               	subwf	___fttol@exp1,f
  3628  0653  1FAC               	btfss	___fttol@exp1,7
  3629  0654  2E62               	goto	l4877
  3630  0655  082C               	movf	___fttol@exp1,w
  3631  0656  3A80               	xorlw	128
  3632  0657  3E8F               	addlw	143
  3633  0658  1C03               	btfss	3,0
  3634  0659  2E36               	goto	l4855
  3635  065A                     l4873:	
  3636  065A  1003               	clrc
  3637  065B  0CAB               	rrf	___fttol@lval+3,f
  3638  065C  0CAA               	rrf	___fttol@lval+2,f
  3639  065D  0CA9               	rrf	___fttol@lval+1,f
  3640  065E  0CA8               	rrf	___fttol@lval,f
  3641  065F  0FAC               	incfsz	___fttol@exp1,f
  3642  0660  2E5A               	goto	l4873
  3643  0661  2E70               	goto	l4883
  3644  0662                     l4877:	
  3645  0662  3018               	movlw	24
  3646  0663  022C               	subwf	___fttol@exp1,w
  3647  0664  1803               	btfsc	3,0
  3648  0665  2E36               	goto	l4855
  3649  0666                     l2312:	
  3650  0666  08AC               	movf	___fttol@exp1,f
  3651  0667  1903               	btfsc	3,2
  3652  0668  2E70               	goto	l4883
  3653  0669  1003               	clrc
  3654  066A  0DA8               	rlf	___fttol@lval,f
  3655  066B  0DA9               	rlf	___fttol@lval+1,f
  3656  066C  0DAA               	rlf	___fttol@lval+2,f
  3657  066D  0DAB               	rlf	___fttol@lval+3,f
  3658  066E  03AC               	decf	___fttol@exp1,f
  3659  066F  2E66               	goto	l2312
  3660  0670                     l4883:	
  3661  0670  0827               	movf	___fttol@sign1,w
  3662  0671  1903               	btfsc	3,2
  3663  0672  2E7E               	goto	l4887
  3664  0673  09A8               	comf	___fttol@lval,f
  3665  0674  09A9               	comf	___fttol@lval+1,f
  3666  0675  09AA               	comf	___fttol@lval+2,f
  3667  0676  09AB               	comf	___fttol@lval+3,f
  3668  0677  0AA8               	incf	___fttol@lval,f
  3669  0678  1903               	skipnz
  3670  0679  0AA9               	incf	___fttol@lval+1,f
  3671  067A  1903               	skipnz
  3672  067B  0AAA               	incf	___fttol@lval+2,f
  3673  067C  1903               	skipnz
  3674  067D  0AAB               	incf	___fttol@lval+3,f
  3675  067E                     l4887:	
  3676  067E  082B               	movf	___fttol@lval+3,w
  3677  067F  00A3               	movwf	?___fttol+3
  3678  0680  082A               	movf	___fttol@lval+2,w
  3679  0681  00A2               	movwf	?___fttol+2
  3680  0682  0829               	movf	___fttol@lval+1,w
  3681  0683  00A1               	movwf	?___fttol+1
  3682  0684  0828               	movf	___fttol@lval,w
  3683  0685  00A0               	movwf	?___fttol
  3684  0686  0008               	return
  3685  0687                     __end_of___fttol:	
  3686  0687                     __ptext567:	
  3687 ;; =============== function ___ftneg ends ============
  3688                           
  3689                           
  3690 ;; *************** function ___llmod *****************
  3691 ;; Defined at:
  3692 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  3693 ;; Parameters:    Size  Location     Type
  3694 ;;  divisor         4    0[BANK0 ] unsigned long 
  3695 ;;  dividend        4    4[BANK0 ] unsigned long 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  counter         1   13[COMMON] unsigned char 
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  4    0[BANK0 ] unsigned long 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2, status,0
  3702 ;; Tracked objects:
  3703 ;;		On entry : 60/0
  3704 ;;		On exit  : 60/0
  3705 ;;		Unchanged: FFF9F/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3707 ;;      Params:         0       8       0       0       0
  3708 ;;      Locals:         1       0       0       0       0
  3709 ;;      Temps:          0       0       0       0       0
  3710 ;;      Totals:         1       8       0       0       0
  3711 ;;Total ram usage:        9 bytes
  3712 ;; Hardware stack levels used:    1
  3713 ;; This function calls:
  3714 ;;		Nothing
  3715 ;; This function is called by:
  3716 ;;		_sprintf
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719  0687                     ___llmod:	
  3720                           
  3721                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3722  0687  0823               	movf	___llmod@divisor+3,w
  3723  0688  0422               	iorwf	___llmod@divisor+2,w
  3724  0689  0421               	iorwf	___llmod@divisor+1,w
  3725  068A  0420               	iorwf	___llmod@divisor,w
  3726  068B  1903               	skipnz
  3727  068C  2EBC               	goto	l4951
  3728  068D  01FD               	clrf	___llmod@counter
  3729  068E                     L12:	
  3730  068E  0AFD               	incf	___llmod@counter,f
  3731  068F  1BA3               	btfsc	___llmod@divisor+3,7
  3732  0690  2E97               	goto	l4943
  3733  0691  1003               	clrc
  3734  0692  0DA0               	rlf	___llmod@divisor,f
  3735  0693  0DA1               	rlf	___llmod@divisor+1,f
  3736  0694  0DA2               	rlf	___llmod@divisor+2,f
  3737  0695  0DA3               	rlf	___llmod@divisor+3,f
  3738  0696  2E8E               	goto	L12
  3739  0697                     l4943:	
  3740  0697  0823               	movf	___llmod@divisor+3,w
  3741  0698  0227               	subwf	___llmod@dividend+3,w
  3742  0699  1D03               	skipz
  3743  069A  2EA5               	goto	u2035
  3744  069B  0822               	movf	___llmod@divisor+2,w
  3745  069C  0226               	subwf	___llmod@dividend+2,w
  3746  069D  1D03               	skipz
  3747  069E  2EA5               	goto	u2035
  3748  069F  0821               	movf	___llmod@divisor+1,w
  3749  06A0  0225               	subwf	___llmod@dividend+1,w
  3750  06A1  1D03               	skipz
  3751  06A2  2EA5               	goto	u2035
  3752  06A3  0820               	movf	___llmod@divisor,w
  3753  06A4  0224               	subwf	___llmod@dividend,w
  3754  06A5                     u2035:	
  3755  06A5  1C03               	skipc
  3756  06A6  2EB6               	goto	L13
  3757  06A7  0820               	movf	___llmod@divisor,w
  3758  06A8  02A4               	subwf	___llmod@dividend,f
  3759  06A9  0821               	movf	___llmod@divisor+1,w
  3760  06AA  1C03               	skipc
  3761  06AB  0F21               	incfsz	___llmod@divisor+1,w
  3762  06AC  02A5               	subwf	___llmod@dividend+1,f
  3763  06AD  0822               	movf	___llmod@divisor+2,w
  3764  06AE  1C03               	skipc
  3765  06AF  0F22               	incfsz	___llmod@divisor+2,w
  3766  06B0  02A6               	subwf	___llmod@dividend+2,f
  3767  06B1  0823               	movf	___llmod@divisor+3,w
  3768  06B2  1C03               	skipc
  3769  06B3  0F23               	incfsz	___llmod@divisor+3,w
  3770  06B4  02A7               	subwf	___llmod@dividend+3,f
  3771  06B5  1003               	clrc
  3772  06B6                     L13:	
  3773  06B6  0CA3               	rrf	___llmod@divisor+3,f
  3774  06B7  0CA2               	rrf	___llmod@divisor+2,f
  3775  06B8  0CA1               	rrf	___llmod@divisor+1,f
  3776  06B9  0CA0               	rrf	___llmod@divisor,f
  3777  06BA  0BFD               	decfsz	___llmod@counter,f
  3778  06BB  2E97               	goto	l4943
  3779  06BC                     l4951:	
  3780  06BC  0827               	movf	___llmod@dividend+3,w
  3781  06BD  00A3               	movwf	?___llmod+3
  3782  06BE  0826               	movf	___llmod@dividend+2,w
  3783  06BF  00A2               	movwf	?___llmod+2
  3784  06C0  0825               	movf	___llmod@dividend+1,w
  3785  06C1  00A1               	movwf	?___llmod+1
  3786  06C2  0824               	movf	___llmod@dividend,w
  3787  06C3  00A0               	movwf	?___llmod
  3788  06C4  0008               	return
  3789  06C5                     __end_of___llmod:	
  3790  06C5                     __ptext573:	
  3791 ;; =============== function ___lbdiv ends ============
  3792                           
  3793                           
  3794 ;; *************** function ___wmul *****************
  3795 ;; Defined at:
  3796 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;  multiplier      2    0[COMMON] unsigned int 
  3799 ;;  multiplicand    2    2[COMMON] unsigned int 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  product         2    4[COMMON] unsigned int 
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  2    0[COMMON] unsigned int 
  3804 ;; Registers used:
  3805 ;;		wreg, status,2, status,0
  3806 ;; Tracked objects:
  3807 ;;		On entry : 160/20
  3808 ;;		On exit  : 160/20
  3809 ;;		Unchanged: FFE9F/0
  3810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3811 ;;      Params:         4       0       0       0       0
  3812 ;;      Locals:         2       0       0       0       0
  3813 ;;      Temps:          0       0       0       0       0
  3814 ;;      Totals:         6       0       0       0       0
  3815 ;;Total ram usage:        6 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; This function calls:
  3818 ;;		Nothing
  3819 ;; This function is called by:
  3820 ;;		_fround
  3821 ;;		_scale
  3822 ;;		_sprintf
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825  06C5                     ___wmul:	
  3826                           
  3827                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3828  06C5  01F4               	clrf	___wmul@product
  3829  06C6  01F5               	clrf	___wmul@product+1
  3830  06C7                     l4769:	
  3831  06C7  1C70               	btfss	___wmul@multiplier,0
  3832  06C8  2ECF               	goto	l4773
  3833  06C9  0872               	movf	___wmul@multiplicand,w
  3834  06CA  07F4               	addwf	___wmul@product,f
  3835  06CB  1803               	skipnc
  3836  06CC  0AF5               	incf	___wmul@product+1,f
  3837  06CD  0873               	movf	___wmul@multiplicand+1,w
  3838  06CE  07F5               	addwf	___wmul@product+1,f
  3839  06CF                     l4773:	
  3840  06CF  1003               	clrc
  3841  06D0  0DF2               	rlf	___wmul@multiplicand,f
  3842  06D1  0DF3               	rlf	___wmul@multiplicand+1,f
  3843  06D2  1003               	clrc
  3844  06D3  0CF1               	rrf	___wmul@multiplier+1,f
  3845  06D4  0CF0               	rrf	___wmul@multiplier,f
  3846  06D5  0871               	movf	___wmul@multiplier+1,w
  3847  06D6  0470               	iorwf	___wmul@multiplier,w
  3848  06D7  1D03               	skipz
  3849  06D8  2EC7               	goto	l4769
  3850  06D9  0875               	movf	___wmul@product+1,w
  3851  06DA  00F1               	movwf	?___wmul+1
  3852  06DB  0874               	movf	___wmul@product,w
  3853  06DC  00F0               	movwf	?___wmul
  3854  06DD  0008               	return
  3855  06DE                     __end_of___wmul:	
  3856  06DE                     PL3:	
  3857  06DE  0836               	movf	sprintf@c^(0+128),w
  3858  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3859  06E0  00D6               	movwf	??_sprintf
  3860  06E1  1003               	clrc
  3861  06E2  0DD6               	rlf	??_sprintf,f
  3862  06E3  1003               	clrc
  3863  06E4  0D56               	rlf	??_sprintf,w
  3864  06E5  3E4F               	addlw	low (_dpowers-__stringbase)
  3865  06E6  0084               	movwf	4
  3866  06E7  0008               	return
  3867  06E8                     PL4:	
  3868  06E8  300A               	movlw	10
  3869  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3870  06EA  00A0               	movwf	?___llmod
  3871  06EB  01A1               	clrf	?___llmod+1
  3872  06EC  01A2               	clrf	?___llmod+2
  3873  06ED  01A3               	clrf	?___llmod+3
  3874  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  3875  06EF  0008               	return
  3876  06F0                     PL5:	
  3877  06F0  0823               	movf	?___fttol+3,w
  3878  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  3879  06F2  00AC               	movwf	(sprintf@_val+3)^(0+128)
  3880  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  3881  06F4  0822               	movf	?___fttol+2,w
  3882  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3883  06F6  00AB               	movwf	(sprintf@_val+2)^(0+128)
  3884  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  3885  06F8  0821               	movf	?___fttol+1,w
  3886  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  3887  06FA  00AA               	movwf	(sprintf@_val+1)^(0+128)
  3888  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  3889  06FC  0820               	movf	?___fttol,w
  3890  06FD  0008               	return
  3891  06FE                     PL6:	
  3892  06FE  082D               	movf	?___ftmul,w
  3893  06FF  00C3               	movwf	_scale$2837
  3894  0700  082E               	movf	?___ftmul+1,w
  3895  0701  00C4               	movwf	_scale$2837+1
  3896  0702  082F               	movf	?___ftmul+2,w
  3897  0703  00C5               	movwf	_scale$2837+2
  3898  0704  300A               	movlw	10
  3899  0705  00F0               	movwf	?___awmod
  3900  0706  01F1               	clrf	?___awmod+1
  3901  0707  0846               	movf	scale@scl,w
  3902  0708  00F2               	movwf	?___awmod+2
  3903  0709  01F3               	clrf	?___awmod+3
  3904  070A  0008               	return
  3905  070B                     PL7:	
  3906  070B  0870               	movf	?___awmod,w
  3907  070C  00BF               	movwf	??_scale
  3908  070D  0871               	movf	?___awmod+1,w
  3909  070E  00C0               	movwf	??_scale+1
  3910  070F  083F               	movf	??_scale,w
  3911  0710  073F               	addwf	??_scale,w
  3912  0711  073F               	addwf	??_scale,w
  3913  0712  0008               	return
  3914  0713                     PL8:	
  3915  0713  0876               	movf	?___awdiv,w
  3916  0714  00C1               	movwf	??_scale+2
  3917  0715  0877               	movf	?___awdiv+1,w
  3918  0716  00C2               	movwf	??_scale+3
  3919  0717  0841               	movf	??_scale+2,w
  3920  0718  0741               	addwf	??_scale+2,w
  3921  0719  0741               	addwf	??_scale+2,w
  3922  071A  0008               	return
  3923  071B                     PL9:	
  3924  071B  082D               	movf	?___ftmul,w
  3925  071C  00BC               	movwf	?_scale
  3926  071D  082E               	movf	?___ftmul+1,w
  3927  071E  00BD               	movwf	?_scale+1
  3928  071F  082F               	movf	?___ftmul+2,w
  3929  0720  00BE               	movwf	?_scale+2
  3930  0721  0008               	return
  3931  0722                     PL10:	
  3932  0722  083C               	movf	?_scale,w
  3933  0723  1683               	bsf	3,5	;RP0=1, select bank1
  3934  0724  00AD               	movwf	sprintf@integ^(0+128)
  3935  0725  1283               	bcf	3,5	;RP0=0, select bank0
  3936  0726  083D               	movf	?_scale+1,w
  3937  0727  1683               	bsf	3,5	;RP0=1, select bank1
  3938  0728  00AE               	movwf	(sprintf@integ+1)^(0+128)
  3939  0729  1283               	bcf	3,5	;RP0=0, select bank0
  3940  072A  083E               	movf	?_scale+2,w
  3941  072B  1683               	bsf	3,5	;RP0=1, select bank1
  3942  072C  00AF               	movwf	(sprintf@integ+2)^(0+128)
  3943  072D  0833               	movf	sprintf@fval^(0+128),w
  3944  072E  0008               	return
  3945  072F                     PL11:	
  3946  072F  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0730  00A0               	movwf	?___fttol
  3948  0731  1683               	bsf	3,5	;RP0=1, select bank1
  3949  0732  0834               	movf	(sprintf@fval+1)^(0+128),w
  3950  0733  1283               	bcf	3,5	;RP0=0, select bank0
  3951  0734  00A1               	movwf	?___fttol+1
  3952  0735  1683               	bsf	3,5	;RP0=1, select bank1
  3953  0736  0835               	movf	(sprintf@fval+2)^(0+128),w
  3954  0737  1283               	bcf	3,5	;RP0=0, select bank0
  3955  0738  00A2               	movwf	?___fttol+2
  3956  0739  0008               	return
  3957  073A                     PL12:	
  3958  073A  1283               	bcf	3,5	;RP0=0, select bank0
  3959  073B  00AD               	movwf	?___ftmul
  3960  073C  1683               	bsf	3,5	;RP0=1, select bank1
  3961  073D  0834               	movf	(sprintf@fval+1)^(0+128),w
  3962  073E  1283               	bcf	3,5	;RP0=0, select bank0
  3963  073F  00AE               	movwf	?___ftmul+1
  3964  0740  1683               	bsf	3,5	;RP0=1, select bank1
  3965  0741  0835               	movf	(sprintf@fval+2)^(0+128),w
  3966  0742  1283               	bcf	3,5	;RP0=0, select bank0
  3967  0743  00AF               	movwf	?___ftmul+2
  3968  0744  0008               	return
  3969  0745                     PL13:	
  3970  0745  00F3               	movwf	?___lldiv+3
  3971  0746  1683               	bsf	3,5	;RP0=1, select bank1
  3972  0747  082C               	movf	(sprintf@_val+3)^(0+128),w
  3973  0748  00F7               	movwf	?___lldiv+7
  3974  0749  082B               	movf	(sprintf@_val+2)^(0+128),w
  3975  074A  00F6               	movwf	?___lldiv+6
  3976  074B  082A               	movf	(sprintf@_val+1)^(0+128),w
  3977  074C  00F5               	movwf	?___lldiv+5
  3978  074D  0829               	movf	sprintf@_val^(0+128),w
  3979  074E  00F4               	movwf	?___lldiv+4
  3980  074F  0008               	return
  3981  0750                     PL14:	
  3982  0750  00F6               	movwf	?___awdiv
  3983  0751  01F7               	clrf	?___awdiv+1
  3984  0752  0846               	movf	scale@scl,w
  3985  0753  00F2               	movwf	?___awmod+2
  3986  0754  01F3               	clrf	?___awmod+3
  3987  0755  1BF2               	btfsc	?___awmod+2,7
  3988  0756  03F3               	decf	?___awmod+3,f
  3989  0757  3064               	movlw	100
  3990  0758  00F0               	movwf	?___awmod
  3991  0759  01F1               	clrf	?___awmod+1
  3992  075A  0008               	return
  3993  075B                     PL16:	
  3994  075B  0873               	movf	?___lldiv+3,w
  3995  075C  1283               	bcf	3,5	;RP0=0, select bank0
  3996  075D  00A7               	movwf	?___llmod+7
  3997  075E  0872               	movf	?___lldiv+2,w
  3998  075F  00A6               	movwf	?___llmod+6
  3999  0760  0871               	movf	?___lldiv+1,w
  4000  0761  00A5               	movwf	?___llmod+5
  4001  0762  0870               	movf	?___lldiv,w
  4002  0763  00A4               	movwf	?___llmod+4
  4003  0764  0008               	return
  4004  0765                     PL17:	
  4005  0765  07B7               	addwf	___ftmul@f3_as_product,f
  4006  0766  0831               	movf	___ftmul@f2+1,w
  4007  0767  1103               	clrz
  4008  0768  1803               	skipnc
  4009  0769  0A31               	incf	___ftmul@f2+1,w
  4010  076A  1D03               	btfss	3,2
  4011  076B  07B8               	addwf	___ftmul@f3_as_product+1,f
  4012  076C  0832               	movf	___ftmul@f2+2,w
  4013  076D  1103               	clrz
  4014  076E  0008               	return
  4015  076F                     PL18:	
  4016  076F  0820               	movf	?___llmod,w
  4017  0770  3E30               	addlw	48
  4018  0771  00D7               	movwf	??_sprintf+1
  4019  0772  1683               	bsf	3,5	;RP0=1, select bank1
  4020  0773  0830               	movf	sprintf@sp^(0+128),w
  4021  0774  0084               	movwf	4
  4022  0775  1283               	bcf	3,5	;RP0=0, select bank0
  4023  0776  0857               	movf	??_sprintf+1,w
  4024  0777  0008               	return
  4025  0778                     PL19:	
  4026  0778  082D               	movf	sprintf@integ^(0+128),w
  4027  0779  00F0               	movwf	?___ftge
  4028  077A  082E               	movf	(sprintf@integ+1)^(0+128),w
  4029  077B  00F1               	movwf	?___ftge+1
  4030  077C  082F               	movf	(sprintf@integ+2)^(0+128),w
  4031  077D  00F2               	movwf	?___ftge+2
  4032  077E  0008               	return
  4033  077F                     PL20:	
  4034  077F  0876               	movf	?___awdiv,w
  4035  0780  00BF               	movwf	??_scale
  4036  0781  0877               	movf	?___awdiv+1,w
  4037  0782  00C0               	movwf	??_scale+1
  4038  0783  083F               	movf	??_scale,w
  4039  0784  073F               	addwf	??_scale,w
  4040  0785  073F               	addwf	??_scale,w
  4041  0786  0008               	return
  4042  0787                     PL21:	
  4043  0787  00AF               	movwf	?___ftmul+2
  4044  0788  0843               	movf	_scale$2837,w
  4045  0789  00B0               	movwf	?___ftmul+3
  4046  078A  0844               	movf	_scale$2837+1,w
  4047  078B  00B1               	movwf	?___ftmul+4
  4048  078C  0845               	movf	_scale$2837+2,w
  4049  078D  00B2               	movwf	?___ftmul+5
  4050  078E  0008               	return
  4051  078F                     PL23:	
  4052  078F  00AF               	movwf	?___ftmul+2
  4053  0790  3064               	movlw	100
  4054  0791  00F6               	movwf	?___awdiv
  4055  0792  01F7               	clrf	?___awdiv+1
  4056  0793  0846               	movf	scale@scl,w
  4057  0794  00F8               	movwf	?___awdiv+2
  4058  0795  01F9               	clrf	?___awdiv+3
  4059  0796  0008               	return
  4060  0797                     PL24:	
  4061  0797  00AF               	movwf	?___ftmul+2
  4062  0798  300A               	movlw	10
  4063  0799  00F6               	movwf	?___awdiv
  4064  079A  01F7               	clrf	?___awdiv+1
  4065  079B  0846               	movf	scale@scl,w
  4066  079C  00F8               	movwf	?___awdiv+2
  4067  079D  01F9               	clrf	?___awdiv+3
  4068  079E  0008               	return
  4069  079F                     PL25:	
  4070  079F  0820               	movf	___fttol@f1,w
  4071  07A0  00A4               	movwf	??___fttol
  4072  07A1  0821               	movf	___fttol@f1+1,w
  4073  07A2  00A5               	movwf	??___fttol+1
  4074  07A3  0822               	movf	___fttol@f1+2,w
  4075  07A4  00A6               	movwf	??___fttol+2
  4076  07A5  0008               	return
  4077  07A6                     PL26:	
  4078  07A6  0084               	movwf	4
  4079  07A7  3030               	movlw	48
  4080  07A8  1383               	bcf	3,7	;select IRP bank0
  4081  07A9  0080               	movwf	0
  4082  07AA  30FF               	movlw	-1
  4083  07AB  0AB0               	incf	sprintf@sp^(0+128),f
  4084  07AC  0008               	return
  4085  07AD                     PL28:	
  4086  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  4087  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  4088  07AF  0008               	return
  4089  07B0                     __ptext564:	
  4090 ;; =============== function ___awmod ends ============
  4091                           
  4092                           
  4093 ;; *************** function ___lldiv *****************
  4094 ;; Defined at:
  4095 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;  divisor         4    0[COMMON] unsigned long 
  4098 ;;  dividend        4    4[COMMON] unsigned long 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;  quotient        4    8[COMMON] unsigned long 
  4101 ;;  counter         1   12[COMMON] unsigned char 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  4    0[COMMON] unsigned long 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0
  4106 ;; Tracked objects:
  4107 ;;		On entry : 60/20
  4108 ;;		On exit  : 60/20
  4109 ;;		Unchanged: FFF9F/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4111 ;;      Params:         8       0       0       0       0
  4112 ;;      Locals:         5       0       0       0       0
  4113 ;;      Temps:          0       0       0       0       0
  4114 ;;      Totals:        13       0       0       0       0
  4115 ;;Total ram usage:       13 bytes
  4116 ;; Hardware stack levels used:    1
  4117 ;; This function calls:
  4118 ;;		Nothing
  4119 ;; This function is called by:
  4120 ;;		_sprintf
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123  07B0                     ___lldiv:	
  4124                           
  4125                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4126  07B0  01F8               	clrf	___lldiv@quotient
  4127  07B1  01F9               	clrf	___lldiv@quotient+1
  4128  07B2  01FA               	clrf	___lldiv@quotient+2
  4129  07B3  01FB               	clrf	___lldiv@quotient+3
  4130  07B4  0873               	movf	___lldiv@divisor+3,w
  4131  07B5  0472               	iorwf	___lldiv@divisor+2,w
  4132  07B6  0471               	iorwf	___lldiv@divisor+1,w
  4133  07B7  0470               	iorwf	___lldiv@divisor,w
  4134  07B8  1903               	skipnz
  4135  07B9  2FEF               	goto	l5005
  4136  07BA  01FC               	clrf	___lldiv@counter
  4137  07BB                     L9:	
  4138  07BB  0AFC               	incf	___lldiv@counter,f
  4139  07BC  1BF3               	btfsc	___lldiv@divisor+3,7
  4140  07BD  2FC4               	goto	l4993
  4141  07BE  1003               	clrc
  4142  07BF  0DF0               	rlf	___lldiv@divisor,f
  4143  07C0  0DF1               	rlf	___lldiv@divisor+1,f
  4144  07C1  0DF2               	rlf	___lldiv@divisor+2,f
  4145  07C2  0DF3               	rlf	___lldiv@divisor+3,f
  4146  07C3  2FBB               	goto	L9
  4147  07C4                     l4993:	
  4148  07C4  1003               	clrc
  4149  07C5  0DF8               	rlf	___lldiv@quotient,f
  4150  07C6  0DF9               	rlf	___lldiv@quotient+1,f
  4151  07C7  0DFA               	rlf	___lldiv@quotient+2,f
  4152  07C8  0DFB               	rlf	___lldiv@quotient+3,f
  4153  07C9  0873               	movf	___lldiv@divisor+3,w
  4154  07CA  0277               	subwf	___lldiv@dividend+3,w
  4155  07CB  1D03               	skipz
  4156  07CC  2FD7               	goto	u2115
  4157  07CD  0872               	movf	___lldiv@divisor+2,w
  4158  07CE  0276               	subwf	___lldiv@dividend+2,w
  4159  07CF  1D03               	skipz
  4160  07D0  2FD7               	goto	u2115
  4161  07D1  0871               	movf	___lldiv@divisor+1,w
  4162  07D2  0275               	subwf	___lldiv@dividend+1,w
  4163  07D3  1D03               	skipz
  4164  07D4  2FD7               	goto	u2115
  4165  07D5  0870               	movf	___lldiv@divisor,w
  4166  07D6  0274               	subwf	___lldiv@dividend,w
  4167  07D7                     u2115:	
  4168  07D7  1C03               	skipc
  4169  07D8  2FE9               	goto	L10
  4170  07D9  0870               	movf	___lldiv@divisor,w
  4171  07DA  02F4               	subwf	___lldiv@dividend,f
  4172  07DB  0871               	movf	___lldiv@divisor+1,w
  4173  07DC  1C03               	skipc
  4174  07DD  0F71               	incfsz	___lldiv@divisor+1,w
  4175  07DE  02F5               	subwf	___lldiv@dividend+1,f
  4176  07DF  0872               	movf	___lldiv@divisor+2,w
  4177  07E0  1C03               	skipc
  4178  07E1  0F72               	incfsz	___lldiv@divisor+2,w
  4179  07E2  02F6               	subwf	___lldiv@dividend+2,f
  4180  07E3  0873               	movf	___lldiv@divisor+3,w
  4181  07E4  1C03               	skipc
  4182  07E5  0F73               	incfsz	___lldiv@divisor+3,w
  4183  07E6  02F7               	subwf	___lldiv@dividend+3,f
  4184  07E7  1478               	bsf	___lldiv@quotient,0
  4185  07E8  1003               	clrc
  4186  07E9                     L10:	
  4187  07E9  0CF3               	rrf	___lldiv@divisor+3,f
  4188  07EA  0CF2               	rrf	___lldiv@divisor+2,f
  4189  07EB  0CF1               	rrf	___lldiv@divisor+1,f
  4190  07EC  0CF0               	rrf	___lldiv@divisor,f
  4191  07ED  0BFC               	decfsz	___lldiv@counter,f
  4192  07EE  2FC4               	goto	l4993
  4193  07EF                     l5005:	
  4194  07EF  087B               	movf	___lldiv@quotient+3,w
  4195  07F0  00F3               	movwf	?___lldiv+3
  4196  07F1  087A               	movf	___lldiv@quotient+2,w
  4197  07F2  00F2               	movwf	?___lldiv+2
  4198  07F3  0879               	movf	___lldiv@quotient+1,w
  4199  07F4  00F1               	movwf	?___lldiv+1
  4200  07F5  0878               	movf	___lldiv@quotient,w
  4201  07F6  00F0               	movwf	?___lldiv
  4202  07F7  0008               	return
  4203  07F8                     __end_of___lldiv:	
  4204  07F8                     __ptext566:	
  4205 ;; =============== function ___ftge ends ============
  4206                           
  4207                           
  4208 ;; *************** function ___ftneg *****************
  4209 ;; Defined at:
  4210 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftneg.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  f1              3    0[COMMON] float 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  3    0[COMMON] float 
  4217 ;; Registers used:
  4218 ;;		wreg
  4219 ;; Tracked objects:
  4220 ;;		On entry : 160/20
  4221 ;;		On exit  : 160/20
  4222 ;;		Unchanged: FFE9F/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4224 ;;      Params:         3       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0
  4227 ;;      Totals:         3       0       0       0       0
  4228 ;;Total ram usage:        3 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_sprintf
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236  07F8                     ___ftneg:	
  4237                           
  4238                           ; Regs used in ___ftneg: [wreg]
  4239  07F8  0872               	movf	___ftneg@f1+2,w
  4240  07F9  0471               	iorwf	___ftneg@f1+1,w
  4241  07FA  0470               	iorwf	___ftneg@f1,w
  4242  07FB  1903               	skipnz
  4243  07FC  0008               	return
  4244  07FD  3080               	movlw	128
  4245  07FE  06F2               	xorwf	___ftneg@f1+2,f
  4246  07FF  0008               	return
  4247  0800                     __end_of___ftneg:	
  4248                           
  4249                           	psect	text550
  4250  0A89                     __ptext550:	
  4251 ;; =============== function _sprintf ends ============
  4252                           
  4253                           
  4254 ;; *************** function _lcd_goto *****************
  4255 ;; Defined at:
  4256 ;;		line 89 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;  pos             1    wreg     unsigned char 
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  pos             1    5[COMMON] unsigned char 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;		None               void
  4263 ;; Registers used:
  4264 ;;		wreg, status,2, status,0, pclath, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 100/20
  4267 ;;		On exit  : 160/0
  4268 ;;		Unchanged: FFE9F/0
  4269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4270 ;;      Params:         0       0       0       0       0
  4271 ;;      Locals:         1       0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0
  4273 ;;      Totals:         1       0       0       0       0
  4274 ;;Total ram usage:        1 bytes
  4275 ;; Hardware stack levels used:    1
  4276 ;; Hardware stack levels required when called:    3
  4277 ;; This function calls:
  4278 ;;		_lcd_write
  4279 ;; This function is called by:
  4280 ;;		_main
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283  0A89                     _lcd_goto:	
  4284                           
  4285                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  4286                           ;lcd_goto@pos stored from wreg
  4287  0A89  00F5               	movwf	lcd_goto@pos
  4288                           
  4289                           ;C_PuertoSerial_usart.c: 90: RA7=0;
  4290  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4291  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4292  0A8C  1385               	bcf	5,7
  4293                           
  4294                           ;C_PuertoSerial_usart.c: 91: lcd_write(0x80+pos);
  4295  0A8D  0875               	movf	lcd_goto@pos,w
  4296  0A8E  3E80               	addlw	128
  4297  0A8F  2AAA               	ljmp	_lcd_write
  4298  0A90                     __end_of_lcd_goto:	
  4299  0A90                     __ptext552:	
  4300 ;; =============== function _lcd_puts ends ============
  4301                           
  4302                           
  4303 ;; *************** function _lcd_clear *****************
  4304 ;; Defined at:
  4305 ;;		line 69 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;		None               void
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0, pclath, cstack
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: FFF9F/0
  4318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4319 ;;      Params:         0       0       0       0       0
  4320 ;;      Locals:         0       0       0       0       0
  4321 ;;      Temps:          0       0       0       0       0
  4322 ;;      Totals:         0       0       0       0       0
  4323 ;;Total ram usage:        0 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:    3
  4326 ;; This function calls:
  4327 ;;		_lcd_write
  4328 ;;		_pause
  4329 ;; This function is called by:
  4330 ;;		_main
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333  0A90                     _lcd_clear:	
  4334                           
  4335                           ;C_PuertoSerial_usart.c: 70: RA7=0;
  4336                           
  4337                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  4338  0A90  1283               	bcf	3,5	;RP0=0, select bank0
  4339  0A91  1303               	bcf	3,6	;RP1=0, select bank0
  4340  0A92  3001               	movlw	1
  4341  0A93  1385               	bcf	5,7
  4342                           
  4343                           ;C_PuertoSerial_usart.c: 71: lcd_write(0x1);
  4344  0A94  22AA  120A  158A   	fcall	_lcd_write
  4345                           
  4346                           ;C_PuertoSerial_usart.c: 72: pause(2);
  4347  0A97  3002               	movlw	2
  4348  0A98  00F0               	movwf	?_pause
  4349  0A99  01F1               	clrf	?_pause+1
  4350  0A9A  2ABC               	ljmp	l5045
  4351  0A9B                     __end_of_lcd_clear:	
  4352  0A9B                     __ptext551:	
  4353 ;; =============== function _lcd_goto ends ============
  4354                           
  4355                           
  4356 ;; *************** function _lcd_puts *****************
  4357 ;; Defined at:
  4358 ;;		line 76 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  s               1    wreg     PTR const unsigned char 
  4361 ;;		 -> input(17), main@buffer(15), 
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;  s               1    5[COMMON] PTR const unsigned char 
  4364 ;;		 -> input(17), main@buffer(15), 
  4365 ;; Return value:  Size  Location     Type
  4366 ;;		None               void
  4367 ;; Registers used:
  4368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4369 ;; Tracked objects:
  4370 ;;		On entry : 160/0
  4371 ;;		On exit  : 160/0
  4372 ;;		Unchanged: FFE9F/0
  4373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4374 ;;      Params:         0       0       0       0       0
  4375 ;;      Locals:         1       0       0       0       0
  4376 ;;      Temps:          0       0       0       0       0
  4377 ;;      Totals:         1       0       0       0       0
  4378 ;;Total ram usage:        1 bytes
  4379 ;; Hardware stack levels used:    1
  4380 ;; Hardware stack levels required when called:    3
  4381 ;; This function calls:
  4382 ;;		_lcd_write
  4383 ;; This function is called by:
  4384 ;;		_main
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387  0A9B                     _lcd_puts:	
  4388                           
  4389                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4390                           ;lcd_puts@s stored from wreg
  4391  0A9B  00F5               	movwf	lcd_puts@s
  4392                           
  4393                           ;C_PuertoSerial_usart.c: 77: RA7=1;
  4394  0A9C  1785               	bsf	5,7
  4395  0A9D                     l5331:	
  4396                           ;C_PuertoSerial_usart.c: 78: while(*s)
  4397                           
  4398  0A9D  0875               	movf	lcd_puts@s,w
  4399  0A9E  0084               	movwf	4
  4400  0A9F  0880               	movf	0,f
  4401  0AA0  1903               	btfsc	3,2
  4402  0AA1  0008               	return
  4403                           
  4404                           ;C_PuertoSerial_usart.c: 79: lcd_write(*s++);
  4405  0AA2  0875               	movf	lcd_puts@s,w
  4406  0AA3  0084               	movwf	4
  4407  0AA4  0800               	movf	0,w
  4408  0AA5  22AA  120A  158A   	fcall	_lcd_write
  4409  0AA8  0AF5               	incf	lcd_puts@s,f
  4410  0AA9  2A9D               	goto	l5331
  4411  0AAA                     __end_of_lcd_puts:	
  4412  0AAA                     __ptext556:	
  4413 ;; =============== function _fround ends ============
  4414                           
  4415                           
  4416 ;; *************** function _lcd_write *****************
  4417 ;; Defined at:
  4418 ;;		line 60 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  4419 ;; Parameters:    Size  Location     Type
  4420 ;;  c               1    wreg     unsigned char 
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;  c               1    4[COMMON] unsigned char 
  4423 ;; Return value:  Size  Location     Type
  4424 ;;		None               void
  4425 ;; Registers used:
  4426 ;;		wreg, status,2, status,0, pclath, cstack
  4427 ;; Tracked objects:
  4428 ;;		On entry : 0/0
  4429 ;;		On exit  : 60/0
  4430 ;;		Unchanged: FFF9F/0
  4431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4432 ;;      Params:         0       0       0       0       0
  4433 ;;      Locals:         1       0       0       0       0
  4434 ;;      Temps:          0       0       0       0       0
  4435 ;;      Totals:         1       0       0       0       0
  4436 ;;Total ram usage:        1 bytes
  4437 ;; Hardware stack levels used:    1
  4438 ;; Hardware stack levels required when called:    2
  4439 ;; This function calls:
  4440 ;;		_pause
  4441 ;; This function is called by:
  4442 ;;		_lcd_clear
  4443 ;;		_lcd_puts
  4444 ;;		_lcd_goto
  4445 ;;		_main
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448  0AAA                     _lcd_write:	
  4449                           
  4450                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  4451                           ;lcd_write@c stored from wreg
  4452  0AAA  00F4               	movwf	lcd_write@c
  4453                           
  4454                           ;C_PuertoSerial_usart.c: 61: pause(1);
  4455  0AAB  01F0               	clrf	?_pause
  4456  0AAC  0AF0               	incf	?_pause,f
  4457  0AAD  01F1               	clrf	?_pause+1
  4458  0AAE  22BC               	fcall	_pause
  4459                           
  4460                           ;C_PuertoSerial_usart.c: 62: PORTD=((c >> 4) & 0x0F);
  4461  0AAF  0E74               	swapf	lcd_write@c,w
  4462  0AB0  390F               	andlw	15
  4463  0AB1  1283               	bcf	3,5	;RP0=0, select bank0
  4464  0AB2  1303               	bcf	3,6	;RP1=0, select bank0
  4465  0AB3  0088               	movwf	8	;volatile
  4466                           
  4467                           ;C_PuertoSerial_usart.c: 63: ((RA6=1),(RA6=0));
  4468  0AB4  1705               	bsf	5,6
  4469  0AB5  1305               	bcf	5,6
  4470                           
  4471                           ;C_PuertoSerial_usart.c: 64: PORTD=(c & 0x0F);
  4472  0AB6  0874               	movf	lcd_write@c,w
  4473  0AB7  390F               	andlw	15
  4474  0AB8  0088               	movwf	8	;volatile
  4475                           
  4476                           ;C_PuertoSerial_usart.c: 65: ((RA6=1),(RA6=0));
  4477  0AB9  1705               	bsf	5,6
  4478  0ABA  1305               	bcf	5,6
  4479  0ABB  0008               	return
  4480  0ABC                     __end_of_lcd_write:	
  4481  0ABC                     __ptext562:	
  4482 ;; =============== function _gets_Serial ends ============
  4483                           
  4484                           
  4485 ;; *************** function _pause *****************
  4486 ;; Defined at:
  4487 ;;		line 21 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  msvalue         2    0[COMMON] unsigned short 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  x               2    2[COMMON] unsigned short 
  4492 ;; Return value:  Size  Location     Type
  4493 ;;		None               void
  4494 ;; Registers used:
  4495 ;;		wreg, status,2, status,0, pclath, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: FFF9F/0
  4500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4501 ;;      Params:         2       0       0       0       0
  4502 ;;      Locals:         2       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0
  4504 ;;      Totals:         4       0       0       0       0
  4505 ;;Total ram usage:        4 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; Hardware stack levels required when called:    1
  4508 ;; This function calls:
  4509 ;;		_msecbase
  4510 ;; This function is called by:
  4511 ;;		_lcd_write
  4512 ;;		_lcd_clear
  4513 ;;		_main
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516  0ABC                     _pause:	
  4517  0ABC                     l5045:	
  4518                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  4519                           
  4520                           
  4521                           ;C_PuertoSerial_usart.c: 22: for (unsigned short x=0; x<=msvalue; x++) msecbase();
  4522  0ABC  01F2               	clrf	pause@x
  4523  0ABD  01F3               	clrf	pause@x+1
  4524  0ABE                     l5051:	
  4525  0ABE  0873               	movf	pause@x+1,w
  4526  0ABF  0271               	subwf	pause@msvalue+1,w
  4527  0AC0  1D03               	skipz
  4528  0AC1  2AC4               	goto	u2205
  4529  0AC2  0872               	movf	pause@x,w
  4530  0AC3  0270               	subwf	pause@msvalue,w
  4531  0AC4                     u2205:	
  4532  0AC4  1C03               	btfss	3,0
  4533  0AC5  0008               	return
  4534  0AC6  22CD  120A  158A   	fcall	_msecbase
  4535  0AC9  0AF2               	incf	pause@x,f
  4536  0ACA  1903               	skipnz
  4537  0ACB  0AF3               	incf	pause@x+1,f
  4538  0ACC  2ABE               	goto	l5051
  4539  0ACD                     __end_of_pause:	
  4540  0ACD                     __ptext579:	
  4541 ;; =============== function _putch ends ============
  4542                           
  4543                           
  4544 ;; *************** function _msecbase *****************
  4545 ;; Defined at:
  4546 ;;		line 12 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;		None
  4551 ;; Return value:  Size  Location     Type
  4552 ;;		None               void
  4553 ;; Registers used:
  4554 ;;		wreg
  4555 ;; Tracked objects:
  4556 ;;		On entry : 0/0
  4557 ;;		On exit  : 0/0
  4558 ;;		Unchanged: FFF9F/0
  4559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4560 ;;      Params:         0       0       0       0       0
  4561 ;;      Locals:         0       0       0       0       0
  4562 ;;      Temps:          0       0       0       0       0
  4563 ;;      Totals:         0       0       0       0       0
  4564 ;;Total ram usage:        0 bytes
  4565 ;; Hardware stack levels used:    1
  4566 ;; This function calls:
  4567 ;;		Nothing
  4568 ;; This function is called by:
  4569 ;;		_pause
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572  0ACD                     _msecbase:	
  4573                           
  4574                           ;C_PuertoSerial_usart.c: 15: OPTION_REG = 0b00000001;
  4575                           
  4576                           ; Regs used in _msecbase: [wreg]
  4577  0ACD  3001               	movlw	1
  4578  0ACE  1683               	bsf	3,5	;RP0=1, select bank1
  4579  0ACF  1303               	bcf	3,6	;RP1=0, select bank1
  4580  0AD0  0081               	movwf	1	;volatile
  4581                           
  4582                           ;C_PuertoSerial_usart.c: 16: TMR0 = 0x07;
  4583  0AD1  3007               	movlw	7
  4584  0AD2  1283               	bcf	3,5	;RP0=0, select bank0
  4585  0AD3  0081               	movwf	1	;volatile
  4586  0AD4                     l1055:	
  4587                           ;C_PuertoSerial_usart.c: 17: while(!T0IF);
  4588                           
  4589  0AD4  1D0B               	btfss	11,2
  4590  0AD5  2AD4               	goto	l1055
  4591                           
  4592                           ;C_PuertoSerial_usart.c: 18: T0IF = 0;
  4593  0AD6  110B               	bcf	11,2
  4594  0AD7  0008               	return
  4595  0AD8                     __end_of_msecbase:	
  4596                           
  4597                           	psect	text553
  4598  0C12                     __ptext553:	
  4599 ;; =============== function _lcd_clear ends ============
  4600                           
  4601                           
  4602 ;; *************** function ___ftsub *****************
  4603 ;; Defined at:
  4604 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftsub.c"
  4605 ;; Parameters:    Size  Location     Type
  4606 ;;  f2              3   40[BANK0 ] float 
  4607 ;;  f1              3   43[BANK0 ] float 
  4608 ;; Auto vars:     Size  Location     Type
  4609 ;;		None
  4610 ;; Return value:  Size  Location     Type
  4611 ;;                  3   40[BANK0 ] float 
  4612 ;; Registers used:
  4613 ;;		wreg, status,2, status,0, pclath, cstack
  4614 ;; Tracked objects:
  4615 ;;		On entry : 60/0
  4616 ;;		On exit  : 60/0
  4617 ;;		Unchanged: FFF9F/0
  4618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4619 ;;      Params:         0       6       0       0       0
  4620 ;;      Locals:         0       0       0       0       0
  4621 ;;      Temps:          0       0       0       0       0
  4622 ;;      Totals:         0       6       0       0       0
  4623 ;;Total ram usage:        6 bytes
  4624 ;; Hardware stack levels used:    1
  4625 ;; Hardware stack levels required when called:    2
  4626 ;; This function calls:
  4627 ;;		___ftadd
  4628 ;; This function is called by:
  4629 ;;		_sprintf
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632  0C12                     ___ftsub:	
  4633                           
  4634                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4635  0C12  3080               	movlw	128
  4636  0C13  06CA               	xorwf	___ftsub@f2+2,f
  4637  0C14  084B               	movf	___ftsub@f1,w
  4638  0C15  00BC               	movwf	?___ftadd
  4639  0C16  084C               	movf	___ftsub@f1+1,w
  4640  0C17  00BD               	movwf	?___ftadd+1
  4641  0C18  084D               	movf	___ftsub@f1+2,w
  4642  0C19  00BE               	movwf	?___ftadd+2
  4643  0C1A  0848               	movf	___ftsub@f2,w
  4644  0C1B  00BF               	movwf	?___ftadd+3
  4645  0C1C  0849               	movf	___ftsub@f2+1,w
  4646  0C1D  00C0               	movwf	?___ftadd+4
  4647  0C1E  084A               	movf	___ftsub@f2+2,w
  4648  0C1F  00C1               	movwf	?___ftadd+5
  4649  0C20  2428               	fcall	___ftadd
  4650  0C21  083C               	movf	?___ftadd,w
  4651  0C22  00C8               	movwf	?___ftsub
  4652  0C23  083D               	movf	?___ftadd+1,w
  4653  0C24  00C9               	movwf	?___ftsub+1
  4654  0C25  083E               	movf	?___ftadd+2,w
  4655  0C26  00CA               	movwf	?___ftsub+2
  4656  0C27  0008               	return
  4657  0C28                     __end_of___ftsub:	
  4658  0C28                     __ptext560:	
  4659 ;; =============== function ___ftmul ends ============
  4660                           
  4661                           
  4662 ;; *************** function ___ftadd *****************
  4663 ;; Defined at:
  4664 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  f1              3   28[BANK0 ] float 
  4667 ;;  f2              3   31[BANK0 ] float 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;  exp1            1   39[BANK0 ] unsigned char 
  4670 ;;  exp2            1   38[BANK0 ] unsigned char 
  4671 ;;  sign            1   37[BANK0 ] unsigned char 
  4672 ;; Return value:  Size  Location     Type
  4673 ;;                  3   28[BANK0 ] float 
  4674 ;; Registers used:
  4675 ;;		wreg, status,2, status,0, pclath, cstack
  4676 ;; Tracked objects:
  4677 ;;		On entry : 60/0
  4678 ;;		On exit  : 60/0
  4679 ;;		Unchanged: FFF9F/0
  4680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4681 ;;      Params:         0       6       0       0       0
  4682 ;;      Locals:         0       3       0       0       0
  4683 ;;      Temps:          0       3       0       0       0
  4684 ;;      Totals:         0      12       0       0       0
  4685 ;;Total ram usage:       12 bytes
  4686 ;; Hardware stack levels used:    1
  4687 ;; Hardware stack levels required when called:    1
  4688 ;; This function calls:
  4689 ;;		___ftpack
  4690 ;; This function is called by:
  4691 ;;		_sprintf
  4692 ;;		___ftsub
  4693 ;; This function uses a non-reentrant model
  4694 ;;
  4695  0C28                     ___ftadd:	
  4696                           
  4697                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4698  0C28  083C               	movf	___ftadd@f1,w
  4699  0C29  00C2               	movwf	??___ftadd
  4700  0C2A  083D               	movf	___ftadd@f1+1,w
  4701  0C2B  00C3               	movwf	??___ftadd+1
  4702  0C2C  083E               	movf	___ftadd@f1+2,w
  4703  0C2D  00C4               	movwf	??___ftadd+2
  4704  0C2E  1003               	clrc
  4705  0C2F  0D43               	rlf	??___ftadd+1,w
  4706  0C30  0D44               	rlf	??___ftadd+2,w
  4707  0C31  00C7               	movwf	___ftadd@exp1
  4708  0C32  083F               	movf	___ftadd@f2,w
  4709  0C33  00C2               	movwf	??___ftadd
  4710  0C34  0840               	movf	___ftadd@f2+1,w
  4711  0C35  00C3               	movwf	??___ftadd+1
  4712  0C36  0841               	movf	___ftadd@f2+2,w
  4713  0C37  00C4               	movwf	??___ftadd+2
  4714  0C38  1003               	clrc
  4715  0C39  0D43               	rlf	??___ftadd+1,w
  4716  0C3A  0D44               	rlf	??___ftadd+2,w
  4717  0C3B  00C6               	movwf	___ftadd@exp2
  4718  0C3C  0847               	movf	___ftadd@exp1,w
  4719  0C3D  1903               	btfsc	3,2
  4720  0C3E  2C4B               	goto	l5091
  4721  0C3F  0846               	movf	___ftadd@exp2,w
  4722  0C40  0247               	subwf	___ftadd@exp1,w
  4723  0C41  0846               	movf	___ftadd@exp2,w
  4724  0C42  1803               	skipnc
  4725  0C43  2C53               	goto	L6
  4726  0C44  00C2               	movwf	??___ftadd
  4727  0C45  0847               	movf	___ftadd@exp1,w
  4728  0C46  02C2               	subwf	??___ftadd,f
  4729  0C47  3019               	movlw	25
  4730  0C48  0242               	subwf	??___ftadd,w
  4731  0C49  1C03               	skipc
  4732  0C4A  2C52               	goto	l5095
  4733  0C4B                     l5091:	
  4734  0C4B  083F               	movf	___ftadd@f2,w
  4735  0C4C  00BC               	movwf	?___ftadd
  4736  0C4D  0840               	movf	___ftadd@f2+1,w
  4737  0C4E  00BD               	movwf	?___ftadd+1
  4738  0C4F  0841               	movf	___ftadd@f2+2,w
  4739  0C50  00BE               	movwf	?___ftadd+2
  4740  0C51  0008               	return
  4741  0C52                     l5095:	
  4742  0C52  0846               	movf	___ftadd@exp2,w
  4743  0C53                     L6:	
  4744  0C53  1903               	btfsc	3,2
  4745  0C54  0008               	return
  4746  0C55  0847               	movf	___ftadd@exp1,w
  4747  0C56  0246               	subwf	___ftadd@exp2,w
  4748  0C57  1803               	skipnc
  4749  0C58  2C61               	goto	l5101
  4750  0C59  0847               	movf	___ftadd@exp1,w
  4751  0C5A  00C2               	movwf	??___ftadd
  4752  0C5B  0846               	movf	___ftadd@exp2,w
  4753  0C5C  02C2               	subwf	??___ftadd,f
  4754  0C5D  3019               	movlw	25
  4755  0C5E  0242               	subwf	??___ftadd,w
  4756  0C5F  1803               	btfsc	3,0
  4757  0C60  0008               	return
  4758  0C61                     l5101:	
  4759  0C61  3006               	movlw	6
  4760  0C62  00C5               	movwf	___ftadd@sign
  4761  0C63  1BBE               	btfsc	___ftadd@f1+2,7
  4762  0C64  17C5               	bsf	___ftadd@sign,7
  4763  0C65  1BC1               	btfsc	___ftadd@f2+2,7
  4764  0C66  1745               	bsf	___ftadd@sign,6
  4765  0C67  17BD               	bsf	___ftadd@f1+1,7
  4766  0C68  01BE               	clrf	___ftadd@f1+2
  4767  0C69  17C0               	bsf	___ftadd@f2+1,7
  4768  0C6A  01C1               	clrf	___ftadd@f2+2
  4769  0C6B  0846               	movf	___ftadd@exp2,w
  4770  0C6C  0247               	subwf	___ftadd@exp1,w
  4771  0C6D  1803               	skipnc
  4772  0C6E  2C88               	goto	l5123
  4773  0C6F                     l5113:	
  4774  0C6F  1003               	clrc
  4775  0C70  0DBF               	rlf	___ftadd@f2,f
  4776  0C71  0DC0               	rlf	___ftadd@f2+1,f
  4777  0C72  0DC1               	rlf	___ftadd@f2+2,f
  4778  0C73  03C6               	decf	___ftadd@exp2,f
  4779  0C74  0846               	movf	___ftadd@exp2,w
  4780  0C75  0647               	xorwf	___ftadd@exp1,w
  4781  0C76  1903               	skipnz
  4782  0C77  2C83               	goto	l5121
  4783  0C78  03C5               	decf	___ftadd@sign,f
  4784  0C79  0845               	movf	___ftadd@sign,w
  4785  0C7A  3907               	andlw	7
  4786  0C7B  1903               	btfsc	3,2
  4787  0C7C  2C83               	goto	l5121
  4788  0C7D  2C6F               	goto	l5113
  4789  0C7E                     l5119:	
  4790  0C7E  1003               	clrc
  4791  0C7F  0CBE               	rrf	___ftadd@f1+2,f
  4792  0C80  0CBD               	rrf	___ftadd@f1+1,f
  4793  0C81  0CBC               	rrf	___ftadd@f1,f
  4794  0C82  0AC7               	incf	___ftadd@exp1,f
  4795  0C83                     l5121:	
  4796  0C83  0847               	movf	___ftadd@exp1,w
  4797  0C84  0646               	xorwf	___ftadd@exp2,w
  4798  0C85  1903               	btfsc	3,2
  4799  0C86  2CA4               	goto	l2256
  4800  0C87  2C7E               	goto	l5119
  4801  0C88                     l5123:	
  4802  0C88  0847               	movf	___ftadd@exp1,w
  4803  0C89  0246               	subwf	___ftadd@exp2,w
  4804  0C8A  1803               	skipnc
  4805  0C8B  2CA4               	goto	l2256
  4806  0C8C                     l5125:	
  4807  0C8C  1003               	clrc
  4808  0C8D  0DBC               	rlf	___ftadd@f1,f
  4809  0C8E  0DBD               	rlf	___ftadd@f1+1,f
  4810  0C8F  0DBE               	rlf	___ftadd@f1+2,f
  4811  0C90  03C7               	decf	___ftadd@exp1,f
  4812  0C91  0846               	movf	___ftadd@exp2,w
  4813  0C92  0647               	xorwf	___ftadd@exp1,w
  4814  0C93  1903               	skipnz
  4815  0C94  2CA0               	goto	l5133
  4816  0C95  03C5               	decf	___ftadd@sign,f
  4817  0C96  0845               	movf	___ftadd@sign,w
  4818  0C97  3907               	andlw	7
  4819  0C98  1903               	btfsc	3,2
  4820  0C99  2CA0               	goto	l5133
  4821  0C9A  2C8C               	goto	l5125
  4822  0C9B                     l5131:	
  4823  0C9B  1003               	clrc
  4824  0C9C  0CC1               	rrf	___ftadd@f2+2,f
  4825  0C9D  0CC0               	rrf	___ftadd@f2+1,f
  4826  0C9E  0CBF               	rrf	___ftadd@f2,f
  4827  0C9F  0AC6               	incf	___ftadd@exp2,f
  4828  0CA0                     l5133:	
  4829  0CA0  0847               	movf	___ftadd@exp1,w
  4830  0CA1  0646               	xorwf	___ftadd@exp2,w
  4831  0CA2  1D03               	skipz
  4832  0CA3  2C9B               	goto	l5131
  4833  0CA4                     l2256:	
  4834  0CA4  1FC5               	btfss	___ftadd@sign,7
  4835  0CA5  2CAF               	goto	l5139
  4836  0CA6  30FF               	movlw	255
  4837  0CA7  06BC               	xorwf	___ftadd@f1,f
  4838  0CA8  06BD               	xorwf	___ftadd@f1+1,f
  4839  0CA9  06BE               	xorwf	___ftadd@f1+2,f
  4840  0CAA  0ABC               	incf	___ftadd@f1,f
  4841  0CAB  1903               	skipnz
  4842  0CAC  0ABD               	incf	___ftadd@f1+1,f
  4843  0CAD  1903               	skipnz
  4844  0CAE  0ABE               	incf	___ftadd@f1+2,f
  4845  0CAF                     l5139:	
  4846  0CAF  1F45               	btfss	___ftadd@sign,6
  4847  0CB0  2CBA               	goto	l5145
  4848  0CB1  30FF               	movlw	255
  4849  0CB2  06BF               	xorwf	___ftadd@f2,f
  4850  0CB3  06C0               	xorwf	___ftadd@f2+1,f
  4851  0CB4  06C1               	xorwf	___ftadd@f2+2,f
  4852  0CB5  0ABF               	incf	___ftadd@f2,f
  4853  0CB6  1903               	skipnz
  4854  0CB7  0AC0               	incf	___ftadd@f2+1,f
  4855  0CB8  1903               	skipnz
  4856  0CB9  0AC1               	incf	___ftadd@f2+2,f
  4857  0CBA                     l5145:	
  4858  0CBA  01C5               	clrf	___ftadd@sign
  4859  0CBB  083C               	movf	___ftadd@f1,w
  4860  0CBC  07BF               	addwf	___ftadd@f2,f
  4861  0CBD  083D               	movf	___ftadd@f1+1,w
  4862  0CBE  1103               	clrz
  4863  0CBF  1803               	skipnc
  4864  0CC0  0A3D               	incf	___ftadd@f1+1,w
  4865  0CC1  1D03               	btfss	3,2
  4866  0CC2  07C0               	addwf	___ftadd@f2+1,f
  4867  0CC3  083E               	movf	___ftadd@f1+2,w
  4868  0CC4  1103               	clrz
  4869  0CC5  1803               	skipnc
  4870  0CC6  0A3E               	incf	___ftadd@f1+2,w
  4871  0CC7  1D03               	btfss	3,2
  4872  0CC8  07C1               	addwf	___ftadd@f2+2,f
  4873  0CC9  1FC1               	btfss	___ftadd@f2+2,7
  4874  0CCA  2CD6               	goto	l5157
  4875  0CCB  30FF               	movlw	255
  4876  0CCC  06BF               	xorwf	___ftadd@f2,f
  4877  0CCD  06C0               	xorwf	___ftadd@f2+1,f
  4878  0CCE  06C1               	xorwf	___ftadd@f2+2,f
  4879  0CCF  0ABF               	incf	___ftadd@f2,f
  4880  0CD0  1903               	skipnz
  4881  0CD1  0AC0               	incf	___ftadd@f2+1,f
  4882  0CD2  1903               	skipnz
  4883  0CD3  0AC1               	incf	___ftadd@f2+2,f
  4884  0CD4  01C5               	clrf	___ftadd@sign
  4885  0CD5  0AC5               	incf	___ftadd@sign,f
  4886  0CD6                     l5157:	
  4887  0CD6  083F               	movf	___ftadd@f2,w
  4888  0CD7  00F0               	movwf	?___ftpack
  4889  0CD8  0840               	movf	___ftadd@f2+1,w
  4890  0CD9  00F1               	movwf	?___ftpack+1
  4891  0CDA  0841               	movf	___ftadd@f2+2,w
  4892  0CDB  00F2               	movwf	?___ftpack+2
  4893  0CDC  0847               	movf	___ftadd@exp1,w
  4894  0CDD  00F3               	movwf	?___ftpack+3
  4895  0CDE  0845               	movf	___ftadd@sign,w
  4896  0CDF  00F4               	movwf	?___ftpack+4
  4897  0CE0  120A  118A  25C2   	fcall	___ftpack
  4898  0CE3  0870               	movf	?___ftpack,w
  4899  0CE4  00BC               	movwf	?___ftadd
  4900  0CE5  0871               	movf	?___ftpack+1,w
  4901  0CE6  00BD               	movwf	?___ftadd+1
  4902  0CE7  0872               	movf	?___ftpack+2,w
  4903  0CE8  00BE               	movwf	?___ftadd+2
  4904  0CE9  0008               	return
  4905  0CEA                     __end_of___ftadd:	
  4906                           
  4907                           	psect	text555
  4908  0CEA                     __ptext555:	
  4909 ;; =============== function _scale ends ============
  4910                           
  4911                           
  4912 ;; *************** function _fround *****************
  4913 ;; Defined at:
  4914 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  prec            1    wreg     unsigned char 
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;  prec            1   49[BANK0 ] unsigned char 
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  3   40[BANK0 ] unsigned char 
  4921 ;; Registers used:
  4922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4923 ;; Tracked objects:
  4924 ;;		On entry : 160/20
  4925 ;;		On exit  : 160/0
  4926 ;;		Unchanged: FFE9F/0
  4927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4928 ;;      Params:         0       3       0       0       0
  4929 ;;      Locals:         0       7       0       0       0
  4930 ;;      Temps:          0       0       0       0       0
  4931 ;;      Totals:         0      10       0       0       0
  4932 ;;Total ram usage:       10 bytes
  4933 ;; Hardware stack levels used:    1
  4934 ;; Hardware stack levels required when called:    2
  4935 ;; This function calls:
  4936 ;;		___lbmod
  4937 ;;		___bmul
  4938 ;;		___lbdiv
  4939 ;;		___ftmul
  4940 ;; This function is called by:
  4941 ;;		_sprintf
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944  0CEA                     _fround:	
  4945                           
  4946                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4947                           ;fround@prec stored from wreg
  4948  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  4949  0CEB  00D1               	movwf	fround@prec
  4950  0CEC  306E               	movlw	110
  4951  0CED  0251               	subwf	fround@prec,w
  4952  0CEE  1C03               	skipc
  4953  0CEF  2D75               	goto	l5263
  4954  0CF0  3003               	movlw	3
  4955  0CF1  00F9               	movwf	?___bmul
  4956  0CF2  300A               	movlw	10
  4957  0CF3  00F5               	movwf	?___lbdiv
  4958  0CF4  3064               	movlw	100
  4959  0CF5  00F0               	movwf	?___lbmod
  4960  0CF6  0851               	movf	fround@prec,w
  4961  0CF7  260A  120A  158A   	fcall	___lbmod
  4962  0CFA  25EF               	fcall	___lbdiv
  4963  0CFB  120A  118A  25B4   	fcall	___bmul
      +       120A  158A         
  4964  0D00  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4965  0D01  0084               	movwf	4
  4966  0D02  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4967  0D07  00AD               	movwf	?___ftmul
  4968  0D08  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4969  0D0D  00AE               	movwf	?___ftmul+1
  4970  0D0E  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4971  0D13  00AF               	movwf	?___ftmul+2
  4972  0D14  3003               	movlw	3
  4973  0D15  00F9               	movwf	?___bmul
  4974  0D16  3064               	movlw	100
  4975  0D17  00F5               	movwf	?___lbdiv
  4976  0D18  0851               	movf	fround@prec,w
  4977  0D19  25EF               	fcall	___lbdiv
  4978  0D1A  120A  118A  25B4   	fcall	___bmul
      +       120A  158A         
  4979  0D1F  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4980  0D20  0084               	movwf	4
  4981  0D21  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4982  0D26  00B0               	movwf	?___ftmul+3
  4983  0D27  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4984  0D2C  00B1               	movwf	?___ftmul+4
  4985  0D2D  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4986  0D32  00B2               	movwf	?___ftmul+5
  4987  0D33  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  4988  0D38  2635  120A  158A   	fcall	PL27	;call to abstracted procedure
  4989  0D3B  3003               	movlw	3
  4990  0D3C  00F9               	movwf	?___bmul
  4991  0D3D  300A               	movlw	10
  4992  0D3E  00F0               	movwf	?___lbmod
  4993  0D3F  0851               	movf	fround@prec,w
  4994  0D40  260A               	fcall	___lbmod
  4995  0D41  120A  118A  25B4   	fcall	___bmul
      +       120A  158A         
  4996  0D46  3E01               	addlw	low (__npowers_-__stringbase)
  4997  0D47  0084               	movwf	4
  4998  0D48  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4999  0D4D  00AD               	movwf	?___ftmul
  5000  0D4E  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5001  0D53  00AE               	movwf	?___ftmul+1
  5002  0D54  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5003  0D59  262D               	fcall	PL22	;call to abstracted procedure
  5004  0D5A  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  5005  0D5F  082D               	movf	?___ftmul,w
  5006  0D60  00CB               	movwf	_fround$2836
  5007  0D61  082E               	movf	?___ftmul+1,w
  5008  0D62  00CC               	movwf	_fround$2836+1
  5009  0D63  082F               	movf	?___ftmul+2,w
  5010  0D64  00CD               	movwf	_fround$2836+2
  5011  0D65  303F               	movlw	63
  5012  0D66  01AD               	clrf	?___ftmul
  5013  0D67  01AE               	clrf	?___ftmul+1
  5014  0D68  00AF               	movwf	?___ftmul+2
  5015  0D69  084B               	movf	_fround$2836,w
  5016  0D6A  00B0               	movwf	?___ftmul+3
  5017  0D6B  084C               	movf	_fround$2836+1,w
  5018  0D6C  00B1               	movwf	?___ftmul+4
  5019  0D6D  084D               	movf	_fround$2836+2,w
  5020  0D6E  00B2               	movwf	?___ftmul+5
  5021  0D6F  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  5022  0D74  2E26               	ljmp	PL15	;call to abstracted procedure
  5023  0D75                     l5263:	
  5024  0D75  300B               	movlw	11
  5025  0D76  0251               	subwf	fround@prec,w
  5026  0D77  1C03               	skipc
  5027  0D78  2DC9               	goto	l5271
  5028  0D79  3003               	movlw	3
  5029  0D7A  00F9               	movwf	?___bmul
  5030  0D7B  300A               	movlw	10
  5031  0D7C  00F0               	movwf	?___lbmod
  5032  0D7D  0851               	movf	fround@prec,w
  5033  0D7E  260A               	fcall	___lbmod
  5034  0D7F  120A  118A  25B4   	fcall	___bmul
      +       120A  158A         
  5035  0D84  3E01               	addlw	low (__npowers_-__stringbase)
  5036  0D85  0084               	movwf	4
  5037  0D86  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5038  0D8B  00AD               	movwf	?___ftmul
  5039  0D8C  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5040  0D91  00AE               	movwf	?___ftmul+1
  5041  0D92  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5042  0D97  00AF               	movwf	?___ftmul+2
  5043  0D98  3003               	movlw	3
  5044  0D99  00F9               	movwf	?___bmul
  5045  0D9A  300A               	movlw	10
  5046  0D9B  00F5               	movwf	?___lbdiv
  5047  0D9C  0851               	movf	fround@prec,w
  5048  0D9D  25EF               	fcall	___lbdiv
  5049  0D9E  120A  118A  25B4   	fcall	___bmul
      +       120A  158A         
  5050  0DA3  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  5051  0DA4  0084               	movwf	4
  5052  0DA5  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5053  0DAA  00B0               	movwf	?___ftmul+3
  5054  0DAB  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5055  0DB0  00B1               	movwf	?___ftmul+4
  5056  0DB1  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5057  0DB6  00B2               	movwf	?___ftmul+5
  5058  0DB7  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  5059  0DBC  2635  120A  158A   	fcall	PL27	;call to abstracted procedure
  5060  0DBF  303F               	movlw	63
  5061  0DC0  01AD               	clrf	?___ftmul
  5062  0DC1  01AE               	clrf	?___ftmul+1
  5063  0DC2  262D               	fcall	PL22	;call to abstracted procedure
  5064  0DC3  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  5065  0DC8  2E26               	ljmp	PL15	;call to abstracted procedure
  5066  0DC9                     l5271:	
  5067  0DC9  303F               	movlw	63
  5068  0DCA  01AD               	clrf	?___ftmul
  5069  0DCB  01AE               	clrf	?___ftmul+1
  5070  0DCC  00AF               	movwf	?___ftmul+2
  5071  0DCD  3003               	movlw	3
  5072  0DCE  00F9               	movwf	?___bmul
  5073  0DCF  0851               	movf	fround@prec,w
  5074  0DD0  120A  118A  25B4   	fcall	___bmul
      +       120A  158A         
  5075  0DD5  3E01               	addlw	low (__npowers_-__stringbase)
  5076  0DD6  0084               	movwf	4
  5077  0DD7  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5078  0DDC  00B0               	movwf	?___ftmul+3
  5079  0DDD  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5080  0DE2  00B1               	movwf	?___ftmul+4
  5081  0DE3  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5082  0DE8  00B2               	movwf	?___ftmul+5
  5083  0DE9  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  5084  0DEE  2E26               	ljmp	PL15	;call to abstracted procedure
  5085  0DEF                     __end_of_fround:	
  5086  0DEF                     __ptext572:	
  5087 ;; =============== function ___lbmod ends ============
  5088                           
  5089                           
  5090 ;; *************** function ___lbdiv *****************
  5091 ;; Defined at:
  5092 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbdiv.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  dividend        1    wreg     unsigned char 
  5095 ;;  divisor         1    5[COMMON] unsigned char 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  dividend        1    6[COMMON] unsigned char 
  5098 ;;  quotient        1    8[COMMON] unsigned char 
  5099 ;;  counter         1    7[COMMON] unsigned char 
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      unsigned char 
  5102 ;; Registers used:
  5103 ;;		wreg, status,2, status,0
  5104 ;; Tracked objects:
  5105 ;;		On entry : 160/0
  5106 ;;		On exit  : 160/0
  5107 ;;		Unchanged: FFE9F/0
  5108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5109 ;;      Params:         1       0       0       0       0
  5110 ;;      Locals:         3       0       0       0       0
  5111 ;;      Temps:          0       0       0       0       0
  5112 ;;      Totals:         4       0       0       0       0
  5113 ;;Total ram usage:        4 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_fround
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121  0DEF                     ___lbdiv:	
  5122                           
  5123                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5124                           ;___lbdiv@dividend stored from wreg
  5125  0DEF  00F6               	movwf	___lbdiv@dividend
  5126  0DF0  01F8               	clrf	___lbdiv@quotient
  5127  0DF1  0875               	movf	___lbdiv@divisor,w
  5128  0DF2  1903               	btfsc	3,2
  5129  0DF3  2E08               	goto	l4803
  5130  0DF4  01F7               	clrf	___lbdiv@counter
  5131  0DF5                     l4789:	
  5132  0DF5  0AF7               	incf	___lbdiv@counter,f
  5133  0DF6  1BF5               	btfsc	___lbdiv@divisor,7
  5134  0DF7  2DFB               	goto	l2225
  5135  0DF8  1003               	clrc
  5136  0DF9  0DF5               	rlf	___lbdiv@divisor,f
  5137  0DFA  2DF5               	goto	l4789
  5138  0DFB                     l2225:	
  5139  0DFB  1003               	clrc
  5140  0DFC  0DF8               	rlf	___lbdiv@quotient,f
  5141  0DFD  0875               	movf	___lbdiv@divisor,w
  5142  0DFE  0276               	subwf	___lbdiv@dividend,w
  5143  0DFF  1C03               	skipc
  5144  0E00  2E05               	goto	L17
  5145  0E01  0875               	movf	___lbdiv@divisor,w
  5146  0E02  02F6               	subwf	___lbdiv@dividend,f
  5147  0E03  1478               	bsf	___lbdiv@quotient,0
  5148  0E04  1003               	clrc
  5149  0E05                     L17:	
  5150  0E05  0CF5               	rrf	___lbdiv@divisor,f
  5151  0E06  0BF7               	decfsz	___lbdiv@counter,f
  5152  0E07  2DFB               	goto	l2225
  5153  0E08                     l4803:	
  5154  0E08  0878               	movf	___lbdiv@quotient,w
  5155  0E09  0008               	return
  5156  0E0A                     __end_of___lbdiv:	
  5157  0E0A                     __ptext571:	
  5158 ;; =============== function ___ftpack ends ============
  5159                           
  5160                           
  5161 ;; *************** function ___lbmod *****************
  5162 ;; Defined at:
  5163 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbmod.c"
  5164 ;; Parameters:    Size  Location     Type
  5165 ;;  dividend        1    wreg     unsigned char 
  5166 ;;  divisor         1    0[COMMON] unsigned char 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  dividend        1    2[COMMON] unsigned char 
  5169 ;;  rem             1    4[COMMON] unsigned char 
  5170 ;;  counter         1    3[COMMON] unsigned char 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      unsigned char 
  5173 ;; Registers used:
  5174 ;;		wreg, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 160/0
  5177 ;;		On exit  : 160/0
  5178 ;;		Unchanged: FFE9F/0
  5179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5180 ;;      Params:         1       0       0       0       0
  5181 ;;      Locals:         3       0       0       0       0
  5182 ;;      Temps:          1       0       0       0       0
  5183 ;;      Totals:         5       0       0       0       0
  5184 ;;Total ram usage:        5 bytes
  5185 ;; Hardware stack levels used:    1
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_fround
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192  0E0A                     ___lbmod:	
  5193                           
  5194                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5195                           ;___lbmod@dividend stored from wreg
  5196  0E0A  00F2               	movwf	___lbmod@dividend
  5197  0E0B  3008               	movlw	8
  5198  0E0C  00F3               	movwf	___lbmod@counter
  5199  0E0D  01F4               	clrf	___lbmod@rem
  5200  0E0E                     l4811:	
  5201  0E0E  0872               	movf	___lbmod@dividend,w
  5202  0E0F  00F1               	movwf	??___lbmod
  5203  0E10  3007               	movlw	7
  5204  0E11  1003               	clrc
  5205  0E12                     L16:	
  5206  0E12  0CF1               	rrf	??___lbmod,f
  5207  0E13  3EFF               	addlw	-1
  5208  0E14  1003               	clrc
  5209  0E15  1D03               	skipz
  5210  0E16  2E12               	goto	L16
  5211  0E17  0D74               	rlf	___lbmod@rem,w
  5212  0E18  0471               	iorwf	??___lbmod,w
  5213  0E19  00F4               	movwf	___lbmod@rem
  5214  0E1A  1003               	clrc
  5215  0E1B  0DF2               	rlf	___lbmod@dividend,f
  5216  0E1C  0870               	movf	___lbmod@divisor,w
  5217  0E1D  0274               	subwf	___lbmod@rem,w
  5218  0E1E  1C03               	skipc
  5219  0E1F  2E22               	goto	l4819
  5220  0E20  0870               	movf	___lbmod@divisor,w
  5221  0E21  02F4               	subwf	___lbmod@rem,f
  5222  0E22                     l4819:	
  5223  0E22  0BF3               	decfsz	___lbmod@counter,f
  5224  0E23  2E0E               	goto	l4811
  5225  0E24  0874               	movf	___lbmod@rem,w
  5226  0E25  0008               	return
  5227  0E26                     __end_of___lbmod:	
  5228  0E26                     PL15:	
  5229  0E26  082D               	movf	?___ftmul,w
  5230  0E27  00C8               	movwf	?_fround
  5231  0E28  082E               	movf	?___ftmul+1,w
  5232  0E29  00C9               	movwf	?_fround+1
  5233  0E2A  082F               	movf	?___ftmul+2,w
  5234  0E2B  00CA               	movwf	?_fround+2
  5235  0E2C  0008               	return
  5236  0E2D                     PL22:	
  5237  0E2D  00AF               	movwf	?___ftmul+2
  5238  0E2E  084E               	movf	_fround$2835,w
  5239  0E2F  00B0               	movwf	?___ftmul+3
  5240  0E30  084F               	movf	_fround$2835+1,w
  5241  0E31  00B1               	movwf	?___ftmul+4
  5242  0E32  0850               	movf	_fround$2835+2,w
  5243  0E33  00B2               	movwf	?___ftmul+5
  5244  0E34  0008               	return
  5245  0E35                     PL27:	
  5246  0E35  082D               	movf	?___ftmul,w
  5247  0E36  00CE               	movwf	_fround$2835
  5248  0E37  082E               	movf	?___ftmul+1,w
  5249  0E38  00CF               	movwf	_fround$2835+1
  5250  0E39  082F               	movf	?___ftmul+2,w
  5251  0E3A  00D0               	movwf	_fround$2835+2
  5252  0E3B  0008               	return
  5253                           
  5254                           	psect	text557
  5255  0A29                     __ptext557:	
  5256 ;; =============== function _lcd_write ends ============
  5257                           
  5258                           
  5259 ;; *************** function ___lltoft *****************
  5260 ;; Defined at:
  5261 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lltoft.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;  c               4    8[COMMON] unsigned long 
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;  exp             1   12[COMMON] unsigned char 
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  3    8[COMMON] float 
  5268 ;; Registers used:
  5269 ;;		wreg, status,2, status,0, pclath, cstack
  5270 ;; Tracked objects:
  5271 ;;		On entry : 60/20
  5272 ;;		On exit  : 60/20
  5273 ;;		Unchanged: FFF9F/0
  5274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5275 ;;      Params:         4       0       0       0       0
  5276 ;;      Locals:         1       0       0       0       0
  5277 ;;      Temps:          0       0       0       0       0
  5278 ;;      Totals:         5       0       0       0       0
  5279 ;;Total ram usage:        5 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:    1
  5282 ;; This function calls:
  5283 ;;		___ftpack
  5284 ;; This function is called by:
  5285 ;;		_sprintf
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288  0A29                     ___lltoft:	
  5289                           
  5290                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5291  0A29  308E               	movlw	142
  5292  0A2A  00FC               	movwf	___lltoft@exp
  5293  0A2B                     l5233:	
  5294  0A2B  30FF               	movlw	255
  5295  0A2C  057B               	andwf	___lltoft@c+3,w
  5296  0A2D  1903               	btfsc	3,2
  5297  0A2E  2A36               	goto	l5235
  5298  0A2F  1003               	clrc
  5299  0A30  0CFB               	rrf	___lltoft@c+3,f
  5300  0A31  0CFA               	rrf	___lltoft@c+2,f
  5301  0A32  0CF9               	rrf	___lltoft@c+1,f
  5302  0A33  0CF8               	rrf	___lltoft@c,f
  5303  0A34  0AFC               	incf	___lltoft@exp,f
  5304  0A35  2A2B               	goto	l5233
  5305  0A36                     l5235:	
  5306  0A36  0878               	movf	___lltoft@c,w
  5307  0A37  00F0               	movwf	?___ftpack
  5308  0A38  0879               	movf	___lltoft@c+1,w
  5309  0A39  00F1               	movwf	?___ftpack+1
  5310  0A3A  087A               	movf	___lltoft@c+2,w
  5311  0A3B  00F2               	movwf	?___ftpack+2
  5312  0A3C  087C               	movf	___lltoft@exp,w
  5313  0A3D  00F3               	movwf	?___ftpack+3
  5314  0A3E  01F4               	clrf	?___ftpack+4
  5315  0A3F  120A  118A  25C2   	fcall	___ftpack
  5316  0A42  0870               	movf	?___ftpack,w
  5317  0A43  00F8               	movwf	?___lltoft
  5318  0A44  0871               	movf	?___ftpack+1,w
  5319  0A45  00F9               	movwf	?___lltoft+1
  5320  0A46  0872               	movf	?___ftpack+2,w
  5321  0A47  00FA               	movwf	?___lltoft+2
  5322  0A48  0008               	return
  5323  0A49                     __end_of___lltoft:	
  5324                           
  5325                           	psect	text558
  5326  0A0C                     __ptext558:	
  5327 ;; =============== function ___lltoft ends ============
  5328                           
  5329                           
  5330 ;; *************** function ___awtoft *****************
  5331 ;; Defined at:
  5332 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awtoft.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  c               2    8[COMMON] int 
  5335 ;; Auto vars:     Size  Location     Type
  5336 ;;  sign            1   11[COMMON] unsigned char 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  3    8[COMMON] float 
  5339 ;; Registers used:
  5340 ;;		wreg, status,2, status,0, pclath, cstack
  5341 ;; Tracked objects:
  5342 ;;		On entry : 60/20
  5343 ;;		On exit  : 60/20
  5344 ;;		Unchanged: FFF9F/0
  5345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5346 ;;      Params:         3       0       0       0       0
  5347 ;;      Locals:         1       0       0       0       0
  5348 ;;      Temps:          0       0       0       0       0
  5349 ;;      Totals:         4       0       0       0       0
  5350 ;;Total ram usage:        4 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:    1
  5353 ;; This function calls:
  5354 ;;		___ftpack
  5355 ;; This function is called by:
  5356 ;;		_main
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359  0A0C                     ___awtoft:	
  5360                           
  5361                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5362  0A0C  01FB               	clrf	___awtoft@sign
  5363  0A0D  1FF9               	btfss	___awtoft@c+1,7
  5364  0A0E  2A16               	goto	l5225
  5365  0A0F  09F8               	comf	___awtoft@c,f
  5366  0A10  09F9               	comf	___awtoft@c+1,f
  5367  0A11  0AF8               	incf	___awtoft@c,f
  5368  0A12  1903               	skipnz
  5369  0A13  0AF9               	incf	___awtoft@c+1,f
  5370  0A14  01FB               	clrf	___awtoft@sign
  5371  0A15  0AFB               	incf	___awtoft@sign,f
  5372  0A16                     l5225:	
  5373  0A16  0878               	movf	___awtoft@c,w
  5374  0A17  00F0               	movwf	?___ftpack
  5375  0A18  0879               	movf	___awtoft@c+1,w
  5376  0A19  00F1               	movwf	?___ftpack+1
  5377  0A1A  308E               	movlw	142
  5378  0A1B  01F2               	clrf	?___ftpack+2
  5379  0A1C  00F3               	movwf	?___ftpack+3
  5380  0A1D  087B               	movf	___awtoft@sign,w
  5381  0A1E  00F4               	movwf	?___ftpack+4
  5382  0A1F  120A  118A  25C2   	fcall	___ftpack
  5383  0A22  0870               	movf	?___ftpack,w
  5384  0A23  00F8               	movwf	?___awtoft
  5385  0A24  0871               	movf	?___ftpack+1,w
  5386  0A25  00F9               	movwf	?___awtoft+1
  5387  0A26  0872               	movf	?___ftpack+2,w
  5388  0A27  00FA               	movwf	?___awtoft+2
  5389  0A28  0008               	return
  5390  0A29                     __end_of___awtoft:	
  5391                           
  5392                           	psect	text561
  5393  0A49                     __ptext561:	
  5394 ;; =============== function ___ftadd ends ============
  5395                           
  5396                           
  5397 ;; *************** function _gets_Serial *****************
  5398 ;; Defined at:
  5399 ;;		line 240 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  s               1    wreg     PTR unsigned char 
  5402 ;;		 -> input(17), main@buffer(15), 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  s               1    1[COMMON] PTR unsigned char 
  5405 ;;		 -> input(17), main@buffer(15), 
  5406 ;;  c               1    6[COMMON] unsigned char 
  5407 ;;  i               2    4[COMMON] int 
  5408 ;;  i               2    2[COMMON] int 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;		None               void
  5411 ;; Registers used:
  5412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: FFE00/0
  5417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5418 ;;      Params:         0       0       0       0       0
  5419 ;;      Locals:         6       0       0       0       0
  5420 ;;      Temps:          1       0       0       0       0
  5421 ;;      Totals:         7       0       0       0       0
  5422 ;;Total ram usage:        7 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    1
  5425 ;; This function calls:
  5426 ;;		_getch
  5427 ;; This function is called by:
  5428 ;;		_main
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431  0A49                     _gets_Serial:	
  5432                           
  5433                           ; Regs used in _gets_Serial: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5434                           ;gets_Serial@s stored from wreg
  5435  0A49  00F1               	movwf	gets_Serial@s
  5436                           
  5437                           ;C_PuertoSerial_usart.c: 242: for(int i=0; i<=16; i++) *(s+i)=0;
  5438  0A4A  01F2               	clrf	gets_Serial@i
  5439  0A4B  01F3               	clrf	gets_Serial@i+1
  5440  0A4C                     l5059:	
  5441  0A4C  0872               	movf	gets_Serial@i,w
  5442  0A4D  0771               	addwf	gets_Serial@s,w
  5443  0A4E  00F0               	movwf	??_gets_Serial
  5444  0A4F  0084               	movwf	4
  5445  0A50  1383               	bcf	3,7	;select IRP bank0
  5446  0A51  0180               	clrf	0
  5447  0A52  0AF2               	incf	gets_Serial@i,f
  5448  0A53  1903               	skipnz
  5449  0A54  0AF3               	incf	gets_Serial@i+1,f
  5450  0A55  0873               	movf	gets_Serial@i+1,w
  5451  0A56  3A80               	xorlw	128
  5452  0A57  00FF               	movwf	127
  5453  0A58  3080               	movlw	128
  5454  0A59  027F               	subwf	127,w
  5455  0A5A  1D03               	skipz
  5456  0A5B  2A5E               	goto	u2215
  5457  0A5C  3011               	movlw	17
  5458  0A5D  0272               	subwf	gets_Serial@i,w
  5459  0A5E                     u2215:	
  5460  0A5E  1C03               	skipc
  5461  0A5F  2A4C               	goto	l5059
  5462                           
  5463                           ;C_PuertoSerial_usart.c: 243: for(int i=0; i<16; i++){
  5464  0A60  01F4               	clrf	gets_Serial@i_1836
  5465  0A61  01F5               	clrf	gets_Serial@i_1836+1
  5466  0A62                     l5071:	
  5467                           
  5468                           ;C_PuertoSerial_usart.c: 244: char c=getch();
  5469  0A62  2283  120A  158A   	fcall	_getch
  5470  0A65  00F6               	movwf	gets_Serial@c
  5471                           
  5472                           ;C_PuertoSerial_usart.c: 246: if(c==10 | c==13) break;
  5473  0A66  3A0A               	xorlw	10
  5474  0A67  1903               	skipnz
  5475  0A68  0008               	return
  5476  0A69  0876               	movf	gets_Serial@c,w
  5477  0A6A  3A0D               	xorlw	13
  5478  0A6B  1903               	btfsc	3,2
  5479  0A6C  0008               	return
  5480                           
  5481                           ;C_PuertoSerial_usart.c: 247: *(s+i)=c;
  5482  0A6D  0874               	movf	gets_Serial@i_1836,w
  5483  0A6E  0771               	addwf	gets_Serial@s,w
  5484  0A6F  00F0               	movwf	??_gets_Serial
  5485  0A70  0084               	movwf	4
  5486  0A71  0876               	movf	gets_Serial@c,w
  5487  0A72  1383               	bcf	3,7	;select IRP bank0
  5488  0A73  0080               	movwf	0
  5489  0A74  0AF4               	incf	gets_Serial@i_1836,f
  5490  0A75  1903               	skipnz
  5491  0A76  0AF5               	incf	gets_Serial@i_1836+1,f
  5492  0A77  0875               	movf	gets_Serial@i_1836+1,w
  5493  0A78  3A80               	xorlw	128
  5494  0A79  00FF               	movwf	127
  5495  0A7A  3080               	movlw	128
  5496  0A7B  027F               	subwf	127,w
  5497  0A7C  1D03               	skipz
  5498  0A7D  2A80               	goto	u2245
  5499  0A7E  3010               	movlw	16
  5500  0A7F  0274               	subwf	gets_Serial@i_1836,w
  5501  0A80                     u2245:	
  5502  0A80  1803               	btfsc	3,0
  5503  0A81  0008               	return
  5504  0A82  2A62               	goto	l5071
  5505  0A83                     __end_of_gets_Serial:	
  5506  0A83                     __ptext577:	
  5507 ;; =============== function __tdiv_to_l_ ends ============
  5508                           
  5509                           
  5510 ;; *************** function _getch *****************
  5511 ;; Defined at:
  5512 ;;		line 235 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;		None
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      unsigned char 
  5519 ;; Registers used:
  5520 ;;		wreg
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 60/0
  5524 ;;		Unchanged: FFF9F/0
  5525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5526 ;;      Params:         0       0       0       0       0
  5527 ;;      Locals:         0       0       0       0       0
  5528 ;;      Temps:          0       0       0       0       0
  5529 ;;      Totals:         0       0       0       0       0
  5530 ;;Total ram usage:        0 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_gets_Serial
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538  0A83                     _getch:	
  5539  0A83                     l1108:	
  5540                           ;C_PuertoSerial_usart.c: 236: while(!RCIF) continue;
  5541                           
  5542                           ; Regs used in _getch: [wreg]
  5543                           
  5544  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  5545  0A84  1303               	bcf	3,6	;RP1=0, select bank0
  5546  0A85  1E8C               	btfss	12,5
  5547  0A86  2A83               	goto	l1108
  5548                           
  5549                           ;C_PuertoSerial_usart.c: 237: return RCREG;
  5550  0A87  081A               	movf	26,w	;volatile
  5551  0A88  0008               	return
  5552  0A89                     __end_of_getch:	
  5553                           
  5554                           	psect	text575
  5555  0B50                     __ptext575:	
  5556 ;; =============== function ___bmul ends ============
  5557                           
  5558                           
  5559 ;; *************** function __div_to_l_ *****************
  5560 ;; Defined at:
  5561 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fldivl.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  f1              3    0[COMMON] unsigned char 
  5564 ;;  f2              3    3[COMMON] unsigned char 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  quot            4    0[BANK0 ] unsigned long 
  5567 ;;  exp1            1    5[BANK0 ] unsigned char 
  5568 ;;  cntr            1    4[BANK0 ] unsigned char 
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  4    0[COMMON] unsigned long 
  5571 ;; Registers used:
  5572 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 60/0
  5576 ;;		Unchanged: FFF9F/0
  5577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5578 ;;      Params:         6       0       0       0       0
  5579 ;;      Locals:         0       6       0       0       0
  5580 ;;      Temps:          8       0       0       0       0
  5581 ;;      Totals:        14       6       0       0       0
  5582 ;;Total ram usage:       20 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; This function calls:
  5585 ;;		Nothing
  5586 ;; This function is called by:
  5587 ;;		_sprintf
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590  0B50                     __div_to_l_:	
  5591                           
  5592                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5593  0B50  3070               	movlw	low __div_to_l_@f1
  5594  0B51  2405  120A  158A   	fcall	PL2	;call to abstracted procedure
  5595  0B54  1003               	clrc
  5596  0B55  0D78               	rlf	??__div_to_l_+2,w
  5597  0B56  0D79               	rlf	??__div_to_l_+3,w
  5598  0B57  1283               	bcf	3,5	;RP0=0, select bank0
  5599  0B58  1303               	bcf	3,6	;RP1=0, select bank0
  5600  0B59  00A5               	movwf	__div_to_l_@exp1
  5601  0B5A  08A5               	movf	__div_to_l_@exp1,f
  5602  0B5B  1D03               	skipz
  5603  0B5C  2B62               	goto	l4709
  5604  0B5D                     l4707:	
  5605  0B5D  01F0               	clrf	?__div_to_l_
  5606  0B5E  01F1               	clrf	?__div_to_l_+1
  5607  0B5F  01F2               	clrf	?__div_to_l_+2
  5608  0B60  01F3               	clrf	?__div_to_l_+3
  5609  0B61  0008               	return
  5610  0B62                     l4709:	
  5611  0B62  3073               	movlw	low __div_to_l_@f2
  5612  0B63  2405  120A  158A   	fcall	PL2	;call to abstracted procedure
  5613  0B66  1003               	clrc
  5614  0B67  0D78               	rlf	??__div_to_l_+2,w
  5615  0B68  0D79               	rlf	??__div_to_l_+3,w
  5616  0B69  00A4               	movwf	__div_to_l_@cntr
  5617  0B6A  08A4               	movf	__div_to_l_@cntr,f
  5618  0B6B  1903               	btfsc	3,2
  5619  0B6C  2B5D               	goto	l4707
  5620  0B6D  3070               	movlw	low __div_to_l_@f1
  5621  0B6E  0084               	movwf	4
  5622  0B6F  3080               	movlw	128
  5623  0B70  0A84               	incf	4,f
  5624  0B71  0A84               	incf	4,f
  5625  0B72  0480               	iorwf	0,f
  5626  0B73  3070               	movlw	low __div_to_l_@f1
  5627  0B74  0A84               	incf	4,f
  5628  0B75  0084               	movwf	4
  5629  0B76  3073               	movlw	low __div_to_l_@f2
  5630  0B77  0A84               	incf	4,f
  5631  0B78  0A84               	incf	4,f
  5632  0B79  0A84               	incf	4,f
  5633  0B7A  0180               	clrf	0
  5634  0B7B  0084               	movwf	4
  5635  0B7C  3080               	movlw	128
  5636  0B7D  0A84               	incf	4,f
  5637  0B7E  0A84               	incf	4,f
  5638  0B7F  0480               	iorwf	0,f
  5639  0B80  3073               	movlw	low __div_to_l_@f2
  5640  0B81  0A84               	incf	4,f
  5641  0B82  0084               	movwf	4
  5642  0B83  307F               	movlw	127
  5643  0B84  0A84               	incf	4,f
  5644  0B85  0A84               	incf	4,f
  5645  0B86  0A84               	incf	4,f
  5646  0B87  0180               	clrf	0
  5647  0B88  01A0               	clrf	__div_to_l_@quot
  5648  0B89  01A1               	clrf	__div_to_l_@quot+1
  5649  0B8A  01A2               	clrf	__div_to_l_@quot+2
  5650  0B8B  01A3               	clrf	__div_to_l_@quot+3
  5651  0B8C  02A5               	subwf	__div_to_l_@exp1,f
  5652  0B8D  30A0               	movlw	160
  5653  0B8E  0724               	addwf	__div_to_l_@cntr,w
  5654  0B8F  00F6               	movwf	??__div_to_l_
  5655  0B90  02A5               	subwf	__div_to_l_@exp1,f
  5656  0B91  3020               	movlw	32
  5657  0B92  00A4               	movwf	__div_to_l_@cntr
  5658  0B93                     l4723:	
  5659  0B93  3073               	movlw	low __div_to_l_@f2
  5660  0B94  1003               	clrc
  5661  0B95  0DA0               	rlf	__div_to_l_@quot,f
  5662  0B96  0DA1               	rlf	__div_to_l_@quot+1,f
  5663  0B97  0DA2               	rlf	__div_to_l_@quot+2,f
  5664  0B98  0DA3               	rlf	__div_to_l_@quot+3,f
  5665  0B99  2405  120A  158A   	fcall	PL2	;call to abstracted procedure
  5666  0B9C  3070               	movlw	low __div_to_l_@f1
  5667  0B9D  0084               	movwf	4
  5668  0B9E  0800               	movf	0,w
  5669  0B9F  00FA               	movwf	??__div_to_l_+4
  5670  0BA0  0A84               	incf	4,f
  5671  0BA1  0800               	movf	0,w
  5672  0BA2  00FB               	movwf	??__div_to_l_+5
  5673  0BA3  0A84               	incf	4,f
  5674  0BA4  0800               	movf	0,w
  5675  0BA5  00FC               	movwf	??__div_to_l_+6
  5676  0BA6  0A84               	incf	4,f
  5677  0BA7  0800               	movf	0,w
  5678  0BA8  00FD               	movwf	??__div_to_l_+7
  5679  0BA9  0879               	movf	??__div_to_l_+3,w
  5680  0BAA  027D               	subwf	??__div_to_l_+7,w
  5681  0BAB  1D03               	skipz
  5682  0BAC  2BB7               	goto	u1615
  5683  0BAD  0878               	movf	??__div_to_l_+2,w
  5684  0BAE  027C               	subwf	??__div_to_l_+6,w
  5685  0BAF  1D03               	skipz
  5686  0BB0  2BB7               	goto	u1615
  5687  0BB1  0877               	movf	??__div_to_l_+1,w
  5688  0BB2  027B               	subwf	??__div_to_l_+5,w
  5689  0BB3  1D03               	skipz
  5690  0BB4  2BB7               	goto	u1615
  5691  0BB5  0876               	movf	??__div_to_l_,w
  5692  0BB6  027A               	subwf	??__div_to_l_+4,w
  5693  0BB7                     u1615:	
  5694  0BB7  1C03               	skipc
  5695  0BB8  2BD3               	goto	l2485
  5696  0BB9  3073               	movlw	low __div_to_l_@f2
  5697  0BBA  2405  120A  158A   	fcall	PL2	;call to abstracted procedure
  5698  0BBD  3070               	movlw	low __div_to_l_@f1
  5699  0BBE  0084               	movwf	4
  5700  0BBF  0876               	movf	??__div_to_l_,w
  5701  0BC0  0280               	subwf	0,f
  5702  0BC1  0A84               	incf	4,f
  5703  0BC2  0877               	movf	??__div_to_l_+1,w
  5704  0BC3  1C03               	skipc
  5705  0BC4  0F77               	incfsz	??__div_to_l_+1,w
  5706  0BC5  0280               	subwf	0,f
  5707  0BC6  0A84               	incf	4,f
  5708  0BC7  0878               	movf	??__div_to_l_+2,w
  5709  0BC8  1C03               	skipc
  5710  0BC9  0F78               	incfsz	??__div_to_l_+2,w
  5711  0BCA  0280               	subwf	0,f
  5712  0BCB  0A84               	incf	4,f
  5713  0BCC  0879               	movf	??__div_to_l_+3,w
  5714  0BCD  1C03               	skipc
  5715  0BCE  0A79               	incf	??__div_to_l_+3,w
  5716  0BCF  0280               	subwf	0,f
  5717  0BD0  3003               	movlw	3
  5718  0BD1  0284               	subwf	4,f
  5719  0BD2  1420               	bsf	__div_to_l_@quot,0
  5720  0BD3                     l2485:	
  5721  0BD3  3070               	movlw	low __div_to_l_@f1
  5722  0BD4  0084               	movwf	4
  5723  0BD5  1003               	clrc
  5724  0BD6  0D80               	rlf	0,f
  5725  0BD7  0A84               	incf	4,f
  5726  0BD8  0D80               	rlf	0,f
  5727  0BD9  0A84               	incf	4,f
  5728  0BDA  0D80               	rlf	0,f
  5729  0BDB  0A84               	incf	4,f
  5730  0BDC  0D80               	rlf	0,f
  5731  0BDD  0BA4               	decfsz	__div_to_l_@cntr,f
  5732  0BDE  2B93               	goto	l4723
  5733  0BDF  1FA5               	btfss	__div_to_l_@exp1,7
  5734  0BE0  2BEE               	goto	l4741
  5735  0BE1  0825               	movf	__div_to_l_@exp1,w
  5736  0BE2  3A80               	xorlw	128
  5737  0BE3  3E9F               	addlw	159
  5738  0BE4  1C03               	btfss	3,0
  5739  0BE5  2B5D               	goto	l4707
  5740  0BE6                     l4737:	
  5741  0BE6  1003               	clrc
  5742  0BE7  0CA3               	rrf	__div_to_l_@quot+3,f
  5743  0BE8  0CA2               	rrf	__div_to_l_@quot+2,f
  5744  0BE9  0CA1               	rrf	__div_to_l_@quot+1,f
  5745  0BEA  0CA0               	rrf	__div_to_l_@quot,f
  5746  0BEB  0FA5               	incfsz	__div_to_l_@exp1,f
  5747  0BEC  2BE6               	goto	l4737
  5748  0BED  2BFC               	goto	l4747
  5749  0BEE                     l4741:	
  5750  0BEE  3020               	movlw	32
  5751  0BEF  0225               	subwf	__div_to_l_@exp1,w
  5752  0BF0  1803               	btfsc	3,0
  5753  0BF1  2B5D               	goto	l4707
  5754  0BF2                     l2493:	
  5755  0BF2  08A5               	movf	__div_to_l_@exp1,f
  5756  0BF3  1903               	btfsc	3,2
  5757  0BF4  2BFC               	goto	l4747
  5758  0BF5  1003               	clrc
  5759  0BF6  0DA0               	rlf	__div_to_l_@quot,f
  5760  0BF7  0DA1               	rlf	__div_to_l_@quot+1,f
  5761  0BF8  0DA2               	rlf	__div_to_l_@quot+2,f
  5762  0BF9  0DA3               	rlf	__div_to_l_@quot+3,f
  5763  0BFA  03A5               	decf	__div_to_l_@exp1,f
  5764  0BFB  2BF2               	goto	l2493
  5765  0BFC                     l4747:	
  5766  0BFC  0823               	movf	__div_to_l_@quot+3,w
  5767  0BFD  00F3               	movwf	?__div_to_l_+3
  5768  0BFE  0822               	movf	__div_to_l_@quot+2,w
  5769  0BFF  00F2               	movwf	?__div_to_l_+2
  5770  0C00  0821               	movf	__div_to_l_@quot+1,w
  5771  0C01  00F1               	movwf	?__div_to_l_+1
  5772  0C02  0820               	movf	__div_to_l_@quot,w
  5773  0C03  00F0               	movwf	?__div_to_l_
  5774  0C04  0008               	return
  5775  0C05                     __end_of__div_to_l_:	
  5776  0C05                     PL2:	
  5777  0C05  0084               	movwf	4
  5778  0C06  0800               	movf	0,w
  5779  0C07  00F6               	movwf	??__div_to_l_
  5780  0C08  0A84               	incf	4,f
  5781  0C09  0800               	movf	0,w
  5782  0C0A  00F7               	movwf	??__div_to_l_+1
  5783  0C0B  0A84               	incf	4,f
  5784  0C0C  0800               	movf	0,w
  5785  0C0D  00F8               	movwf	??__div_to_l_+2
  5786  0C0E  0A84               	incf	4,f
  5787  0C0F  0800               	movf	0,w
  5788  0C10  00F9               	movwf	??__div_to_l_+3
  5789  0C11  0008               	return
  5790                           
  5791                           	psect	text576
  5792  0AD8                     __ptext576:	
  5793 ;; =============== function __div_to_l_ ends ============
  5794                           
  5795                           
  5796 ;; *************** function __tdiv_to_l_ *****************
  5797 ;; Defined at:
  5798 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftdivl.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  f1              3    0[COMMON] float 
  5801 ;;  f2              3    3[COMMON] float 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  quot            4    0[BANK0 ] unsigned long 
  5804 ;;  exp1            1    5[BANK0 ] unsigned char 
  5805 ;;  cntr            1    4[BANK0 ] unsigned char 
  5806 ;; Return value:  Size  Location     Type
  5807 ;;                  4    0[COMMON] unsigned long 
  5808 ;; Registers used:
  5809 ;;		wreg, status,2, status,0
  5810 ;; Tracked objects:
  5811 ;;		On entry : 60/20
  5812 ;;		On exit  : 60/0
  5813 ;;		Unchanged: FFF9F/0
  5814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5815 ;;      Params:         6       0       0       0       0
  5816 ;;      Locals:         0       6       0       0       0
  5817 ;;      Temps:          3       0       0       0       0
  5818 ;;      Totals:         9       6       0       0       0
  5819 ;;Total ram usage:       15 bytes
  5820 ;; Hardware stack levels used:    1
  5821 ;; This function calls:
  5822 ;;		Nothing
  5823 ;; This function is called by:
  5824 ;;		_sprintf
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827  0AD8                     __tdiv_to_l_:	
  5828                           
  5829                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5830  0AD8  0870               	movf	__tdiv_to_l_@f1,w
  5831  0AD9  00F6               	movwf	??__tdiv_to_l_
  5832  0ADA  0871               	movf	__tdiv_to_l_@f1+1,w
  5833  0ADB  00F7               	movwf	??__tdiv_to_l_+1
  5834  0ADC  0872               	movf	__tdiv_to_l_@f1+2,w
  5835  0ADD  00F8               	movwf	??__tdiv_to_l_+2
  5836  0ADE  1003               	clrc
  5837  0ADF  0D77               	rlf	??__tdiv_to_l_+1,w
  5838  0AE0  0D78               	rlf	??__tdiv_to_l_+2,w
  5839  0AE1  1283               	bcf	3,5	;RP0=0, select bank0
  5840  0AE2  00A5               	movwf	__tdiv_to_l_@exp1
  5841  0AE3  08A5               	movf	__tdiv_to_l_@exp1,f
  5842  0AE4  1D03               	skipz
  5843  0AE5  2AEB               	goto	l4661
  5844  0AE6                     l4659:	
  5845  0AE6  01F0               	clrf	?__tdiv_to_l_
  5846  0AE7  01F1               	clrf	?__tdiv_to_l_+1
  5847  0AE8  01F2               	clrf	?__tdiv_to_l_+2
  5848  0AE9  01F3               	clrf	?__tdiv_to_l_+3
  5849  0AEA  0008               	return
  5850  0AEB                     l4661:	
  5851  0AEB  0873               	movf	__tdiv_to_l_@f2,w
  5852  0AEC  00F6               	movwf	??__tdiv_to_l_
  5853  0AED  0874               	movf	__tdiv_to_l_@f2+1,w
  5854  0AEE  00F7               	movwf	??__tdiv_to_l_+1
  5855  0AEF  0875               	movf	__tdiv_to_l_@f2+2,w
  5856  0AF0  00F8               	movwf	??__tdiv_to_l_+2
  5857  0AF1  1003               	clrc
  5858  0AF2  0D77               	rlf	??__tdiv_to_l_+1,w
  5859  0AF3  0D78               	rlf	??__tdiv_to_l_+2,w
  5860  0AF4  00A4               	movwf	__tdiv_to_l_@cntr
  5861  0AF5  08A4               	movf	__tdiv_to_l_@cntr,f
  5862  0AF6  1903               	btfsc	3,2
  5863  0AF7  2AE6               	goto	l4659
  5864  0AF8  307F               	movlw	127
  5865  0AF9  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5866  0AFA  01F2               	clrf	__tdiv_to_l_@f1+2
  5867  0AFB  17F4               	bsf	__tdiv_to_l_@f2+1,7
  5868  0AFC  01F5               	clrf	__tdiv_to_l_@f2+2
  5869  0AFD  01A0               	clrf	__tdiv_to_l_@quot
  5870  0AFE  01A1               	clrf	__tdiv_to_l_@quot+1
  5871  0AFF  01A2               	clrf	__tdiv_to_l_@quot+2
  5872  0B00  01A3               	clrf	__tdiv_to_l_@quot+3
  5873  0B01  02A5               	subwf	__tdiv_to_l_@exp1,f
  5874  0B02  3098               	movlw	152
  5875  0B03  0724               	addwf	__tdiv_to_l_@cntr,w
  5876  0B04  00F6               	movwf	??__tdiv_to_l_
  5877  0B05  02A5               	subwf	__tdiv_to_l_@exp1,f
  5878  0B06  3018               	movlw	24
  5879  0B07  00A4               	movwf	__tdiv_to_l_@cntr
  5880  0B08                     l4675:	
  5881  0B08  1003               	clrc
  5882  0B09  0DA0               	rlf	__tdiv_to_l_@quot,f
  5883  0B0A  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5884  0B0B  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5885  0B0C  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5886  0B0D  0875               	movf	__tdiv_to_l_@f2+2,w
  5887  0B0E  0272               	subwf	__tdiv_to_l_@f1+2,w
  5888  0B0F  1D03               	skipz
  5889  0B10  2B17               	goto	u1525
  5890  0B11  0874               	movf	__tdiv_to_l_@f2+1,w
  5891  0B12  0271               	subwf	__tdiv_to_l_@f1+1,w
  5892  0B13  1D03               	skipz
  5893  0B14  2B17               	goto	u1525
  5894  0B15  0873               	movf	__tdiv_to_l_@f2,w
  5895  0B16  0270               	subwf	__tdiv_to_l_@f1,w
  5896  0B17                     u1525:	
  5897  0B17  1C03               	skipc
  5898  0B18  2B25               	goto	L18
  5899  0B19  0873               	movf	__tdiv_to_l_@f2,w
  5900  0B1A  02F0               	subwf	__tdiv_to_l_@f1,f
  5901  0B1B  0874               	movf	__tdiv_to_l_@f2+1,w
  5902  0B1C  1C03               	skipc
  5903  0B1D  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  5904  0B1E  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5905  0B1F  0875               	movf	__tdiv_to_l_@f2+2,w
  5906  0B20  1C03               	skipc
  5907  0B21  0A75               	incf	__tdiv_to_l_@f2+2,w
  5908  0B22  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5909  0B23  1420               	bsf	__tdiv_to_l_@quot,0
  5910  0B24  1003               	clrc
  5911  0B25                     L18:	
  5912  0B25  0DF0               	rlf	__tdiv_to_l_@f1,f
  5913  0B26  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5914  0B27  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5915  0B28  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  5916  0B29  2B08               	goto	l4675
  5917  0B2A  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5918  0B2B  2B39               	goto	l4695
  5919  0B2C  0825               	movf	__tdiv_to_l_@exp1,w
  5920  0B2D  3A80               	xorlw	128
  5921  0B2E  3E97               	addlw	151
  5922  0B2F  1C03               	btfss	3,0
  5923  0B30  2AE6               	goto	l4659
  5924  0B31                     l4691:	
  5925  0B31  1003               	clrc
  5926  0B32  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5927  0B33  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5928  0B34  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5929  0B35  0CA0               	rrf	__tdiv_to_l_@quot,f
  5930  0B36  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  5931  0B37  2B31               	goto	l4691
  5932  0B38  2B47               	goto	l4701
  5933  0B39                     l4695:	
  5934  0B39  3018               	movlw	24
  5935  0B3A  0225               	subwf	__tdiv_to_l_@exp1,w
  5936  0B3B  1803               	btfsc	3,0
  5937  0B3C  2AE6               	goto	l4659
  5938  0B3D                     l2450:	
  5939  0B3D  08A5               	movf	__tdiv_to_l_@exp1,f
  5940  0B3E  1903               	btfsc	3,2
  5941  0B3F  2B47               	goto	l4701
  5942  0B40  1003               	clrc
  5943  0B41  0DA0               	rlf	__tdiv_to_l_@quot,f
  5944  0B42  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5945  0B43  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5946  0B44  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5947  0B45  03A5               	decf	__tdiv_to_l_@exp1,f
  5948  0B46  2B3D               	goto	l2450
  5949  0B47                     l4701:	
  5950  0B47  0823               	movf	__tdiv_to_l_@quot+3,w
  5951  0B48  00F3               	movwf	?__tdiv_to_l_+3
  5952  0B49  0822               	movf	__tdiv_to_l_@quot+2,w
  5953  0B4A  00F2               	movwf	?__tdiv_to_l_+2
  5954  0B4B  0821               	movf	__tdiv_to_l_@quot+1,w
  5955  0B4C  00F1               	movwf	?__tdiv_to_l_+1
  5956  0B4D  0820               	movf	__tdiv_to_l_@quot,w
  5957  0B4E  00F0               	movwf	?__tdiv_to_l_
  5958  0B4F  0008               	return
  5959  0B50                     __end_of__tdiv_to_l_:	
  5960                           
  5961                           	psect	text578
  5962  09FC                     __ptext578:	
  5963 ;; =============== function _getch ends ============
  5964                           
  5965                           
  5966 ;; *************** function _putch *****************
  5967 ;; Defined at:
  5968 ;;		line 229 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  dato            1    wreg     unsigned char 
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;  dato            1    0[COMMON] unsigned char 
  5973 ;; Return value:  Size  Location     Type
  5974 ;;		None               void
  5975 ;; Registers used:
  5976 ;;		wreg
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/20
  5979 ;;		On exit  : 60/0
  5980 ;;		Unchanged: FFF9F/0
  5981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5982 ;;      Params:         0       0       0       0       0
  5983 ;;      Locals:         1       0       0       0       0
  5984 ;;      Temps:          0       0       0       0       0
  5985 ;;      Totals:         1       0       0       0       0
  5986 ;;Total ram usage:        1 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; This function calls:
  5989 ;;		Nothing
  5990 ;; This function is called by:
  5991 ;;		_main
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994  09FC                     _putch:	
  5995                           
  5996                           ; Regs used in _putch: [wreg]
  5997                           ;putch@dato stored from wreg
  5998  09FC  00F0               	movwf	putch@dato
  5999  09FD                     l1102:	
  6000                           ;C_PuertoSerial_usart.c: 230: while(!TXIF) continue;
  6001                           
  6002  09FD  1283               	bcf	3,5	;RP0=0, select bank0
  6003  09FE  1303               	bcf	3,6	;RP1=0, select bank0
  6004  09FF  1E0C               	btfss	12,4
  6005  0A00  29FD               	goto	l1102
  6006                           
  6007                           ;C_PuertoSerial_usart.c: 231: TXREG=dato;
  6008  0A01  0870               	movf	putch@dato,w
  6009  0A02  0099               	movwf	25	;volatile
  6010  0A03  0008               	return
  6011  0A04                     __end_of_putch:	
  6012                           
  6013                           	psect	text580
  6014  0000                     __ptext580:	
  6015 ;; =============== function _msecbase ends ============
  6016                           
  6017  007E                     btemp	set	126	;btemp
  6018  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Wed Nov 06 14:53:20 2019

                    pc 0002         ___bmul@product 007A           ___awdiv@sign 007B                     fsr 0004  
  ___wmul@multiplicand 0072           ?_gets_Serial 0070           ___ftadd@exp1 0047           ___ftadd@exp2 0046  
         ___ftadd@sign 0045                    _RA6 002E                    _RA7 002F                    _RE1 0049  
                  _PR2 0092                    _nin 00CF                    _num 00CC                    fsr0 0004  
                  indf 0000           ___awmod@sign 0075            lcd_goto@pos 0075                   l1102 09FD  
                 l1111 0000                   l1105 0000                   l1202 0000                   l1108 0A83  
                 l1070 0000                   l1055 0AD4                   l1064 0000                   l1160 002B  
                 l1058 0000                   l1082 0000                   l1090 0F36                   l1067 0000  
                 l1076 0000                   l2312 0666                   l2225 0DFB                   l2234 0000  
                 l2228 0000                   l2332 0000                   l2413 0000                   l2192 0000  
                 l2256 0CA4                   l2345 0000                   l2450 0B3D                   l2443 0000  
                 l2355 0000                   l5003 0000                   l5011 0000                   l2435 0000  
                 l5005 07EF                   l5021 0519                   l5101 0C61                   l2198 0000  
                 l2374 0000                   l2278 0000                   l2359 0000                   l5015 0000  
                 l5111 0000                   l5103 0000                   l5041 0540                   l5017 0512  
                 l5009 0000                   l5121 0C83                   l5113 0C6F                   l5201 0000  
                 l5035 0000                   l5051 0ABE                   l5131 0C9B                   l5115 0000  
                 l5123 0C88                   l5211 0000                   l5203 058E                   l2493 0BF2  
                 l2485 0BD3                   l5029 0525                   l5037 0538                   l5045 0ABC  
                 l5061 0000                   l5053 0000                   l5133 0CA0                   l5125 0C8C  
                 l5109 0000                   l5213 0000                   l2486 0000                   l5039 0000  
                 l5071 0A62                   l5063 0000                   l5143 0000                   l5127 0000  
                 l5119 0C7E                   l5207 0598                   l5223 0000                   l5311 04AC  
                 l5049 0000                   l5081 0000                   l5073 0000                   l5153 0000  
                 l5145 0CBA                   l5137 0000                   l5209 0000                   l5161 0000  
                 l5225 0A16                   l5217 0000                   l5233 0A2B                   l5241 0000  
                 l5305 0467                   l5321 0000                   l5401 0000                   l5059 0A4C  
                 l5155 0000                   l5147 0000                   l5139 0CAF                   l5091 0C4B  
                 l5083 0000                   l5219 0000                   l5235 0A36                   l5251 0000  
                 l5243 0000                   l5315 0000                   l5323 0000                   l5331 0A9D  
                 l4701 0B47                   l5157 0CD6                   l5149 0000                   l5085 0000  
                 l5181 0000                   l5173 0567                   l5229 0000                   l5245 0000  
                 l5253 0000                   l5317 0000                   l5325 0000                   l5333 0000  
                 l5421 0000                   l5413 0173                   l5079 0000                   l5095 0C52  
                 l5087 0000                   l5191 0578                   l5183 0000                   l5175 0000  
                 l5167 0556                   l5247 0000                   l5239 0000                   l5271 0DC9  
                 l5263 0D75                   l5335 0000                   l5423 0000                   l5351 003F  
                 l5511 0000                   l5503 0000                   l4721 0000                   l4705 0000  
                 l4801 0000                   l5097 0000                   l5185 0000                   l5177 0000  
                 l5249 0000                   l5257 0000                   l5329 0000                   l5441 0000  
                 l5425 01A1                   l5409 0162                   l5345 0028                   l5337 0000  
                 l5601 0000                   l5521 0000                   l5513 0000                   l5505 0000  
                 l4651 0000                   l4731 0000                   l4723 0B93                   l4715 0000  
                 l4707 0B5D                   l4803 0E08                   l4811 0E0E                   l5195 0582  
                 l5187 0000                   l5179 0000                   l5267 0000                   l5275 0000  
                 l5443 0214                   l5435 01E0                   l5427 0000                   l5419 0000  
                 l5371 0000                   l5363 0000                   l5355 0000                   l5603 0000  
                 l5531 0000                   l5523 0000                   l5515 0000                   l5507 0000  
                 l4645 0000                   l4661 0AEB                   l4741 0BEE                   l4725 0000  
                 l4717 0000                   l4709 0B62                   l4821 0000                   l4813 0000  
                 l5197 0000                   l5189 0000                   l5293 03E6                   l5461 024D  
                 l5453 024A                   l5429 01DE                   l5381 0000                   l5373 0000  
                 l5365 0079                   l5357 0000                   l5349 002D                   l5621 0000  
                 l5613 0000                   l5605 0F2C                   l5541 0000                   l5533 0000  
                 l5525 0000                   l5517 0000                   l5509 0000                   l4647 0000  
                 l4671 0000                   l4719 0000                   l4751 0000                   l4815 0000  
                 l4807 0000                   l4903 0000                   l5199 0000                   l5287 03A1  
                 l5279 0000                   l5471 0000                   l5463 0261                   l5375 0000  
                 l5367 0000                   l5359 0000                   l5631 0000                   l5615 0000  
                 l5607 0000                   l5551 0000                   l5543 0000                   l5535 0000  
                 l5527 0000                   l5519 0000                   l4681 0000                   l4673 0000  
                 l4665 0000                   l4657 0000                   l4737 0BE6                   l4729 0000  
                 l4761 0000                   l4753 05B6                   l4809 0000                   l4841 05E7  
                 l4833 05CE                   l4825 0000                   l4921 0000                   l4905 04D6  
                 l5297 03FD                   l5473 0289                   l5457 0000                   l5449 021C  
                 l5393 0100                   l5385 00C9                   l5377 0000                   l5617 0000  
                 l5609 0000                   l5561 0000                   l5553 0000                   l5545 0000  
                 l5537 0000                   l5529 0000                   l4691 0B31                   l4675 0B08  
                 l4667 0000                   l4659 0AE6                   l4747 0BFC                   l4739 0000  
                 l4819 0E22                   l4851 0000                   l4843 05EC                   l4835 05D3  
                 l4827 0000                   l4931 0503                   l4915 04E4                   l4907 0000  
                 l5475 02A8                   l5467 0270                   l5459 0000                   l5387 0000  
                 l5379 0000                   l5491 0320                   l5651 0000                   l5643 0FBA  
                 l5635 0000                   l5627 0F8E                   l5619 0000                   l5571 0000  
                 l5563 0000                   l5555 0000                   l5547 0000                   l5539 0000  
                 l4693 0000                   l4685 0000                   l4677 0000                   l4669 0000  
                 l4773 06CF                   l4837 05D8                   l4829 05CA                   l4861 0000  
                 l4853 0000                   l4925 0000                   l4917 0000                   l5485 0000  
                 l5477 0000                   l5469 0000                   l5389 0000                   l5653 0000  
                 l5645 0000                   l5637 0000                   l5629 0000                   l5581 0000  
                 l5565 0000                   l5557 0000                   l5549 0000                   l4695 0B39  
                 l4759 0000                   l4775 0000                   l4767 0000                   l4783 0000  
                 l4847 0000                   l4839 05E2                   l4863 0000                   l4855 0636  
                 l4927 04FB                   l4943 0697                   l4951 06BC                   l4935 0000  
                 l5487 0000                   l5479 0000                   l5399 0110                   l5655 0000  
                 l5647 0000                   l5591 0EF0                   l5567 0000                   l5559 0000  
                 l4777 0000                   l4769 06C7                   l4793 0000                   l4785 0000  
                 l4849 0000                   l4873 065A                   l4865 0000                   l4857 063B  
                 l4929 0000                   l5489 0314                   l5497 0012                   l5657 0000  
                 l5593 0000                   l5585 0000                   l5577 0EC0                   l5569 0000  
                 l4787 0000                   l4883 0670                   l4875 0000                   l4867 0000  
                 l4859 0000                   l4891 0000                   l4955 0000                   l4971 061E  
                 l4963 0000                   l5499 032C                   l5659 0000                   l5595 0000  
                 l5579 0000                   l4797 0000                   l4789 0DF5                   l4885 0000  
                 l4877 0662                   l4893 0000                   l4949 0000                   l4973 0000  
                 l4887 067E                   l4975 0000                   l4967 060F                   l4983 0000  
                 l5599 0000                   l4897 0000                   l4993 07C4                   l4985 0000  
                 l4899 04CD                   l4995 0000                   l4999 0000                   STR_1 087C  
                 _T0IF 005A                   u2035 06A5                   u2115 07D7                   u2205 0AC4  
                 u2215 0A5E                   u1525 0B17                   u2245 0A80                   u1615 0BB7  
                 u2175 052B                   u2715 0141                   u2805 0256                   u1870 0000  
                 u2670 0000                   u2815 026B                   u2745 0160                   u2905 0F46  
                 u1875 063F                   u2675 008F                   u2765 020D                   u1985 04ED  
                 u2875 0EDE                   _RCIF 0065                   u2885 0F0E                   _TMR0 0001  
                 _TXIF 0064                   _main 0E3C           ___ftpack@arg 0070           ___ftpack@exp 0073  
                 btemp 007E                   start 0000           _sprintf$1890 00A0      ___bmul@multiplier 007B  
         ___ftmul@cntr 003A           ___ftmul@sign 003B           ___fttol@exp1 002C           ___fttol@lval 0028  
                ?_main 0070        __end_of___awdiv 0508        __end_of___lbdiv 0E0A        __end_of___ftadd 0CEA  
      __end_of___awmod 0545        __end_of___lbmod 0E26        __end_of___ftneg 0800                  _ANSEL 0188  
      __end_of___lldiv 07F8        __end_of___ftmul 05B4        ___awdiv@divisor 0076        __end_of___llmod 06C5  
      __end_of___ftsub 0C28        __end_of___fttol 0687        ___awdiv@counter 007A                  _RCREG 001A  
                _RCSTA 0018                  _SPBRG 0099                  _PORTA 0005                  _PORTD 0008  
                _TRISA 0085                  _TRISB 0086                  _TRISD 0088                  _TRISE 0089  
                _TXREG 0019                  _TXSTA 0098           ___lltoft@exp 007C      gets_Serial@i_1836 0074  
        ___awtoft@sign 007B                  _getch 0A83                  _scale 0331                  _input 00D1  
                _pause 0ABC          ___ftpack@sign 0074                  _putch 09FC                  main@i 00C6  
                main@x 00CA                  pclath 000A                  status 0003                  wtemp0 007E  
      __end_of_sprintf 0331        ___lbdiv@divisor 0075        ___lbdiv@counter 0077           gets_Serial@c 0076  
         gets_Serial@i 0072           gets_Serial@s 0071           __end_of_main 1000                 ??_main 005B  
        ___fttol@sign1 0027   __size_of__tdiv_to_l_ 0078                 ?_getch 0070                 _ADCON0 001F  
               _ADCON1 009F       ___llmod@dividend 0024                 ?_scale 003C                 _ADRESH 001E  
               _ADRESL 009E                 _CCPR1L 0015                 ?_pause 0070       ___awdiv@dividend 0078  
     __end_of___awtoft 0A29                 ?_putch 0070       __end_of___ftpack 0600                 _ANSELH 0189  
     __end_of___lltoft 0A49                 _OSCCON 008F                 _TMR2ON 0092                 _TRISC6 043E  
               _TRISC7 043F       __end_of_lcd_goto 0A90                 ___bmul 05B4       __end_of_lcd_puts 0AAA  
               ___ftge 0600                 ___wmul 06C5              ??___awdiv 007A              ??___lbdiv 0076  
            ??___ftadd 0042              ??___awmod 0074              ??___lbmod 0071              ??___ftneg 0073  
            ??___lldiv 0078              ??___ftmul 0033              ??___llmod 007D              ??___ftsub 007E  
            ??___fttol 0024                 _fround 0CEA       ___awdiv@quotient 007C        ___awmod@divisor 0070  
      ___awmod@counter 0074       __end_of_msecbase 0AD8                 clrloop 0A05  ___ftmul@f3_as_product 0037  
 __size_of_gets_Serial 003A                 pause@x 0072              ??_sprintf 0056       ___lbdiv@dividend 0076  
      ___lbmod@divisor 0070        ___lbmod@counter 0073             ___ftadd@f1 003C             ___ftadd@f2 003F  
           ___ftge@ff1 0070             ___ftge@ff2 0073             ___ftneg@f1 0070             ___awtoft@c 0078  
  ___bmul@multiplicand 0079             ___ftmul@f1 002D             ___ftmul@f2 0030             ___ftsub@f1 004B  
           ___ftsub@f2 0048             ___fttol@f1 0020         __pcstackCOMMON 0070             ___lltoft@c 0078  
        __end_of_getch 0A89          __end_of_scale 04C3          __end_of_pause 0ACD          __end_of_putch 0A04  
     ___lbdiv@quotient 0078             __div_to_l_ 0B50     __size_of_lcd_clear 000B                ??_getch 0070  
      __div_to_l_@exp1 0025     __size_of_lcd_write 0012        __div_to_l_@cntr 0024           sprintf@integ 00AD  
              ??_scale 003F                ??_pause 0072        __div_to_l_@quot 0020                ??_putch 0070  
           __pbssBANK1 00CC          __div_to_l_@f1 0070          __div_to_l_@f2 0073             __pmaintext 0E3C  
              ?___bmul 0079                ?___ftge 0070                ?___wmul 0070                _CCP1CON 0017  
              _CCP2CON 001D                _BAUDCTL 0187                ?_fround 0048              ?___awtoft 0078  
            ?___ftpack 0070              ?___lltoft 0078                _T2CKPS0 0090                _T2CKPS1 0091  
              _GO_DONE 00F9              ?_lcd_goto 0070              ?_lcd_puts 0070              ?_msecbase 0070  
           _scale$2837 0043      __end_of_lcd_clear 0A9B        __size_of___bmul 000E        __size_of___ftge 002C  
              ___awdiv 04C3                ___lbdiv 0DEF                ___ftadd 0C28                ___awmod 0508  
              ___lbmod 0E0A      __end_of_lcd_write 0ABC                ___ftneg 07F8                ___lldiv 07B0  
      __size_of___wmul 0019                ___ftmul 0545                ___llmod 0687                ___ftsub 0C12  
              ___fttol 062C             ??___awtoft 007B             ??___ftpack 0075        __size_of_fround 0105  
           ??___lltoft 007C            ?__div_to_l_ 0070                _dpowers 0854       ___awmod@dividend 0072  
              _sprintf 000E             ??_lcd_goto 0075             ??_lcd_puts 0075   end_of_initialization 000A  
           ??_msecbase 0070        ___lldiv@divisor 0070        ___lldiv@counter 007C         __tdiv_to_l_@f1 0070  
       __tdiv_to_l_@f2 0073          ??__tdiv_to_l_ 0076       ___lbmod@dividend 0072             main@i_1825 00C8  
           main@x_1829 00CB            ___lbmod@rem 0074             main@buffer 00B7    __size_of__div_to_l_ 00B5  
           lcd_write@c 0074            ___ftmul@exp 0036         __end_of___bmul 05C2         __end_of___ftge 062C  
        ??_gets_Serial 0070         __end_of___wmul 06DE         __end_of_fround 0DEF    start_initialization 0003  
  __end_of__tdiv_to_l_ 0B50        ___llmod@divisor 0020        ___llmod@counter 007D               ??___bmul 007A  
             ??___ftge 0076               ??___wmul 0074               ??_fround 007E           pause@msvalue 0070  
           fround@prec 0051      __size_of___awtoft 001D      __size_of___ftpack 003E      __size_of___lltoft 0020  
  __end_of_gets_Serial 0A83          __pcstackBANK0 0020          __pcstackBANK1 00A0      __size_of_lcd_goto 0007  
          sprintf@_val 00A9            sprintf@flag 00A5      __size_of_lcd_puts 000F            sprintf@fval 00B3  
          sprintf@prec 00A7      __size_of_msecbase 000B               ?___awdiv 0076               ?___lbdiv 0075  
             ?___ftadd 003C               ?___awmod 0070              __ptext550 0A89              __ptext551 0A9B  
            __ptext560 0C28              __ptext552 0A90              __ptext561 0A49              __ptext553 0C12  
            __ptext570 05C2              __ptext562 0ABC              __ptext554 0331              __ptext571 0E0A  
            __ptext563 0508              __ptext555 0CEA               ?___lbmod 0070              __ptext580 0000  
            __ptext572 0DEF              __ptext564 07B0              __ptext556 0AAA              __ptext573 06C5  
            __ptext565 0600              __ptext557 0A29              __ptext549 000E              __ptext574 05B4  
            __ptext566 07F8              __ptext558 0A0C              __ptext575 0B50              __ptext567 0687  
            __ptext559 0545              __ptext576 0AD8              __ptext568 04C3              __ptext577 0A83  
            __ptext569 062C              __ptext578 09FC              __ptext579 0ACD               ?___ftneg 0070  
             ?___lldiv 0070               ?___ftmul 002D               ?___llmod 0020               ?___ftsub 0048  
            __npowers_ 0806               ?___fttol 0020              _lcd_clear 0A90              __pstrings 0800  
          __tdiv_to_l_ 0AD8              _lcd_write 0AAA           ??__div_to_l_ 0076         __size_of_getch 0006  
             ?_sprintf 0052         __size_of_scale 0192         __size_of_pause 0011         __size_of_putch 0008  
       ___wmul@product 0074     __end_of__div_to_l_ 0C05             ?_lcd_clear 0070            _gets_Serial 0A49  
          __stringbase 0805             ?_lcd_write 0070      ___wmul@multiplier 0070              lcd_puts@s 0075  
     __size_of___awdiv 0045       __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D  
     __size_of___lbmod 001C       __size_of___ftneg 0008       __size_of___lldiv 0048       __size_of___ftmul 006F  
     __size_of___llmod 003E       __size_of___ftsub 0016       __size_of___fttol 005B               ___awtoft 0A0C  
             ___ftpack 05C2            _fround$2835 004E            _fround$2836 004B               ___lltoft 0A29  
           sprintf@exp 00B1               __powers_ 082D               _lcd_goto 0A89               _lcd_puts 0A9B  
     __size_of_sprintf 0323          __size_of_main 01C4               _msecbase 0ACD               clear_ram 0A04  
          ??_lcd_clear 0075            ??_lcd_write 0074              putch@dato 0070               scale@scl 0046  
            sprintf@ap 00A4       __tdiv_to_l_@exp1 0025       __tdiv_to_l_@cntr 0024              sprintf@sp 00B0  
     __tdiv_to_l_@quot 0020       ___lldiv@dividend 0074              stringcode 0800           ?__tdiv_to_l_ 0070  
           _OPTION_REG 0081               sprintf@c 00B6               sprintf@f 0052       ___lldiv@quotient 0078  
             stringdir 0800               stringtab 0800  
