

HI-TECH Software PIC PRO Macro Assembler V9.82 build 9453 
                                                                                               Mon Nov 04 20:16:49 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 9453
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,delta=2
    14                           	psect	text514,local,class=CODE,delta=2
    15                           	psect	text516,local,class=CODE,delta=2
    16                           	psect	text518,local,class=CODE,delta=2
    17                           	psect	text520,local,class=CODE,delta=2
    18                           	psect	text522,local,class=CODE,delta=2
    19                           	psect	text523,local,class=CODE,delta=2
    20                           	psect	text539,local,class=CODE,delta=2
    21                           	psect	text540,local,class=CODE,delta=2
    22                           	psect	text541,local,class=CODE,delta=2
    23                           	psect	text542,local,class=CODE,delta=2
    24                           	psect	text544,local,class=CODE,delta=2
    25                           	psect	pa_nodes,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  000A                     	;#
    28                           
    29                           	psect	config
    30  2007  E0D4               	dw	57556	;#
    31  2008  FFFF               	dw	65535	;#
    32                           
    33                           	psect	idataBANK1
    34  0000                     __pidataBANK1:	
    35                           
    36                           	psect	strings
    37  0800                     __pstrings:	
    38  0800                     stringtab:	
    39                           ;	global	stringdir,stringtab,__stringbase
    40                           
    41  0800                     stringcode:	
    42                           ;	String table - string pointers are 1 byte each
    43                           
    44  0800                     stringdir:	
    45  0800  3008               	movlw	high stringdir
    46  0801  008A               	movwf	10
    47  0802  0804               	movf	4,w
    48  0803  0A84               	incf	4,f
    49  0804  0782               	addwf	2,f
    50  0805                     __stringbase:	
    51  0805  3400               	retlw	0
    52  0806                     __npowers_:	
    53  0806  3400               	retlw	0
    54  0807  3480               	retlw	128
    55  0808  343F               	retlw	63
    56  0809  34CD               	retlw	205
    57  080A  34CC               	retlw	204
    58  080B  343D               	retlw	61
    59  080C  34D7               	retlw	215
    60  080D  3423               	retlw	35
    61  080E  343C               	retlw	60
    62  080F  3412               	retlw	18
    63  0810  3483               	retlw	131
    64  0811  343A               	retlw	58
    65  0812  34B7               	retlw	183
    66  0813  34D1               	retlw	209
    67  0814  3438               	retlw	56
    68  0815  34C6               	retlw	198
    69  0816  3427               	retlw	39
    70  0817  3437               	retlw	55
    71  0818  3438               	retlw	56
    72  0819  3486               	retlw	134
    73  081A  3435               	retlw	53
    74  081B  34C0               	retlw	192
    75  081C  34D6               	retlw	214
    76  081D  3433               	retlw	51
    77  081E  34CC               	retlw	204
    78  081F  342B               	retlw	43
    79  0820  3432               	retlw	50
    80  0821  3470               	retlw	112
    81  0822  3489               	retlw	137
    82  0823  3430               	retlw	48
    83  0824  34E7               	retlw	231
    84  0825  34DB               	retlw	219
    85  0826  342E               	retlw	46
    86  0827  34E5               	retlw	229
    87  0828  343C               	retlw	60
    88  0829  341E               	retlw	30
    89  082A  3442               	retlw	66
    90  082B  34A2               	retlw	162
    91  082C  340D               	retlw	13
    92  082D                     __powers_:	
    93  082D  3400               	retlw	0
    94  082E  3480               	retlw	128
    95  082F  343F               	retlw	63
    96  0830  3400               	retlw	0
    97  0831  3420               	retlw	32
    98  0832  3441               	retlw	65
    99  0833  3400               	retlw	0
   100  0834  34C8               	retlw	200
   101  0835  3442               	retlw	66
   102  0836  3400               	retlw	0
   103  0837  347A               	retlw	122
   104  0838  3444               	retlw	68
   105  0839  3440               	retlw	64
   106  083A  341C               	retlw	28
   107  083B  3446               	retlw	70
   108  083C  3450               	retlw	80
   109  083D  34C3               	retlw	195
   110  083E  3447               	retlw	71
   111  083F  3424               	retlw	36
   112  0840  3474               	retlw	116
   113  0841  3449               	retlw	73
   114  0842  3497               	retlw	151
   115  0843  3418               	retlw	24
   116  0844  344B               	retlw	75
   117  0845  34BC               	retlw	188
   118  0846  34BE               	retlw	190
   119  0847  344C               	retlw	76
   120  0848  346B               	retlw	107
   121  0849  346E               	retlw	110
   122  084A  344E               	retlw	78
   123  084B  3403               	retlw	3
   124  084C  3415               	retlw	21
   125  084D  3450               	retlw	80
   126  084E  3479               	retlw	121
   127  084F  34AD               	retlw	173
   128  0850  3460               	retlw	96
   129  0851  34F3               	retlw	243
   130  0852  3449               	retlw	73
   131  0853  3471               	retlw	113
   132  0854                     _dpowers:	
   133  0854  3401               	retlw	1
   134  0855  3400               	retlw	0
   135  0856  3400               	retlw	0
   136  0857  3400               	retlw	0
   137  0858  340A               	retlw	10
   138  0859  3400               	retlw	0
   139  085A  3400               	retlw	0
   140  085B  3400               	retlw	0
   141  085C  3464               	retlw	100
   142  085D  3400               	retlw	0
   143  085E  3400               	retlw	0
   144  085F  3400               	retlw	0
   145  0860  34E8               	retlw	232
   146  0861  3403               	retlw	3
   147  0862  3400               	retlw	0
   148  0863  3400               	retlw	0
   149  0864  3410               	retlw	16
   150  0865  3427               	retlw	39
   151  0866  3400               	retlw	0
   152  0867  3400               	retlw	0
   153  0868  34A0               	retlw	160
   154  0869  3486               	retlw	134
   155  086A  3401               	retlw	1
   156  086B  3400               	retlw	0
   157  086C  3440               	retlw	64
   158  086D  3442               	retlw	66
   159  086E  340F               	retlw	15
   160  086F  3400               	retlw	0
   161  0870  3480               	retlw	128
   162  0871  3496               	retlw	150
   163  0872  3498               	retlw	152
   164  0873  3400               	retlw	0
   165  0874  3400               	retlw	0
   166  0875  34E1               	retlw	225
   167  0876  34F5               	retlw	245
   168  0877  3405               	retlw	5
   169  0878  3400               	retlw	0
   170  0879  34CA               	retlw	202
   171  087A  349A               	retlw	154
   172  087B  343B               	retlw	59
   173  001F                     _ADCON0	set	31
   174  001E                     _ADRESH	set	30
   175  0017                     _CCP1CON	set	23
   176  001D                     _CCP2CON	set	29
   177  0015                     _CCPR1L	set	21
   178  000B                     _INTCON	set	11
   179  0008                     _PORTD	set	8
   180  001A                     _RCREG	set	26
   181  0018                     _RCSTA	set	24
   182  0001                     _TMR0	set	1
   183  0019                     _TXREG	set	25
   184  00F9                     _GO_DONE	set	249
   185  002E                     _RA6	set	46
   186  002F                     _RA7	set	47
   187  0065                     _RCIF	set	101
   188  0049                     _RE1	set	73
   189  005A                     _T0IF	set	90
   190  0090                     _T2CKPS0	set	144
   191  0091                     _T2CKPS1	set	145
   192  0092                     _TMR2ON	set	146
   193  0064                     _TXIF	set	100
   194  009F                     _ADCON1	set	159
   195  009E                     _ADRESL	set	158
   196  0081                     _OPTION_REG	set	129
   197  008F                     _OSCCON	set	143
   198  0092                     _PR2	set	146
   199  0099                     _SPBRG	set	153
   200  0085                     _TRISA	set	133
   201  0086                     _TRISB	set	134
   202  0088                     _TRISD	set	136
   203  0089                     _TRISE	set	137
   204  0098                     _TXSTA	set	152
   205  043E                     _TRISC6	set	1086
   206  043F                     _TRISC7	set	1087
   207  0188                     _ANSEL	set	392
   208  0189                     _ANSELH	set	393
   209  0187                     _BAUDCTL	set	391
   210  0005                     _PORTA	set	5
   211  087C                     STR_1:	
   212  087C  3456               	retlw	86	;'V'
   213  087D  3461               	retlw	97	;'a'
   214  087E  346C               	retlw	108	;'l'
   215  087F  346F               	retlw	111	;'o'
   216  0880  3472               	retlw	114	;'r'
   217  0881  3420               	retlw	32	;' '
   218  0882  3465               	retlw	101	;'e'
   219  0883  3473               	retlw	115	;'s'
   220  0884  343A               	retlw	58	;':'
   221  0885  3420               	retlw	32	;' '
   222  0886  3425               	retlw	37	;'%'
   223  0887  3466               	retlw	102	;'f'
   224  0888  3400               	retlw	0
   225                           
   226                           	psect	cinit
   227  0A7C                     start_initialization:	
   228                           
   229                           ; Clear objects allocated to BANK1
   230  0A7C  1683               	bsf	3,5	;RP0=1, select bank1
   231  0A7D  3048               	movlw	72
   232  0A7E  01C2               	clrf	__pbssBANK1& (0+127)
   233  0A7F  01C3               	clrf	(__pbssBANK1+1)& (0+127)
   234  0A80  01C4               	clrf	(__pbssBANK1+2)& (0+127)
   235  0A81  01C5               	clrf	(__pbssBANK1+3)& (0+127)
   236  0A82  01C6               	clrf	(__pbssBANK1+4)& (0+127)
   237                           
   238                           ;initializer for main@F1732
   239  0A83  00B7               	movwf	__pdataBANK1& (0+127)
   240  0A84  306F               	movlw	111
   241  0A85  00B8               	movwf	(__pdataBANK1+1)& (0+127)
   242  0A86  306C               	movlw	108
   243  0A87  00B9               	movwf	(__pdataBANK1+2)& (0+127)
   244  0A88  3061               	movlw	97
   245  0A89  00BA               	movwf	(__pdataBANK1+3)& (0+127)
   246  0A8A  3020               	movlw	32
   247  0A8B  00BB               	movwf	(__pdataBANK1+4)& (0+127)
   248  0A8C  304D               	movlw	77
   249  0A8D  00BC               	movwf	(__pdataBANK1+5)& (0+127)
   250  0A8E  3075               	movlw	117
   251  0A8F  00BD               	movwf	(__pdataBANK1+6)& (0+127)
   252  0A90  306E               	movlw	110
   253  0A91  00BE               	movwf	(__pdataBANK1+7)& (0+127)
   254  0A92  3064               	movlw	100
   255  0A93  00BF               	movwf	(__pdataBANK1+8)& (0+127)
   256  0A94  306F               	movlw	111
   257  0A95  00C0               	movwf	(__pdataBANK1+9)& (0+127)
   258  0A96  01C1               	clrf	(__pdataBANK1+10)& (0+127)
   259  0A97                     end_of_initialization:	
   260                           ;End of C runtime variable initialization code
   261                           
   262  0A97  0183               	clrf	3
   263  0A98  120A  158A  2E5D   	ljmp	_main	;jump to C main() function
   264                           
   265                           	psect	bssBANK1
   266  00C2                     __pbssBANK1:	
   267  00C2                     _num:	
   268  00C2                     	ds	3
   269  00C5                     _nin:	
   270  00C5                     	ds	2
   271                           
   272                           	psect	dataBANK1
   273  00B7                     __pdataBANK1:	
   274  00B7                     main@F1732:	
   275  00B7                     	ds	11
   276                           
   277                           	psect	cstackBANK1
   278  00A0                     __pcstackBANK1:	
   279  00A0                     _sprintf$1888:	
   280                           
   281                           ; 4 bytes @ 0x0
   282  00A0                     	ds	4
   283  00A4                     sprintf@ap:	
   284                           
   285                           ; 1 bytes @ 0x4
   286  00A4                     	ds	1
   287  00A5                     sprintf@flag:	
   288                           
   289                           ; 2 bytes @ 0x5
   290  00A5                     	ds	2
   291  00A7                     sprintf@prec:	
   292                           
   293                           ; 2 bytes @ 0x7
   294  00A7                     	ds	2
   295  00A9                     sprintf@_val:	
   296                           
   297                           ; 4 bytes @ 0x9
   298  00A9                     	ds	4
   299  00AD                     sprintf@integ:	
   300                           
   301                           ; 3 bytes @ 0xD
   302  00AD                     	ds	3
   303  00B0                     sprintf@sp:	
   304                           
   305                           ; 1 bytes @ 0x10
   306  00B0                     	ds	1
   307  00B1                     sprintf@exp:	
   308                           
   309                           ; 2 bytes @ 0x11
   310  00B1                     	ds	2
   311  00B3                     sprintf@fval:	
   312                           
   313                           ; 3 bytes @ 0x13
   314  00B3                     	ds	3
   315  00B6                     sprintf@c:	
   316                           
   317                           ; 1 bytes @ 0x16
   318  00B6                     	ds	1
   319                           
   320                           	psect	cstackCOMMON
   321  0070                     __pcstackCOMMON:	
   322  0070                     ?_putch:	
   323  0070                     ??_putch:	
   324                           ; 0 bytes @ 0x0
   325                           
   326  0070                     ??_getch:	
   327                           ; 0 bytes @ 0x0
   328                           
   329  0070                     ?_msecbase:	
   330                           ; 0 bytes @ 0x0
   331                           
   332  0070                     ??_msecbase:	
   333                           ; 0 bytes @ 0x0
   334                           
   335  0070                     ?_pause:	
   336                           ; 0 bytes @ 0x0
   337                           
   338  0070                     ?_lcd_write:	
   339                           ; 0 bytes @ 0x0
   340                           
   341  0070                     ?_lcd_clear:	
   342                           ; 0 bytes @ 0x0
   343                           
   344  0070                     ?_lcd_putch:	
   345                           ; 0 bytes @ 0x0
   346                           
   347  0070                     ?_lcd_goto:	
   348                           ; 0 bytes @ 0x0
   349                           
   350  0070                     ?_main:	
   351                           ; 0 bytes @ 0x0
   352                           
   353  0070                     ?___ftge:	
   354                           ; 0 bytes @ 0x0
   355                           
   356  0070                     ?_getch:	
   357                           ; 1 bit 
   358                           
   359  0070                     ?___lbmod:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?___wmul:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?___awmod:	
   366                           ; 2 bytes @ 0x0
   367                           
   368  0070                     ?___ftpack:	
   369                           ; 2 bytes @ 0x0
   370                           
   371  0070                     ?___ftneg:	
   372                           ; 3 bytes @ 0x0
   373                           
   374  0070                     ?__tdiv_to_l_:	
   375                           ; 3 bytes @ 0x0
   376                           
   377  0070                     ?__div_to_l_:	
   378                           ; 4 bytes @ 0x0
   379                           
   380  0070                     ?___lldiv:	
   381                           ; 4 bytes @ 0x0
   382                           
   383  0070                     putch@dato:	
   384                           ; 4 bytes @ 0x0
   385                           
   386  0070                     ___lbmod@divisor:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     pause@msvalue:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ___wmul@multiplier:	
   393                           ; 2 bytes @ 0x0
   394                           
   395  0070                     ___awmod@divisor:	
   396                           ; 2 bytes @ 0x0
   397                           
   398  0070                     ___ftneg@f1:	
   399                           ; 2 bytes @ 0x0
   400                           
   401  0070                     ___ftge@ff1:	
   402                           ; 3 bytes @ 0x0
   403                           
   404  0070                     __tdiv_to_l_@f1:	
   405                           ; 3 bytes @ 0x0
   406                           
   407  0070                     __div_to_l_@f1:	
   408                           ; 3 bytes @ 0x0
   409                           
   410  0070                     ___ftpack@arg:	
   411                           ; 3 bytes @ 0x0
   412                           
   413  0070                     ___lldiv@divisor:	
   414                           ; 3 bytes @ 0x0
   415                           
   416                           
   417                           ; 4 bytes @ 0x0
   418  0070                     	ds	1
   419  0071                     ??___lbmod:	
   420                           
   421                           ; 0 bytes @ 0x1
   422  0071                     	ds	1
   423  0072                     ??_pause:	
   424  0072                     ___lbmod@dividend:	
   425                           ; 0 bytes @ 0x2
   426                           
   427  0072                     pause@x:	
   428                           ; 1 bytes @ 0x2
   429                           
   430  0072                     ___wmul@multiplicand:	
   431                           ; 2 bytes @ 0x2
   432                           
   433  0072                     ___awmod@dividend:	
   434                           ; 2 bytes @ 0x2
   435                           
   436                           
   437                           ; 2 bytes @ 0x2
   438  0072                     	ds	1
   439  0073                     ??___ftneg:	
   440  0073                     ___lbmod@counter:	
   441                           ; 0 bytes @ 0x3
   442                           
   443  0073                     ___ftpack@exp:	
   444                           ; 1 bytes @ 0x3
   445                           
   446  0073                     ___ftge@ff2:	
   447                           ; 1 bytes @ 0x3
   448                           
   449  0073                     __tdiv_to_l_@f2:	
   450                           ; 3 bytes @ 0x3
   451                           
   452  0073                     __div_to_l_@f2:	
   453                           ; 3 bytes @ 0x3
   454                           
   455                           
   456                           ; 3 bytes @ 0x3
   457  0073                     	ds	1
   458  0074                     ??_lcd_write:	
   459  0074                     ??___wmul:	
   460                           ; 0 bytes @ 0x4
   461                           
   462  0074                     ??___awmod:	
   463                           ; 0 bytes @ 0x4
   464                           
   465  0074                     lcd_write@c:	
   466                           ; 0 bytes @ 0x4
   467                           
   468  0074                     ___lbmod@rem:	
   469                           ; 1 bytes @ 0x4
   470                           
   471  0074                     ___awmod@counter:	
   472                           ; 1 bytes @ 0x4
   473                           
   474  0074                     ___ftpack@sign:	
   475                           ; 1 bytes @ 0x4
   476                           
   477  0074                     ___wmul@product:	
   478                           ; 1 bytes @ 0x4
   479                           
   480  0074                     ___lldiv@dividend:	
   481                           ; 2 bytes @ 0x4
   482                           
   483                           
   484                           ; 4 bytes @ 0x4
   485  0074                     	ds	1
   486  0075                     ??___ftpack:	
   487  0075                     ??_lcd_clear:	
   488                           ; 0 bytes @ 0x5
   489                           
   490  0075                     ??_lcd_putch:	
   491                           ; 0 bytes @ 0x5
   492                           
   493  0075                     ??_lcd_goto:	
   494                           ; 0 bytes @ 0x5
   495                           
   496  0075                     ?___lbdiv:	
   497                           ; 0 bytes @ 0x5
   498                           
   499  0075                     lcd_putch@c:	
   500                           ; 1 bytes @ 0x5
   501                           
   502  0075                     lcd_goto@pos:	
   503                           ; 1 bytes @ 0x5
   504                           
   505  0075                     ___lbdiv@divisor:	
   506                           ; 1 bytes @ 0x5
   507                           
   508  0075                     ___awmod@sign:	
   509                           ; 1 bytes @ 0x5
   510                           
   511                           
   512                           ; 1 bytes @ 0x5
   513  0075                     	ds	1
   514  0076                     ??__tdiv_to_l_:	
   515  0076                     ??__div_to_l_:	
   516                           ; 0 bytes @ 0x6
   517                           
   518  0076                     ??___lbdiv:	
   519                           ; 0 bytes @ 0x6
   520                           
   521  0076                     ??___ftge:	
   522                           ; 0 bytes @ 0x6
   523                           
   524  0076                     ?___awdiv:	
   525                           ; 0 bytes @ 0x6
   526                           
   527  0076                     ___lbdiv@dividend:	
   528                           ; 2 bytes @ 0x6
   529                           
   530  0076                     ___awdiv@divisor:	
   531                           ; 1 bytes @ 0x6
   532                           
   533                           
   534                           ; 2 bytes @ 0x6
   535  0076                     	ds	1
   536  0077                     ___lbdiv@counter:	
   537                           
   538                           ; 1 bytes @ 0x7
   539  0077                     	ds	1
   540  0078                     ??___lldiv:	
   541  0078                     ?___awtoft:	
   542                           ; 0 bytes @ 0x8
   543                           
   544  0078                     ?___lltoft:	
   545                           ; 3 bytes @ 0x8
   546                           
   547  0078                     ___lbdiv@quotient:	
   548                           ; 3 bytes @ 0x8
   549                           
   550  0078                     ___awtoft@c:	
   551                           ; 1 bytes @ 0x8
   552                           
   553  0078                     ___awdiv@dividend:	
   554                           ; 2 bytes @ 0x8
   555                           
   556  0078                     ___lldiv@quotient:	
   557                           ; 2 bytes @ 0x8
   558                           
   559  0078                     ___lltoft@c:	
   560                           ; 4 bytes @ 0x8
   561                           
   562                           
   563                           ; 4 bytes @ 0x8
   564  0078                     	ds	1
   565  0079                     ?___bmul:	
   566  0079                     ___bmul@multiplicand:	
   567                           ; 1 bytes @ 0x9
   568                           
   569                           
   570                           ; 1 bytes @ 0x9
   571  0079                     	ds	1
   572  007A                     ??___bmul:	
   573  007A                     ??___awdiv:	
   574                           ; 0 bytes @ 0xA
   575                           
   576  007A                     ___bmul@product:	
   577                           ; 0 bytes @ 0xA
   578                           
   579  007A                     ___awdiv@counter:	
   580                           ; 1 bytes @ 0xA
   581                           
   582                           
   583                           ; 1 bytes @ 0xA
   584  007A                     	ds	1
   585  007B                     ??___awtoft:	
   586  007B                     ___bmul@multiplier:	
   587                           ; 0 bytes @ 0xB
   588                           
   589  007B                     ___awtoft@sign:	
   590                           ; 1 bytes @ 0xB
   591                           
   592  007B                     ___awdiv@sign:	
   593                           ; 1 bytes @ 0xB
   594                           
   595                           
   596                           ; 1 bytes @ 0xB
   597  007B                     	ds	1
   598  007C                     ??___lltoft:	
   599  007C                     ___lldiv@counter:	
   600                           ; 0 bytes @ 0xC
   601                           
   602  007C                     ___lltoft@exp:	
   603                           ; 1 bytes @ 0xC
   604                           
   605  007C                     ___awdiv@quotient:	
   606                           ; 1 bytes @ 0xC
   607                           
   608                           
   609                           ; 2 bytes @ 0xC
   610  007C                     	ds	1
   611  007D                     ??___llmod:	
   612  007D                     ___llmod@counter:	
   613                           ; 0 bytes @ 0xD
   614                           
   615                           
   616                           ; 1 bytes @ 0xD
   617  007D                     	ds	1
   618  007E                     ??_fround:	
   619  007E                     ??___ftsub:	
   620                           ; 0 bytes @ 0xE
   621                           
   622                           
   623                           	psect	cstackBANK0
   624  0020                     __pcstackBANK0:	
   625                           ; 0 bytes @ 0xE
   626                           
   627  0020                     ?___fttol:	
   628  0020                     ?___llmod:	
   629                           ; 4 bytes @ 0x0
   630                           
   631  0020                     ___fttol@f1:	
   632                           ; 4 bytes @ 0x0
   633                           
   634  0020                     ___llmod@divisor:	
   635                           ; 3 bytes @ 0x0
   636                           
   637  0020                     __tdiv_to_l_@quot:	
   638                           ; 4 bytes @ 0x0
   639                           
   640  0020                     __div_to_l_@quot:	
   641                           ; 4 bytes @ 0x0
   642                           
   643                           
   644                           ; 4 bytes @ 0x0
   645  0020                     	ds	4
   646  0024                     ??___fttol:	
   647  0024                     __tdiv_to_l_@cntr:	
   648                           ; 0 bytes @ 0x4
   649                           
   650  0024                     __div_to_l_@cntr:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0024                     ___llmod@dividend:	
   654                           ; 1 bytes @ 0x4
   655                           
   656                           
   657                           ; 4 bytes @ 0x4
   658  0024                     	ds	1
   659  0025                     __tdiv_to_l_@exp1:	
   660  0025                     __div_to_l_@exp1:	
   661                           ; 1 bytes @ 0x5
   662                           
   663                           
   664                           ; 1 bytes @ 0x5
   665  0025                     	ds	2
   666  0027                     ___fttol@sign1:	
   667                           
   668                           ; 1 bytes @ 0x7
   669  0027                     	ds	1
   670  0028                     ___fttol@lval:	
   671                           
   672                           ; 4 bytes @ 0x8
   673  0028                     	ds	4
   674  002C                     ___fttol@exp1:	
   675                           
   676                           ; 1 bytes @ 0xC
   677  002C                     	ds	1
   678  002D                     ?___ftmul:	
   679  002D                     ___ftmul@f1:	
   680                           ; 3 bytes @ 0xD
   681                           
   682                           
   683                           ; 3 bytes @ 0xD
   684  002D                     	ds	3
   685  0030                     ___ftmul@f2:	
   686                           
   687                           ; 3 bytes @ 0x10
   688  0030                     	ds	3
   689  0033                     ??___ftmul:	
   690                           
   691                           ; 0 bytes @ 0x13
   692  0033                     	ds	3
   693  0036                     ___ftmul@exp:	
   694                           
   695                           ; 1 bytes @ 0x16
   696  0036                     	ds	1
   697  0037                     ___ftmul@f3_as_product:	
   698                           
   699                           ; 3 bytes @ 0x17
   700  0037                     	ds	3
   701  003A                     ___ftmul@cntr:	
   702                           
   703                           ; 1 bytes @ 0x1A
   704  003A                     	ds	1
   705  003B                     ___ftmul@sign:	
   706                           
   707                           ; 1 bytes @ 0x1B
   708  003B                     	ds	1
   709  003C                     ?_scale:	
   710  003C                     ?___ftadd:	
   711                           ; 3 bytes @ 0x1C
   712                           
   713  003C                     ___ftadd@f1:	
   714                           ; 3 bytes @ 0x1C
   715                           
   716                           
   717                           ; 3 bytes @ 0x1C
   718  003C                     	ds	3
   719  003F                     ??_scale:	
   720  003F                     ___ftadd@f2:	
   721                           ; 0 bytes @ 0x1F
   722                           
   723                           
   724                           ; 3 bytes @ 0x1F
   725  003F                     	ds	3
   726  0042                     ??___ftadd:	
   727                           
   728                           ; 0 bytes @ 0x22
   729  0042                     	ds	1
   730  0043                     _scale$2835:	
   731                           
   732                           ; 3 bytes @ 0x23
   733  0043                     	ds	2
   734  0045                     ___ftadd@sign:	
   735                           
   736                           ; 1 bytes @ 0x25
   737  0045                     	ds	1
   738  0046                     scale@scl:	
   739  0046                     ___ftadd@exp2:	
   740                           ; 1 bytes @ 0x26
   741                           
   742                           
   743                           ; 1 bytes @ 0x26
   744  0046                     	ds	1
   745  0047                     ___ftadd@exp1:	
   746                           
   747                           ; 1 bytes @ 0x27
   748  0047                     	ds	1
   749  0048                     ?_fround:	
   750  0048                     ?___ftsub:	
   751                           ; 3 bytes @ 0x28
   752                           
   753  0048                     ___ftsub@f2:	
   754                           ; 3 bytes @ 0x28
   755                           
   756                           
   757                           ; 3 bytes @ 0x28
   758  0048                     	ds	3
   759  004B                     ___ftsub@f1:	
   760  004B                     _fround$2834:	
   761                           ; 3 bytes @ 0x2B
   762                           
   763                           
   764                           ; 3 bytes @ 0x2B
   765  004B                     	ds	3
   766  004E                     _fround$2833:	
   767                           
   768                           ; 3 bytes @ 0x2E
   769  004E                     	ds	3
   770  0051                     fround@prec:	
   771                           
   772                           ; 1 bytes @ 0x31
   773  0051                     	ds	1
   774  0052                     ?_sprintf:	
   775  0052                     sprintf@f:	
   776                           ; 2 bytes @ 0x32
   777                           
   778                           
   779                           ; 1 bytes @ 0x32
   780  0052                     	ds	4
   781  0056                     ??_sprintf:	
   782                           
   783                           ; 0 bytes @ 0x36
   784  0056                     	ds	5
   785  005B                     ??_main:	
   786                           
   787                           ; 0 bytes @ 0x3B
   788  005B                     	ds	4
   789  005F                     main@buffer:	
   790                           
   791                           ; 11 bytes @ 0x3F
   792  005F                     	ds	11
   793  006A                     main@char_recibido:	
   794                           
   795                           ; 1 bytes @ 0x4A
   796  006A                     	ds	1
   797  006B                     main@i:	
   798                           
   799                           ; 2 bytes @ 0x4B
   800  006B                     	ds	2
   801  006D                     main@i_1825:	
   802                           
   803                           ; 2 bytes @ 0x4D
   804  006D                     	ds	2
   805  006F                     main@x:	
   806                           
   807                           ; 1 bytes @ 0x4F
   808  006F                     	ds	1
   809                           
   810                           	psect	maintext
   811  0E5D                     __pmaintext:	
   812 ;;Data sizes: Strings 13, constant 118, data 11, bss 5, persistent 0 stack 0
   813 ;;Auto spaces:   Size  Autos    Used
   814 ;; COMMON          14     14      14
   815 ;; BANK0           80     80      80
   816 ;; BANK1           80     23      39
   817 ;; BANK3           96      0       0
   818 ;; BANK2           96      0       0
   819 ;;
   820 ;; Pointer list with targets:
   821 ;; ?___ftpack	float  size(1) Largest target is 0
   822 ;;
   823 ;; ?___lldiv	unsigned long  size(1) Largest target is 0
   824 ;;
   825 ;; ?___llmod	unsigned long  size(1) Largest target is 0
   826 ;;
   827 ;; ?___ftsub	float  size(1) Largest target is 0
   828 ;;
   829 ;; ?___lltoft	float  size(1) Largest target is 0
   830 ;;
   831 ;; ?__tdiv_to_l_	unsigned long  size(1) Largest target is 0
   832 ;;
   833 ;; ?__div_to_l_	unsigned long  size(1) Largest target is 0
   834 ;;
   835 ;; ?___fttol	long  size(1) Largest target is 0
   836 ;;
   837 ;; ?___ftadd	float  size(1) Largest target is 0
   838 ;;
   839 ;; ?___ftneg	float  size(1) Largest target is 0
   840 ;;
   841 ;; ?___awmod	int  size(1) Largest target is 40
   842 ;;		 -> dpowers(CODE[40]), 
   843 ;;
   844 ;; ?___awdiv	int  size(1) Largest target is 0
   845 ;;
   846 ;; ?_scale	int  size(1) Largest target is 0
   847 ;;
   848 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   849 ;;
   850 ;; ?_fround	unsigned int  size(1) Largest target is 0
   851 ;;
   852 ;; ?___ftmul	float  size(1) Largest target is 0
   853 ;;
   854 ;; ?___awtoft	float  size(1) Largest target is 0
   855 ;;
   856 ;; sprintf@f	PTR const unsigned char  size(1) Largest target is 13
   857 ;;		 -> STR_1(CODE[13]), 
   858 ;;
   859 ;; sprintf@sp	PTR unsigned char  size(1) Largest target is 11
   860 ;;		 -> main@buffer(BANK0[11]), 
   861 ;;
   862 ;; ?_sprintf	int  size(1) Largest target is 0
   863 ;;
   864 ;; sprintf@ap	PTR void [1] size(1) Largest target is 2
   865 ;;		 -> ?_sprintf(BANK0[2]), 
   866 ;;
   867 ;; S1877$_cp	PTR const unsigned char  size(1) Largest target is 0
   868 ;;
   869 ;; _val._str._cp	PTR const unsigned char  size(1) Largest target is 0
   870 ;;
   871 ;; pa	PTR unsigned char  size(1) Largest target is 1
   872 ;;		 -> PORTA(BITSFR0[1]), 
   873 ;;
   874 ;;
   875 ;; Critical Paths under _main in COMMON
   876 ;;
   877 ;;   _sprintf->___awdiv
   878 ;;   _sprintf->__div_to_l_
   879 ;;   _sprintf->___llmod
   880 ;;   _lcd_goto->_lcd_write
   881 ;;   _lcd_putch->_lcd_write
   882 ;;   _lcd_clear->_lcd_write
   883 ;;   _scale->___awdiv
   884 ;;   _lcd_write->_pause
   885 ;;   ___lltoft->___ftpack
   886 ;;   ___awtoft->___ftpack
   887 ;;   ___ftmul->___awdiv
   888 ;;   ___llmod->___lldiv
   889 ;;   ___awdiv->___awmod
   890 ;;   ___fttol->___awdiv
   891 ;;   ___lbdiv->___lbmod
   892 ;;   ___bmul->___lbdiv
   893 ;;
   894 ;; Critical Paths under _main in BANK0
   895 ;;
   896 ;;   _main->_sprintf
   897 ;;   _sprintf->_fround
   898 ;;   ___ftsub->___ftadd
   899 ;;   _scale->___ftmul
   900 ;;   _fround->___ftadd
   901 ;;   ___ftmul->___fttol
   902 ;;   ___ftadd->___ftmul
   903 ;;
   904 ;; Critical Paths under _main in BANK1
   905 ;;
   906 ;;   _main->_sprintf
   907 ;;
   908 ;; Critical Paths under _main in BANK3
   909 ;;
   910 ;;   None.
   911 ;;
   912 ;; Critical Paths under _main in BANK2
   913 ;;
   914 ;;   None.
   915 ;;
   916 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   917 ;;
   918 ;;
   919 ;;Call Graph Tables:
   920 ;;
   921 ;; ---------------------------------------------------------------------------------
   922 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   923 ;; ---------------------------------------------------------------------------------
   924 ;; (0) _main                                                23    23      0   10923
   925 ;;                                             59 BANK0     21    21      0
   926 ;;                              _pause
   927 ;;                          _lcd_write
   928 ;;                          _lcd_clear
   929 ;;                              _putch
   930 ;;                           ___awtoft
   931 ;;                            ___ftmul
   932 ;;                            _sprintf
   933 ;;                              _getch
   934 ;;                           _lcd_goto
   935 ;;                          _lcd_putch
   936 ;; ---------------------------------------------------------------------------------
   937 ;; (1) _sprintf                                             38    34      4    9257
   938 ;;                                             50 BANK0      9     5      4
   939 ;;                                              0 BANK1     23    23      0
   940 ;;                             ___ftge
   941 ;;                            ___ftneg
   942 ;;                             ___wmul
   943 ;;                            ___awdiv
   944 ;;                              _scale
   945 ;;                            ___ftmul
   946 ;;                             _fround
   947 ;;                            ___ftadd
   948 ;;                            ___fttol
   949 ;;                         __div_to_l_
   950 ;;                        __tdiv_to_l_
   951 ;;                           ___lltoft
   952 ;;                            ___ftsub
   953 ;;                            ___lldiv
   954 ;;                            ___llmod
   955 ;; ---------------------------------------------------------------------------------
   956 ;; (1) _lcd_goto                                             1     1      0     112
   957 ;;                                              5 COMMON     1     1      0
   958 ;;                          _lcd_write
   959 ;; ---------------------------------------------------------------------------------
   960 ;; (1) _lcd_putch                                            1     1      0     112
   961 ;;                                              5 COMMON     1     1      0
   962 ;;                          _lcd_write
   963 ;; ---------------------------------------------------------------------------------
   964 ;; (1) _lcd_clear                                            0     0      0     136
   965 ;;                          _lcd_write
   966 ;;                              _pause
   967 ;; ---------------------------------------------------------------------------------
   968 ;; (2) ___ftsub                                              6     0      6    1094
   969 ;;                                             40 BANK0      6     0      6
   970 ;;                            ___ftadd
   971 ;;                           ___lltoft (ARG)
   972 ;; ---------------------------------------------------------------------------------
   973 ;; (2) _scale                                               14    11      3    1688
   974 ;;                                             28 BANK0     11     8      3
   975 ;;                            ___awmod
   976 ;;                            ___awdiv
   977 ;;                            ___ftmul
   978 ;;                             ___bmul
   979 ;;                            ___fttol (ARG)
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (2) _fround                                              13    10      3    1215
   982 ;;                                             40 BANK0     10     7      3
   983 ;;                            ___lbmod
   984 ;;                             ___bmul
   985 ;;                            ___lbdiv
   986 ;;                            ___ftmul
   987 ;;                            ___ftadd (ARG)
   988 ;; ---------------------------------------------------------------------------------
   989 ;; (2) _lcd_write                                            1     1      0      90
   990 ;;                                              4 COMMON     1     1      0
   991 ;;                              _pause
   992 ;; ---------------------------------------------------------------------------------
   993 ;; (2) ___lltoft                                             5     1      4     278
   994 ;;                                              8 COMMON     5     1      4
   995 ;;                           ___ftpack
   996 ;; ---------------------------------------------------------------------------------
   997 ;; (1) ___awtoft                                             4     1      3     300
   998 ;;                                              8 COMMON     4     1      3
   999 ;;                           ___ftpack
  1000 ;; ---------------------------------------------------------------------------------
  1001 ;; (3) ___ftmul                                             15     9      6     535
  1002 ;;                                             13 BANK0     15     9      6
  1003 ;;                           ___ftpack
  1004 ;;                           ___awtoft (ARG)
  1005 ;;                            ___fttol (ARG)
  1006 ;;                            ___awdiv (ARG)
  1007 ;;                            ___awmod (ARG)
  1008 ;;                             ___bmul (ARG)
  1009 ;;                            ___lbdiv (ARG)
  1010 ;;                            ___lbmod (ARG)
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (3) ___ftadd                                             12     6      6    1049
  1013 ;;                                             28 BANK0     12     6      6
  1014 ;;                           ___ftpack
  1015 ;;                            ___lbmod (ARG)
  1016 ;;                             ___bmul (ARG)
  1017 ;;                            ___lbdiv (ARG)
  1018 ;;                            ___ftmul (ARG)
  1019 ;; ---------------------------------------------------------------------------------
  1020 ;; (3) _pause                                                4     2      2      46
  1021 ;;                                              0 COMMON     4     2      2
  1022 ;;                           _msecbase
  1023 ;; ---------------------------------------------------------------------------------
  1024 ;; (3) ___awmod                                              6     2      4     296
  1025 ;;                                              0 COMMON     6     2      4
  1026 ;; ---------------------------------------------------------------------------------
  1027 ;; (2) ___lldiv                                             13     5      8     162
  1028 ;;                                              0 COMMON    13     5      8
  1029 ;; ---------------------------------------------------------------------------------
  1030 ;; (2) ___ftge                                               6     0      6     136
  1031 ;;                                              0 COMMON     6     0      6
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (2) ___ftneg                                              3     0      3      45
  1034 ;;                                              0 COMMON     3     0      3
  1035 ;; ---------------------------------------------------------------------------------
  1036 ;; (2) ___llmod                                              9     1      8     159
  1037 ;;                                             13 COMMON     1     1      0
  1038 ;;                                              0 BANK0      8     0      8
  1039 ;;                            ___lldiv (ARG)
  1040 ;; ---------------------------------------------------------------------------------
  1041 ;; (3) ___awdiv                                              8     4      4     300
  1042 ;;                                              6 COMMON     8     4      4
  1043 ;;                            ___awmod (ARG)
  1044 ;; ---------------------------------------------------------------------------------
  1045 ;; (2) ___fttol                                             13     9      4     252
  1046 ;;                                              0 BANK0     13     9      4
  1047 ;;                           ___ftpack (ARG)
  1048 ;;                            ___awmod (ARG)
  1049 ;;                            ___awdiv (ARG)
  1050 ;;                             ___bmul (ARG)
  1051 ;; ---------------------------------------------------------------------------------
  1052 ;; (4) ___ftpack                                             8     3      5     209
  1053 ;;                                              0 COMMON     8     3      5
  1054 ;; ---------------------------------------------------------------------------------
  1055 ;; (3) ___lbmod                                              5     4      1     159
  1056 ;;                                              0 COMMON     5     4      1
  1057 ;; ---------------------------------------------------------------------------------
  1058 ;; (3) ___lbdiv                                              4     3      1     162
  1059 ;;                                              5 COMMON     4     3      1
  1060 ;;                            ___lbmod (ARG)
  1061 ;; ---------------------------------------------------------------------------------
  1062 ;; (2) ___wmul                                               6     2      4      92
  1063 ;;                                              0 COMMON     6     2      4
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (3) ___bmul                                               3     2      1      68
  1066 ;;                                              9 COMMON     3     2      1
  1067 ;;                            ___lbmod (ARG)
  1068 ;;                            ___lbdiv (ARG)
  1069 ;; ---------------------------------------------------------------------------------
  1070 ;; (2) __div_to_l_                                          20    14      6     446
  1071 ;;                                              0 COMMON    14     8      6
  1072 ;;                                              0 BANK0      6     6      0
  1073 ;; ---------------------------------------------------------------------------------
  1074 ;; (2) __tdiv_to_l_                                         15     9      6     303
  1075 ;;                                              0 COMMON     9     3      6
  1076 ;;                                              0 BANK0      6     6      0
  1077 ;; ---------------------------------------------------------------------------------
  1078 ;; (1) _getch                                                0     0      0       0
  1079 ;; ---------------------------------------------------------------------------------
  1080 ;; (1) _putch                                                1     1      0      22
  1081 ;;                                              0 COMMON     1     1      0
  1082 ;; ---------------------------------------------------------------------------------
  1083 ;; (4) _msecbase                                             0     0      0       0
  1084 ;; ---------------------------------------------------------------------------------
  1085 ;; Estimated maximum stack depth 4
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; Call Graph Graphs:
  1088 ;; _main (ROOT)
  1089 ;;   _pause
  1090 ;;     _msecbase
  1091 ;;   _lcd_write
  1092 ;;     _pause
  1093 ;;       _msecbase
  1094 ;;   _lcd_clear
  1095 ;;     _lcd_write
  1096 ;;       _pause
  1097 ;;         _msecbase
  1098 ;;     _pause
  1099 ;;       _msecbase
  1100 ;;   _putch
  1101 ;;   ___awtoft
  1102 ;;     ___ftpack
  1103 ;;   ___ftmul
  1104 ;;     ___ftpack
  1105 ;;     ___awtoft (ARG)
  1106 ;;       ___ftpack
  1107 ;;     ___fttol (ARG)
  1108 ;;       ___ftpack (ARG)
  1109 ;;       ___awmod (ARG)
  1110 ;;       ___awdiv (ARG)
  1111 ;;         ___awmod (ARG)
  1112 ;;       ___bmul (ARG)
  1113 ;;         ___lbmod (ARG)
  1114 ;;         ___lbdiv (ARG)
  1115 ;;           ___lbmod (ARG)
  1116 ;;     ___awdiv (ARG)
  1117 ;;       ___awmod (ARG)
  1118 ;;     ___awmod (ARG)
  1119 ;;     ___bmul (ARG)
  1120 ;;       ___lbmod (ARG)
  1121 ;;       ___lbdiv (ARG)
  1122 ;;         ___lbmod (ARG)
  1123 ;;     ___lbdiv (ARG)
  1124 ;;       ___lbmod (ARG)
  1125 ;;     ___lbmod (ARG)
  1126 ;;   _sprintf
  1127 ;;     ___ftge
  1128 ;;     ___ftneg
  1129 ;;     ___wmul
  1130 ;;     ___awdiv
  1131 ;;       ___awmod (ARG)
  1132 ;;     _scale
  1133 ;;       ___awmod
  1134 ;;       ___awdiv
  1135 ;;         ___awmod (ARG)
  1136 ;;       ___ftmul
  1137 ;;         ___ftpack
  1138 ;;         ___awtoft (ARG)
  1139 ;;           ___ftpack
  1140 ;;         ___fttol (ARG)
  1141 ;;           ___ftpack (ARG)
  1142 ;;           ___awmod (ARG)
  1143 ;;           ___awdiv (ARG)
  1144 ;;             ___awmod (ARG)
  1145 ;;           ___bmul (ARG)
  1146 ;;             ___lbmod (ARG)
  1147 ;;             ___lbdiv (ARG)
  1148 ;;               ___lbmod (ARG)
  1149 ;;         ___awdiv (ARG)
  1150 ;;           ___awmod (ARG)
  1151 ;;         ___awmod (ARG)
  1152 ;;         ___bmul (ARG)
  1153 ;;           ___lbmod (ARG)
  1154 ;;           ___lbdiv (ARG)
  1155 ;;             ___lbmod (ARG)
  1156 ;;         ___lbdiv (ARG)
  1157 ;;           ___lbmod (ARG)
  1158 ;;         ___lbmod (ARG)
  1159 ;;       ___bmul
  1160 ;;         ___lbmod (ARG)
  1161 ;;         ___lbdiv (ARG)
  1162 ;;           ___lbmod (ARG)
  1163 ;;       ___fttol (ARG)
  1164 ;;         ___ftpack (ARG)
  1165 ;;         ___awmod (ARG)
  1166 ;;         ___awdiv (ARG)
  1167 ;;           ___awmod (ARG)
  1168 ;;         ___bmul (ARG)
  1169 ;;           ___lbmod (ARG)
  1170 ;;           ___lbdiv (ARG)
  1171 ;;             ___lbmod (ARG)
  1172 ;;     ___ftmul
  1173 ;;       ___ftpack
  1174 ;;       ___awtoft (ARG)
  1175 ;;         ___ftpack
  1176 ;;       ___fttol (ARG)
  1177 ;;         ___ftpack (ARG)
  1178 ;;         ___awmod (ARG)
  1179 ;;         ___awdiv (ARG)
  1180 ;;           ___awmod (ARG)
  1181 ;;         ___bmul (ARG)
  1182 ;;           ___lbmod (ARG)
  1183 ;;           ___lbdiv (ARG)
  1184 ;;             ___lbmod (ARG)
  1185 ;;       ___awdiv (ARG)
  1186 ;;         ___awmod (ARG)
  1187 ;;       ___awmod (ARG)
  1188 ;;       ___bmul (ARG)
  1189 ;;         ___lbmod (ARG)
  1190 ;;         ___lbdiv (ARG)
  1191 ;;           ___lbmod (ARG)
  1192 ;;       ___lbdiv (ARG)
  1193 ;;         ___lbmod (ARG)
  1194 ;;       ___lbmod (ARG)
  1195 ;;     _fround
  1196 ;;       ___lbmod
  1197 ;;       ___bmul
  1198 ;;         ___lbmod (ARG)
  1199 ;;         ___lbdiv (ARG)
  1200 ;;           ___lbmod (ARG)
  1201 ;;       ___lbdiv
  1202 ;;         ___lbmod (ARG)
  1203 ;;       ___ftmul
  1204 ;;         ___ftpack
  1205 ;;         ___awtoft (ARG)
  1206 ;;           ___ftpack
  1207 ;;         ___fttol (ARG)
  1208 ;;           ___ftpack (ARG)
  1209 ;;           ___awmod (ARG)
  1210 ;;           ___awdiv (ARG)
  1211 ;;             ___awmod (ARG)
  1212 ;;           ___bmul (ARG)
  1213 ;;             ___lbmod (ARG)
  1214 ;;             ___lbdiv (ARG)
  1215 ;;               ___lbmod (ARG)
  1216 ;;         ___awdiv (ARG)
  1217 ;;           ___awmod (ARG)
  1218 ;;         ___awmod (ARG)
  1219 ;;         ___bmul (ARG)
  1220 ;;           ___lbmod (ARG)
  1221 ;;           ___lbdiv (ARG)
  1222 ;;             ___lbmod (ARG)
  1223 ;;         ___lbdiv (ARG)
  1224 ;;           ___lbmod (ARG)
  1225 ;;         ___lbmod (ARG)
  1226 ;;       ___ftadd (ARG)
  1227 ;;         ___ftpack
  1228 ;;         ___lbmod (ARG)
  1229 ;;         ___bmul (ARG)
  1230 ;;           ___lbmod (ARG)
  1231 ;;           ___lbdiv (ARG)
  1232 ;;             ___lbmod (ARG)
  1233 ;;         ___lbdiv (ARG)
  1234 ;;           ___lbmod (ARG)
  1235 ;;         ___ftmul (ARG)
  1236 ;;           ___ftpack
  1237 ;;           ___awtoft (ARG)
  1238 ;;             ___ftpack
  1239 ;;           ___fttol (ARG)
  1240 ;;             ___ftpack (ARG)
  1241 ;;             ___awmod (ARG)
  1242 ;;             ___awdiv (ARG)
  1243 ;;               ___awmod (ARG)
  1244 ;;             ___bmul (ARG)
  1245 ;;               ___lbmod (ARG)
  1246 ;;               ___lbdiv (ARG)
  1247 ;;                 ___lbmod (ARG)
  1248 ;;           ___awdiv (ARG)
  1249 ;;             ___awmod (ARG)
  1250 ;;           ___awmod (ARG)
  1251 ;;           ___bmul (ARG)
  1252 ;;             ___lbmod (ARG)
  1253 ;;             ___lbdiv (ARG)
  1254 ;;               ___lbmod (ARG)
  1255 ;;           ___lbdiv (ARG)
  1256 ;;             ___lbmod (ARG)
  1257 ;;           ___lbmod (ARG)
  1258 ;;     ___ftadd
  1259 ;;       ___ftpack
  1260 ;;       ___lbmod (ARG)
  1261 ;;       ___bmul (ARG)
  1262 ;;         ___lbmod (ARG)
  1263 ;;         ___lbdiv (ARG)
  1264 ;;           ___lbmod (ARG)
  1265 ;;       ___lbdiv (ARG)
  1266 ;;         ___lbmod (ARG)
  1267 ;;       ___ftmul (ARG)
  1268 ;;         ___ftpack
  1269 ;;         ___awtoft (ARG)
  1270 ;;           ___ftpack
  1271 ;;         ___fttol (ARG)
  1272 ;;           ___ftpack (ARG)
  1273 ;;           ___awmod (ARG)
  1274 ;;           ___awdiv (ARG)
  1275 ;;             ___awmod (ARG)
  1276 ;;           ___bmul (ARG)
  1277 ;;             ___lbmod (ARG)
  1278 ;;             ___lbdiv (ARG)
  1279 ;;               ___lbmod (ARG)
  1280 ;;         ___awdiv (ARG)
  1281 ;;           ___awmod (ARG)
  1282 ;;         ___awmod (ARG)
  1283 ;;         ___bmul (ARG)
  1284 ;;           ___lbmod (ARG)
  1285 ;;           ___lbdiv (ARG)
  1286 ;;             ___lbmod (ARG)
  1287 ;;         ___lbdiv (ARG)
  1288 ;;           ___lbmod (ARG)
  1289 ;;         ___lbmod (ARG)
  1290 ;;     ___fttol
  1291 ;;       ___ftpack (ARG)
  1292 ;;       ___awmod (ARG)
  1293 ;;       ___awdiv (ARG)
  1294 ;;         ___awmod (ARG)
  1295 ;;       ___bmul (ARG)
  1296 ;;         ___lbmod (ARG)
  1297 ;;         ___lbdiv (ARG)
  1298 ;;           ___lbmod (ARG)
  1299 ;;     __div_to_l_
  1300 ;;     __tdiv_to_l_
  1301 ;;     ___lltoft
  1302 ;;       ___ftpack
  1303 ;;     ___ftsub
  1304 ;;       ___ftadd
  1305 ;;         ___ftpack
  1306 ;;         ___lbmod (ARG)
  1307 ;;         ___bmul (ARG)
  1308 ;;           ___lbmod (ARG)
  1309 ;;           ___lbdiv (ARG)
  1310 ;;             ___lbmod (ARG)
  1311 ;;         ___lbdiv (ARG)
  1312 ;;           ___lbmod (ARG)
  1313 ;;         ___ftmul (ARG)
  1314 ;;           ___ftpack
  1315 ;;           ___awtoft (ARG)
  1316 ;;             ___ftpack
  1317 ;;           ___fttol (ARG)
  1318 ;;             ___ftpack (ARG)
  1319 ;;             ___awmod (ARG)
  1320 ;;             ___awdiv (ARG)
  1321 ;;               ___awmod (ARG)
  1322 ;;             ___bmul (ARG)
  1323 ;;               ___lbmod (ARG)
  1324 ;;               ___lbdiv (ARG)
  1325 ;;                 ___lbmod (ARG)
  1326 ;;           ___awdiv (ARG)
  1327 ;;             ___awmod (ARG)
  1328 ;;           ___awmod (ARG)
  1329 ;;           ___bmul (ARG)
  1330 ;;             ___lbmod (ARG)
  1331 ;;             ___lbdiv (ARG)
  1332 ;;               ___lbmod (ARG)
  1333 ;;           ___lbdiv (ARG)
  1334 ;;             ___lbmod (ARG)
  1335 ;;           ___lbmod (ARG)
  1336 ;;       ___lltoft (ARG)
  1337 ;;         ___ftpack
  1338 ;;     ___lldiv
  1339 ;;     ___llmod
  1340 ;;       ___lldiv (ARG)
  1341 ;;   _getch
  1342 ;;   _lcd_goto
  1343 ;;     _lcd_write
  1344 ;;       _pause
  1345 ;;         _msecbase
  1346 ;;   _lcd_putch
  1347 ;;     _lcd_write
  1348 ;;       _pause
  1349 ;;         _msecbase
  1350 ;;
  1351 ;; Address spaces:
  1352 ;;Name               Size   Autos  Total    Cost      Usage
  1353 ;;BANK3               60      0       0       9        0.0%
  1354 ;;BITBANK3            60      0       0       8        0.0%
  1355 ;;SFR3                 0      0       0       4        0.0%
  1356 ;;BITSFR3              0      0       0       4        0.0%
  1357 ;;BANK2               60      0       0      11        0.0%
  1358 ;;BITBANK2            60      0       0      10        0.0%
  1359 ;;SFR2                 0      0       0       5        0.0%
  1360 ;;BITSFR2              0      0       0       5        0.0%
  1361 ;;SFR1                 0      0       0       2        0.0%
  1362 ;;BITSFR1              0      0       0       2        0.0%
  1363 ;;BANK1               50     17      27       7       48.8%
  1364 ;;BITBANK1            50      0       0       6        0.0%
  1365 ;;CODE                 0      0       0       0        0.0%
  1366 ;;DATA                 0      0      89      12        0.0%
  1367 ;;ABS                  0      0      85       3        0.0%
  1368 ;;NULL                 0      0       0       0        0.0%
  1369 ;;STACK                0      0       4       2        0.0%
  1370 ;;BANK0               50     50      50       5      100.0%
  1371 ;;BITBANK0            50      0       0       4        0.0%
  1372 ;;SFR0                 0      0       0       1        0.0%
  1373 ;;BITSFR0              0      0       0       1        0.0%
  1374 ;;COMMON               E      E       E       1      100.0%
  1375 ;;BITCOMMON            E      0       0       0        0.0%
  1376 ;;EEDATA             100      0       0       0        0.0%
  1377                           
  1378                           
  1379 ;; *************** function _main *****************
  1380 ;; Defined at:
  1381 ;;		line 104 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  x               1   79[BANK0 ] unsigned char 
  1386 ;;  i               2   77[BANK0 ] int 
  1387 ;;  i               2   75[BANK0 ] int 
  1388 ;;  buffer         11   63[BANK0 ] unsigned char [11]
  1389 ;;  char_recibid    1   74[BANK0 ] unsigned char 
  1390 ;;  pos             1    0        unsigned char 
  1391 ;;  char_pwm        1    0        unsigned char 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;		None               void
  1394 ;; Registers used:
  1395 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 17F/0
  1398 ;;		On exit  : 160/0
  1399 ;;		Unchanged: FFE00/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1401 ;;      Params:         0       0       0       0       0
  1402 ;;      Locals:         0      17       0       0       0
  1403 ;;      Temps:          0       4       0       0       0
  1404 ;;      Totals:         0      21       0       0       0
  1405 ;;Total ram usage:       21 bytes
  1406 ;; Hardware stack levels required when called:    4
  1407 ;; This function calls:
  1408 ;;		_pause
  1409 ;;		_lcd_write
  1410 ;;		_lcd_clear
  1411 ;;		_putch
  1412 ;;		___awtoft
  1413 ;;		___ftmul
  1414 ;;		_sprintf
  1415 ;;		_getch
  1416 ;;		_lcd_goto
  1417 ;;		_lcd_putch
  1418 ;; This function is called by:
  1419 ;;		Startup code after reset
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422  0E5D                     _main:	
  1423                           
  1424                           ;C_PuertoSerial_usart.c: 105: ANSEL=0x00;
  1425                           
  1426                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1427  0E5D  1683               	bsf	3,5	;RP0=1, select bank3
  1428  0E5E  1703               	bsf	3,6	;RP1=1, select bank3
  1429  0E5F  0188               	clrf	8	;volatile
  1430                           
  1431                           ;C_PuertoSerial_usart.c: 106: ANSELH=0x00;
  1432  0E60  0189               	clrf	9	;volatile
  1433                           
  1434                           ;C_PuertoSerial_usart.c: 107: INTCON=0x00;
  1435  0E61  018B               	clrf	11	;volatile
  1436                           
  1437                           ;C_PuertoSerial_usart.c: 108: TRISA = 0x00;
  1438  0E62  1303               	bcf	3,6	;RP1=0, select bank1
  1439  0E63  0185               	clrf	5	;volatile
  1440                           
  1441                           ;C_PuertoSerial_usart.c: 109: TRISB = 0x00;
  1442  0E64  0186               	clrf	6	;volatile
  1443                           
  1444                           ;C_PuertoSerial_usart.c: 110: TRISD = 0x00;
  1445  0E65  0188               	clrf	8	;volatile
  1446                           
  1447                           ;C_PuertoSerial_usart.c: 113: TRISE=0x03;
  1448  0E66  3003               	movlw	3
  1449  0E67  0089               	movwf	9	;volatile
  1450                           
  1451                           ;C_PuertoSerial_usart.c: 114: ADCON1=0b00000000;
  1452  0E68  019F               	clrf	31	;volatile
  1453                           
  1454                           ;C_PuertoSerial_usart.c: 115: PR2=0xFF;
  1455  0E69  30FF               	movlw	255
  1456  0E6A  0092               	movwf	18	;volatile
  1457                           
  1458                           ;C_PuertoSerial_usart.c: 117: CCP1CON = 0xC0;
  1459  0E6B  30C0               	movlw	192
  1460  0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  1461  0E6D  0097               	movwf	23	;volatile
  1462                           
  1463                           ;C_PuertoSerial_usart.c: 118: CCP2CON = 0xC0;
  1464  0E6E  009D               	movwf	29	;volatile
  1465  0E6F  3003               	movlw	3
  1466                           
  1467                           ;C_PuertoSerial_usart.c: 119: T2CKPS1 = 1;
  1468  0E70  1492               	bsf	18,1
  1469                           
  1470                           ;C_PuertoSerial_usart.c: 120: T2CKPS0 = 1;
  1471  0E71  1412               	bsf	18,0
  1472                           
  1473                           ;C_PuertoSerial_usart.c: 121: TMR2ON = 1;
  1474  0E72  1512               	bsf	18,2
  1475                           
  1476                           ;C_PuertoSerial_usart.c: 124: RA7=0;
  1477  0E73  1385               	bcf	5,7
  1478                           
  1479                           ;C_PuertoSerial_usart.c: 125: RA6=0;
  1480  0E74  1305               	bcf	5,6
  1481  0E75  1089               	bcf	9,1
  1482                           
  1483                           ;C_PuertoSerial_usart.c: 128: PORTD=init_value;
  1484  0E76  0088               	movwf	8	;volatile
  1485  0E77  300A               	movlw	10
  1486                           
  1487                           ;C_PuertoSerial_usart.c: 129: ((RA6=1),(RA6=0));
  1488  0E78  1705               	bsf	5,6
  1489  0E79  1305               	bcf	5,6
  1490                           
  1491                           ;C_PuertoSerial_usart.c: 130: pause(10);
  1492  0E7A  00F0               	movwf	?_pause
  1493  0E7B  01F1               	clrf	?_pause+1
  1494  0E7C  120A  158A  22DD   	fcall	_pause
      +       120A  158A         
  1495                           
  1496                           ;C_PuertoSerial_usart.c: 131: ((RA6=1),(RA6=0));
  1497  0E81  1283               	bcf	3,5	;RP0=0, select bank0
  1498  0E82  1303               	bcf	3,6	;RP1=0, select bank0
  1499  0E83  300A               	movlw	10
  1500  0E84  1705               	bsf	5,6
  1501  0E85  1305               	bcf	5,6
  1502                           
  1503                           ;C_PuertoSerial_usart.c: 132: pause(10);
  1504  0E86  00F0               	movwf	?_pause
  1505  0E87  01F1               	clrf	?_pause+1
  1506  0E88  120A  158A  22DD   	fcall	_pause
      +       120A  158A         
  1507                           
  1508                           ;C_PuertoSerial_usart.c: 133: ((RA6=1),(RA6=0));
  1509  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0E8F  300A               	movlw	10
  1512  0E90  1705               	bsf	5,6
  1513  0E91  1305               	bcf	5,6
  1514                           
  1515                           ;C_PuertoSerial_usart.c: 134: pause(10);
  1516  0E92  00F0               	movwf	?_pause
  1517  0E93  01F1               	clrf	?_pause+1
  1518  0E94  120A  158A  22DD   	fcall	_pause
      +       120A  158A         
  1519                           
  1520                           ;C_PuertoSerial_usart.c: 135: PORTD=2;
  1521  0E99  3002               	movlw	2
  1522  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0E9C  0088               	movwf	8	;volatile
  1525  0E9D  3028               	movlw	40
  1526                           
  1527                           ;C_PuertoSerial_usart.c: 136: ((RA6=1),(RA6=0));
  1528  0E9E  1705               	bsf	5,6
  1529  0E9F  1305               	bcf	5,6
  1530                           
  1531                           ;C_PuertoSerial_usart.c: 138: lcd_write(0x28);
  1532  0EA0  120A  158A  22CB   	fcall	_lcd_write
      +       120A  158A         
  1533                           
  1534                           ;C_PuertoSerial_usart.c: 139: lcd_write(0xC);
  1535  0EA5  300C               	movlw	12
  1536  0EA6  120A  158A  22CB   	fcall	_lcd_write
      +       120A  158A         
  1537                           
  1538                           ;C_PuertoSerial_usart.c: 140: lcd_clear();
  1539  0EAB  120A  158A  22C2   	fcall	_lcd_clear
      +       120A  158A         
  1540                           
  1541                           ;C_PuertoSerial_usart.c: 141: lcd_write(0x06);
  1542  0EB0  3006               	movlw	6
  1543  0EB1  120A  158A  22CB   	fcall	_lcd_write
      +       120A  158A         
  1544                           
  1545                           ;C_PuertoSerial_usart.c: 143: TRISC7=1;
  1546  0EB6  1683               	bsf	3,5	;RP0=1, select bank1
  1547  0EB7  3070               	movlw	112
  1548  0EB8  1787               	bsf	7,7
  1549                           
  1550                           ;C_PuertoSerial_usart.c: 144: TRISC6=0;
  1551  0EB9  1307               	bcf	7,6
  1552                           
  1553                           ;C_PuertoSerial_usart.c: 145: OSCCON=0x70;
  1554  0EBA  008F               	movwf	15	;volatile
  1555                           
  1556                           ;C_PuertoSerial_usart.c: 146: SPBRG=12;
  1557  0EBB  300C               	movlw	12
  1558  0EBC  0099               	movwf	25	;volatile
  1559                           
  1560                           ;C_PuertoSerial_usart.c: 147: RCSTA=0x90;
  1561  0EBD  3090               	movlw	144
  1562  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0EBF  0098               	movwf	24	;volatile
  1564                           
  1565                           ;C_PuertoSerial_usart.c: 148: TXSTA=0x20;
  1566  0EC0  3020               	movlw	32
  1567  0EC1  1683               	bsf	3,5	;RP0=1, select bank1
  1568  0EC2  0098               	movwf	24	;volatile
  1569                           
  1570                           ;C_PuertoSerial_usart.c: 149: BAUDCTL=0x00;
  1571  0EC3  1703               	bsf	3,6	;RP1=1, select bank3
  1572  0EC4  0187               	clrf	7	;volatile
  1573                           
  1574                           ;C_PuertoSerial_usart.c: 150: pause(500);
  1575  0EC5  30F4               	movlw	244
  1576  0EC6  00F0               	movwf	?_pause
  1577  0EC7  3001               	movlw	1
  1578  0EC8  00F1               	movwf	?_pause+1
  1579  0EC9  120A  158A  22DD   	fcall	_pause
      +       120A  158A         
  1580                           
  1581                           ;C_PuertoSerial_usart.c: 151: PORTA=0x01;
  1582  0ECE  3001               	movlw	1
  1583  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  1585  0ED1  0085               	movwf	5	;volatile
  1586                           
  1587                           ;C_PuertoSerial_usart.c: 152: *pa=0xFF;
  1588  0ED2  30FF               	movlw	255
  1589  0ED3  0085               	movwf	5
  1590                           
  1591                           ;C_PuertoSerial_usart.c: 159: unsigned char pos=0;
  1592  0ED4  305F               	movlw	main@buffer& (0+255)
  1593  0ED5  0084               	movwf	4
  1594  0ED6  30B7               	movlw	low main@F1732
  1595  0ED7  00DB               	movwf	??_main
  1596  0ED8  0804               	movf	4,w
  1597  0ED9  00DC               	movwf	??_main+1
  1598  0EDA  300B               	movlw	11
  1599  0EDB  00DD               	movwf	??_main+2
  1600  0EDC                     u2770:	
  1601  0EDC  085B               	movf	??_main,w
  1602  0EDD  0084               	movwf	4
  1603  0EDE  1383               	bcf	3,7	;select IRP bank1
  1604  0EDF  0800               	movf	0,w
  1605  0EE0  00DE               	movwf	??_main+3
  1606  0EE1  0ADB               	incf	??_main,f
  1607  0EE2  085C               	movf	??_main+1,w
  1608  0EE3  0084               	movwf	4
  1609  0EE4  085E               	movf	??_main+3,w
  1610  0EE5  0080               	movwf	0
  1611  0EE6  0ADC               	incf	??_main+1,f
  1612  0EE7  0BDD               	decfsz	??_main+2,f
  1613  0EE8  2EDC               	goto	u2770
  1614                           
  1615                           ;C_PuertoSerial_usart.c: 160: for(int i=48; i<58; i++){
  1616  0EE9  3030               	movlw	48
  1617  0EEA  00EB               	movwf	main@i
  1618  0EEB  01EC               	clrf	main@i+1
  1619  0EEC                     l5485:	
  1620                           
  1621                           ;C_PuertoSerial_usart.c: 161: putch(i);
  1622  0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0EED  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0EEE  086B               	movf	main@i,w
  1625  0EEF  120A  118A  2006   	fcall	_putch
      +       120A  158A         
  1626                           
  1627                           ;C_PuertoSerial_usart.c: 162: pause(20);
  1628  0EF4  3014               	movlw	20
  1629  0EF5  00F0               	movwf	?_pause
  1630  0EF6  01F1               	clrf	?_pause+1
  1631  0EF7  120A  158A  22DD   	fcall	_pause
      +       120A  158A         
  1632  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  1633  0EFD  1303               	bcf	3,6	;RP1=0, select bank0
  1634  0EFE  0AEB               	incf	main@i,f
  1635  0EFF  1903               	skipnz
  1636  0F00  0AEC               	incf	main@i+1,f
  1637  0F01  086C               	movf	main@i+1,w
  1638  0F02  3A80               	xorlw	128
  1639  0F03  00FF               	movwf	127
  1640  0F04  3080               	movlw	128
  1641  0F05  027F               	subwf	127,w
  1642  0F06  1D03               	skipz
  1643  0F07  2F0A               	goto	u2785
  1644  0F08  303A               	movlw	58
  1645  0F09  026B               	subwf	main@i,w
  1646  0F0A                     u2785:	
  1647  0F0A  1C03               	skipc
  1648  0F0B  2EEC               	goto	l5485
  1649                           
  1650                           ;C_PuertoSerial_usart.c: 163: }
  1651                           ;C_PuertoSerial_usart.c: 164: putch(0x0D);
  1652  0F0C  300D               	movlw	13
  1653  0F0D  120A  118A  2006   	fcall	_putch
      +       120A  158A         
  1654                           
  1655                           ;C_PuertoSerial_usart.c: 165: putch(0x0A);
  1656  0F12  300A               	movlw	10
  1657  0F13  120A  118A  2006   	fcall	_putch
      +       120A  158A         
  1658                           
  1659                           ;C_PuertoSerial_usart.c: 167: for(int i=97; i<123; i++){
  1660  0F18  3061               	movlw	97
  1661  0F19  00ED               	movwf	main@i_1825
  1662  0F1A  01EE               	clrf	main@i_1825+1
  1663  0F1B                     l5499:	
  1664                           
  1665                           ;C_PuertoSerial_usart.c: 168: putch(i);
  1666  0F1B  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0F1C  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0F1D  086D               	movf	main@i_1825,w
  1669  0F1E  120A  118A  2006   	fcall	_putch
      +       120A  158A         
  1670                           
  1671                           ;C_PuertoSerial_usart.c: 169: pause(20);
  1672  0F23  3014               	movlw	20
  1673  0F24  00F0               	movwf	?_pause
  1674  0F25  01F1               	clrf	?_pause+1
  1675  0F26  120A  158A  22DD   	fcall	_pause
      +       120A  158A         
  1676  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  1677  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  1678  0F2D  0AED               	incf	main@i_1825,f
  1679  0F2E  1903               	skipnz
  1680  0F2F  0AEE               	incf	main@i_1825+1,f
  1681  0F30  086E               	movf	main@i_1825+1,w
  1682  0F31  3A80               	xorlw	128
  1683  0F32  00FF               	movwf	127
  1684  0F33  3080               	movlw	128
  1685  0F34  027F               	subwf	127,w
  1686  0F35  1D03               	skipz
  1687  0F36  2F39               	goto	u2795
  1688  0F37  307B               	movlw	123
  1689  0F38  026D               	subwf	main@i_1825,w
  1690  0F39                     u2795:	
  1691  0F39  1C03               	skipc
  1692  0F3A  2F1B               	goto	l5499
  1693                           
  1694                           ;C_PuertoSerial_usart.c: 170: }
  1695                           ;C_PuertoSerial_usart.c: 171: putch(0x0D);
  1696  0F3B  300D               	movlw	13
  1697  0F3C  120A  118A  2006   	fcall	_putch
      +       120A  158A         
  1698                           
  1699                           ;C_PuertoSerial_usart.c: 172: putch(0x0A);
  1700  0F41  300A               	movlw	10
  1701  0F42  120A  118A  2006   	fcall	_putch
      +       120A  158A         
  1702                           
  1703                           ;C_PuertoSerial_usart.c: 173: PORTA=0x00;
  1704  0F47  0185               	clrf	5	;volatile
  1705                           
  1706                           ;C_PuertoSerial_usart.c: 174: pause(1000);
  1707  0F48  30E8               	movlw	232
  1708  0F49  00F0               	movwf	?_pause
  1709  0F4A  3003               	movlw	3
  1710  0F4B  00F1               	movwf	?_pause+1
  1711  0F4C  120A  158A  22DD   	fcall	_pause
      +       120A  158A         
  1712  0F51                     l5511:	
  1713                           
  1714                           ;C_PuertoSerial_usart.c: 182: ADCON0=0b11010101;
  1715  0F51  30D5               	movlw	213
  1716  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  1717  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  1718  0F54  009F               	movwf	31	;volatile
  1719                           
  1720                           ;C_PuertoSerial_usart.c: 183: GO_DONE = 1;
  1721  0F55  149F               	bsf	31,1
  1722  0F56                     l1092:	
  1723                           ;C_PuertoSerial_usart.c: 184: while (GO_DONE ==1);
  1724                           
  1725  0F56  189F               	btfsc	31,1
  1726  0F57  2F56               	goto	l1092
  1727                           
  1728                           ;C_PuertoSerial_usart.c: 185: nin=(ADRESH<<2)|(ADRESL>>6);
  1729  0F58  081E               	movf	30,w	;volatile
  1730  0F59  1683               	bsf	3,5	;RP0=1, select bank1
  1731  0F5A  00C5               	movwf	_nin^(0+128)
  1732  0F5B  01C6               	clrf	(_nin+1)^(0+128)
  1733  0F5C  1003               	clrc
  1734  0F5D  0DC5               	rlf	_nin^(0+128),f
  1735  0F5E  0DC6               	rlf	(_nin+1)^(0+128),f
  1736  0F5F  1003               	clrc
  1737  0F60  0DC5               	rlf	_nin^(0+128),f
  1738  0F61  0DC6               	rlf	(_nin+1)^(0+128),f
  1739  0F62  081E               	movf	30,w	;volatile
  1740  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  1741  0F64  00DB               	movwf	??_main
  1742  0F65  3006               	movlw	6
  1743  0F66                     u2815:	
  1744  0F66  1003               	clrc
  1745  0F67  0CDB               	rrf	??_main,f
  1746  0F68  3EFF               	addlw	-1
  1747  0F69  1D03               	skipz
  1748  0F6A  2F66               	goto	u2815
  1749  0F6B  085B               	movf	??_main,w
  1750  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  1751  0F6D  04C5               	iorwf	_nin^(0+128),f
  1752                           
  1753                           ;C_PuertoSerial_usart.c: 186: CCPR1L=ADRESH;
  1754  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  1755  0F6F  081E               	movf	30,w	;volatile
  1756  0F70  0095               	movwf	21	;volatile
  1757                           
  1758                           ;C_PuertoSerial_usart.c: 187: num= num1*nin;
  1759  0F71  3028               	movlw	40
  1760  0F72  00AD               	movwf	?___ftmul
  1761  0F73  30A0               	movlw	160
  1762  0F74  00AE               	movwf	?___ftmul+1
  1763  0F75  303B               	movlw	59
  1764  0F76  00AF               	movwf	?___ftmul+2
  1765  0F77  1683               	bsf	3,5	;RP0=1, select bank1
  1766  0F78  0846               	movf	(_nin+1)^(0+128),w
  1767  0F79  00F9               	movwf	?___awtoft+1
  1768  0F7A  0845               	movf	_nin^(0+128),w
  1769  0F7B  00F8               	movwf	?___awtoft
  1770  0F7C  120A  158A  225F   	fcall	___awtoft
      +       120A  158A         
  1771  0F81  0878               	movf	?___awtoft,w
  1772  0F82  1283               	bcf	3,5	;RP0=0, select bank0
  1773  0F83  00B0               	movwf	?___ftmul+3
  1774  0F84  0879               	movf	?___awtoft+1,w
  1775  0F85  00B1               	movwf	?___ftmul+4
  1776  0F86  087A               	movf	?___awtoft+2,w
  1777  0F87  00B2               	movwf	?___ftmul+5
  1778  0F88  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  1779  0F8D  082D               	movf	?___ftmul,w
  1780  0F8E  1683               	bsf	3,5	;RP0=1, select bank1
  1781  0F8F  00C2               	movwf	_num^(0+128)
  1782  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0F91  082E               	movf	?___ftmul+1,w
  1784  0F92  1683               	bsf	3,5	;RP0=1, select bank1
  1785  0F93  00C3               	movwf	(_num+1)^(0+128)
  1786  0F94  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0F95  082F               	movf	?___ftmul+2,w
  1788  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  1789  0F97  00C4               	movwf	(_num+2)^(0+128)
  1790                           
  1791                           ;C_PuertoSerial_usart.c: 189: sprintf(buffer,"Valor es: %f",num);
  1792  0F98  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1793  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0F9A  00D2               	movwf	?_sprintf
  1795  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  1796  0F9C  0842               	movf	_num^(0+128),w
  1797  0F9D  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0F9E  00D3               	movwf	?_sprintf+1
  1799  0F9F  1683               	bsf	3,5	;RP0=1, select bank1
  1800  0FA0  0843               	movf	(_num+1)^(0+128),w
  1801  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0FA2  00D4               	movwf	?_sprintf+2
  1803  0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  1804  0FA4  0844               	movf	(_num+2)^(0+128),w
  1805  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  1806  0FA6  00D5               	movwf	?_sprintf+3
  1807  0FA7  305F               	movlw	main@buffer& (0+255)
  1808  0FA8  120A  118A  200E   	fcall	_sprintf
      +       120A  158A         
  1809                           
  1810                           ;C_PuertoSerial_usart.c: 192: char_recibido = getch();
  1811  0FAD  120A  158A  225A   	fcall	_getch
      +       120A  158A         
  1812  0FB2  00EA               	movwf	main@char_recibido
  1813                           
  1814                           ;C_PuertoSerial_usart.c: 194: putch(char_recibido);
  1815  0FB3  086A               	movf	main@char_recibido,w
  1816  0FB4  120A  118A  2006   	fcall	_putch
      +       120A  158A         
  1817                           
  1818                           ;C_PuertoSerial_usart.c: 195: putch(0x0D);
  1819  0FB9  300D               	movlw	13
  1820  0FBA  120A  118A  2006   	fcall	_putch
      +       120A  158A         
  1821                           
  1822                           ;C_PuertoSerial_usart.c: 196: putch(0x0A);
  1823  0FBF  300A               	movlw	10
  1824  0FC0  120A  118A  2006   	fcall	_putch
      +       120A  158A         
  1825                           
  1826                           ;C_PuertoSerial_usart.c: 198: lcd_goto(0);
  1827  0FC5  3000               	movlw	0
  1828  0FC6  120A  158A  22BE   	fcall	_lcd_goto
      +       120A  158A         
  1829                           
  1830                           ;C_PuertoSerial_usart.c: 199: lcd_putch(char_recibido);
  1831  0FCB  086A               	movf	main@char_recibido,w
  1832  0FCC  120A  158A  22BB   	fcall	_lcd_putch
      +       120A  158A         
  1833                           
  1834                           ;C_PuertoSerial_usart.c: 200: pause(500);
  1835  0FD1  30F4               	movlw	244
  1836  0FD2  00F0               	movwf	?_pause
  1837  0FD3  3001               	movlw	1
  1838  0FD4  00F1               	movwf	?_pause+1
  1839  0FD5  120A  158A  22DD   	fcall	_pause
      +       120A  158A         
  1840                           
  1841                           ;C_PuertoSerial_usart.c: 220: for (char x = 0; x<17; x++)
  1842  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  1843  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  1844  0FDC  01EF               	clrf	main@x
  1845  0FDD                     l5545:	
  1846                           
  1847                           ;C_PuertoSerial_usart.c: 221: {
  1848                           ;C_PuertoSerial_usart.c: 222: putch (buffer[x]);
  1849  0FDD  086F               	movf	main@x,w
  1850  0FDE  3E5F               	addlw	main@buffer& (0+255)
  1851  0FDF  0084               	movwf	4
  1852  0FE0  0800               	movf	0,w
  1853  0FE1  120A  118A  2006   	fcall	_putch
      +       120A  158A         
  1854  0FE6  3011               	movlw	17
  1855  0FE7  0AEF               	incf	main@x,f
  1856  0FE8  026F               	subwf	main@x,w
  1857  0FE9  1C03               	skipc
  1858  0FEA  2FDD               	goto	l5545
  1859                           
  1860                           ;C_PuertoSerial_usart.c: 223: }
  1861                           ;C_PuertoSerial_usart.c: 224: pause(200);
  1862  0FEB  30C8               	movlw	200
  1863  0FEC  00F0               	movwf	?_pause
  1864  0FED  01F1               	clrf	?_pause+1
  1865  0FEE  120A  158A  22DD   	fcall	_pause
      +       120A  158A         
  1866                           
  1867                           ;C_PuertoSerial_usart.c: 228: putch(0x0D);
  1868  0FF3  300D               	movlw	13
  1869  0FF4  120A  118A  2006   	fcall	_putch
      +       120A  158A         
  1870                           
  1871                           ;C_PuertoSerial_usart.c: 229: putch(0x0A);
  1872  0FF9  300A               	movlw	10
  1873  0FFA  120A  118A  2006   	fcall	_putch
      +       120A  158A         
  1874  0FFF  2F51               	goto	l5511
  1875  1000                     __end_of_main:	
  1876                           
  1877                           	psect	text514
  1878  000E                     __ptext514:	
  1879 ;; =============== function _main ends ============
  1880                           
  1881                           
  1882 ;; *************** function _sprintf *****************
  1883 ;; Defined at:
  1884 ;;		line 488 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  sp              1    wreg     PTR unsigned char 
  1887 ;;		 -> main@buffer(11), 
  1888 ;;  f               1   50[BANK0 ] PTR const unsigned char 
  1889 ;;		 -> STR_1(13), 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  sp              1   16[BANK1 ] PTR unsigned char 
  1892 ;;		 -> main@buffer(11), 
  1893 ;;  _val            4    9[BANK1 ] struct .
  1894 ;;  fval            3   19[BANK1 ] struct .
  1895 ;;  integ           3   13[BANK1 ] struct .
  1896 ;;  ival            3    0        struct .
  1897 ;;  exp             2   17[BANK1 ] int 
  1898 ;;  prec            2    7[BANK1 ] int 
  1899 ;;  flag            2    5[BANK1 ] unsigned short 
  1900 ;;  width           2    0        int 
  1901 ;;  c               1   22[BANK1 ] char 
  1902 ;;  ap              1    4[BANK1 ] PTR void [1]
  1903 ;;		 -> ?_sprintf(2), 
  1904 ;;  d               1    0        unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  2   50[BANK0 ] int 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 60/0
  1911 ;;		On exit  : 160/20
  1912 ;;		Unchanged: FFE00/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1914 ;;      Params:         0       4       0       0       0
  1915 ;;      Locals:         0       0      23       0       0
  1916 ;;      Temps:          0       5       0       0       0
  1917 ;;      Totals:         0       9      23       0       0
  1918 ;;Total ram usage:       32 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    3
  1921 ;; This function calls:
  1922 ;;		___ftge
  1923 ;;		___ftneg
  1924 ;;		___wmul
  1925 ;;		___awdiv
  1926 ;;		_scale
  1927 ;;		___ftmul
  1928 ;;		_fround
  1929 ;;		___ftadd
  1930 ;;		___fttol
  1931 ;;		__div_to_l_
  1932 ;;		__tdiv_to_l_
  1933 ;;		___lltoft
  1934 ;;		___ftsub
  1935 ;;		___lldiv
  1936 ;;		___llmod
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941  000E                     _sprintf:	
  1942                           
  1943                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1944                           ;sprintf@sp stored from wreg
  1945  000E  1683               	bsf	3,5	;RP0=1, select bank1
  1946  000F  00B0               	movwf	sprintf@sp^(0+128)
  1947  0010  3053               	movlw	(?_sprintf+1)& (0+255)
  1948  0011  00A4               	movwf	sprintf@ap^(0+128)
  1949  0012                     l5409:	
  1950  0012  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0013  0852               	movf	sprintf@f,w
  1952  0014  0AD2               	incf	sprintf@f,f
  1953  0015  0084               	movwf	4
  1954  0016  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1955  001B  1683               	bsf	3,5	;RP0=1, select bank1
  1956  001C  00B6               	movwf	sprintf@c^(0+128)
  1957  001D  08B6               	movf	sprintf@c^(0+128),f
  1958  001E  1903               	btfsc	3,2
  1959  001F  2B2C               	goto	l5411
  1960  0020  0836               	movf	sprintf@c^(0+128),w
  1961  0021  3A25               	xorlw	37
  1962  0022  1903               	skipnz
  1963  0023  2828               	goto	l5257
  1964  0024  0830               	movf	sprintf@sp^(0+128),w
  1965  0025  0084               	movwf	4
  1966  0026  0836               	movf	sprintf@c^(0+128),w
  1967  0027  2B28               	goto	L4
  1968  0028                     l5257:	
  1969  0028  01A5               	clrf	sprintf@flag^(0+128)
  1970  0029  01A6               	clrf	(sprintf@flag+1)^(0+128)
  1971  002A  282D               	goto	l5261
  1972  002B                     l1160:	
  1973  002B  1526               	bsf	(sprintf@flag^(0+128)+1),2
  1974  002C  283F               	goto	l5263
  1975  002D                     l5261:	
  1976  002D  1283               	bcf	3,5	;RP0=0, select bank0
  1977  002E  0852               	movf	sprintf@f,w
  1978  002F  0AD2               	incf	sprintf@f,f
  1979  0030  0084               	movwf	4
  1980  0031  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  1981  0036  1683               	bsf	3,5	;RP0=1, select bank1
  1982  0037  00B6               	movwf	sprintf@c^(0+128)
  1983                           
  1984                           ; Switch size 1, requested type "space"
  1985                           ; Number of cases is 2, Range of values is 0 to 102
  1986                           ; switch strategies available:
  1987                           ; Name         Instructions Cycles
  1988                           ; simple_byte            7     4 (average)
  1989                           ; jumptable            260     6 (fixed)
  1990                           ; rangetable           107     6 (fixed)
  1991                           ; spacedrange          212     9 (fixed)
  1992                           ; locatedrange         103     3 (fixed)
  1993                           ;	Chosen strategy is simple_byte
  1994  0038  3A00               	xorlw	0	; case 0
  1995  0039  1903               	skipnz
  1996  003A  2B2C               	goto	l5411
  1997  003B  3A66               	xorlw	102	; case 102
  1998  003C  1903               	skipnz
  1999  003D  282B               	goto	l1160
  2000  003E  2812               	goto	l5409
  2001  003F                     l5263:	
  2002  003F  1283               	bcf	3,5	;RP0=0, select bank0
  2003  0040  3007               	movlw	7
  2004  0041  01D6               	clrf	??_sprintf
  2005  0042  1683               	bsf	3,5	;RP0=1, select bank1
  2006  0043  0526               	andwf	(sprintf@flag+1)^(0+128),w
  2007  0044  1283               	bcf	3,5	;RP0=0, select bank0
  2008  0045  00D7               	movwf	??_sprintf+1
  2009  0046  0456               	iorwf	??_sprintf,w
  2010  0047  1903               	skipnz
  2011  0048  2B20               	goto	l5403
  2012  0049  3006               	movlw	6
  2013  004A  1683               	bsf	3,5	;RP0=1, select bank1
  2014  004B  00A7               	movwf	sprintf@prec^(0+128)
  2015  004C  01A8               	clrf	(sprintf@prec+1)^(0+128)
  2016  004D  0824               	movf	sprintf@ap^(0+128),w
  2017  004E  0084               	movwf	4
  2018  004F  1383               	bcf	3,7	;select IRP bank0
  2019  0050  0800               	movf	0,w
  2020  0051  00B3               	movwf	sprintf@fval^(0+128)
  2021  0052  0A84               	incf	4,f
  2022  0053  0800               	movf	0,w
  2023  0054  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2024  0055  0A84               	incf	4,f
  2025  0056  0800               	movf	0,w
  2026  0057  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2027  0058  3003               	movlw	3
  2028  0059  07A4               	addwf	sprintf@ap^(0+128),f
  2029  005A  0833               	movf	sprintf@fval^(0+128),w
  2030  005B  00F0               	movwf	?___ftge
  2031  005C  0834               	movf	(sprintf@fval+1)^(0+128),w
  2032  005D  00F1               	movwf	?___ftge+1
  2033  005E  0835               	movf	(sprintf@fval+2)^(0+128),w
  2034  005F  00F2               	movwf	?___ftge+2
  2035  0060  01F3               	clrf	?___ftge+3
  2036  0061  01F4               	clrf	?___ftge+4
  2037  0062  01F5               	clrf	?___ftge+5
  2038  0063  2600  120A  118A   	fcall	___ftge
  2039  0066  1803               	btfsc	3,0
  2040  0067  2879               	goto	l5277
  2041  0068  0833               	movf	sprintf@fval^(0+128),w
  2042  0069  00F0               	movwf	?___ftneg
  2043  006A  0834               	movf	(sprintf@fval+1)^(0+128),w
  2044  006B  00F1               	movwf	?___ftneg+1
  2045  006C  0835               	movf	(sprintf@fval+2)^(0+128),w
  2046  006D  00F2               	movwf	?___ftneg+2
  2047  006E  27F8  120A  118A   	fcall	___ftneg
  2048  0071  0870               	movf	?___ftneg,w
  2049  0072  00B3               	movwf	sprintf@fval^(0+128)
  2050  0073  0871               	movf	?___ftneg+1,w
  2051  0074  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2052  0075  0872               	movf	?___ftneg+2,w
  2053  0076  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2054  0077  3003               	movlw	3
  2055  0078  04A5               	iorwf	sprintf@flag^(0+128),f
  2056  0079                     l5277:	
  2057  0079  01B1               	clrf	sprintf@exp^(0+128)
  2058  007A  01B2               	clrf	(sprintf@exp+1)^(0+128)
  2059  007B  0835               	movf	(sprintf@fval+2)^(0+128),w
  2060  007C  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2061  007D  0433               	iorwf	sprintf@fval^(0+128),w
  2062  007E  1903               	skipnz
  2063  007F  2910               	goto	l5311
  2064  0080  30B3               	movlw	low sprintf@fval
  2065  0081  0084               	movwf	4
  2066  0082  0800               	movf	0,w
  2067  0083  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0084  00D6               	movwf	??_sprintf
  2069  0085  0A84               	incf	4,f
  2070  0086  0800               	movf	0,w
  2071  0087  00D7               	movwf	??_sprintf+1
  2072  0088  0A84               	incf	4,f
  2073  0089  0800               	movf	0,w
  2074  008A  00D8               	movwf	??_sprintf+2
  2075  008B  0A84               	incf	4,f
  2076  008C  0800               	movf	0,w
  2077  008D  00D9               	movwf	??_sprintf+3
  2078  008E  300F               	movlw	15
  2079  008F                     u2575:	
  2080  008F  1003               	clrc
  2081  0090  0CD9               	rrf	??_sprintf+3,f
  2082  0091  0CD8               	rrf	??_sprintf+2,f
  2083  0092  0CD7               	rrf	??_sprintf+1,f
  2084  0093  0CD6               	rrf	??_sprintf,f
  2085  0094  3EFF               	addlw	-1
  2086  0095  1D03               	skipz
  2087  0096  288F               	goto	u2575
  2088  0097  0857               	movf	??_sprintf+1,w
  2089  0098  1683               	bsf	3,5	;RP0=1, select bank1
  2090  0099  00B2               	movwf	(sprintf@exp+1)^(0+128)
  2091  009A  1283               	bcf	3,5	;RP0=0, select bank0
  2092  009B  0856               	movf	??_sprintf,w
  2093  009C  1683               	bsf	3,5	;RP0=1, select bank1
  2094  009D  00B1               	movwf	sprintf@exp^(0+128)
  2095  009E  3082               	movlw	-126
  2096  009F  01B2               	clrf	(sprintf@exp+1)^(0+128)
  2097  00A0  07B1               	addwf	sprintf@exp^(0+128),f
  2098  00A1  1C03               	skipc
  2099  00A2  03B2               	decf	(sprintf@exp+1)^(0+128),f
  2100  00A3  30FF               	movlw	-1
  2101  00A4  07B1               	addwf	sprintf@exp^(0+128),f
  2102  00A5  1C03               	skipc
  2103  00A6  03B2               	decf	(sprintf@exp+1)^(0+128),f
  2104  00A7  3003               	movlw	3
  2105  00A8  00F0               	movwf	?___wmul
  2106  00A9  01F1               	clrf	?___wmul+1
  2107  00AA  0832               	movf	(sprintf@exp+1)^(0+128),w
  2108  00AB  00F3               	movwf	?___wmul+3
  2109  00AC  0831               	movf	sprintf@exp^(0+128),w
  2110  00AD  00F2               	movwf	?___wmul+2
  2111  00AE  26C5  120A  118A   	fcall	___wmul
  2112  00B1  0871               	movf	?___wmul+1,w
  2113  00B2  00B2               	movwf	(sprintf@exp+1)^(0+128)
  2114  00B3  0870               	movf	?___wmul,w
  2115  00B4  00B1               	movwf	sprintf@exp^(0+128)
  2116  00B5  300A               	movlw	10
  2117  00B6  00F6               	movwf	?___awdiv
  2118  00B7  01F7               	clrf	?___awdiv+1
  2119  00B8  0832               	movf	(sprintf@exp+1)^(0+128),w
  2120  00B9  00F9               	movwf	?___awdiv+3
  2121  00BA  0831               	movf	sprintf@exp^(0+128),w
  2122  00BB  00F8               	movwf	?___awdiv+2
  2123  00BC  24C3  120A  118A   	fcall	___awdiv
  2124  00BF  0877               	movf	?___awdiv+1,w
  2125  00C0  00B2               	movwf	(sprintf@exp+1)^(0+128)
  2126  00C1  0876               	movf	?___awdiv,w
  2127  00C2  00B1               	movwf	sprintf@exp^(0+128)
  2128  00C3  1FB2               	btfss	(sprintf@exp+1)^(0+128),7
  2129  00C4  28C9               	goto	l5297
  2130  00C5  30FF               	movlw	-1
  2131  00C6  07B1               	addwf	sprintf@exp^(0+128),f
  2132  00C7  1C03               	skipc
  2133  00C8  03B2               	decf	(sprintf@exp+1)^(0+128),f
  2134  00C9                     l5297:	
  2135  00C9  0331               	decf	sprintf@exp^(0+128),w
  2136  00CA  3AFF               	xorlw	255
  2137  00CB  2331  120A  118A   	fcall	_scale
  2138  00CE  2715  120A  118A   	fcall	PL9	;call to abstracted procedure
  2139  00D1  273A  120A  118A   	fcall	PL12	;call to abstracted procedure
  2140  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  2141  00D5  082D               	movf	sprintf@integ^(0+128),w
  2142  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  2143  00D7  00B0               	movwf	?___ftmul+3
  2144  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  2145  00D9  082E               	movf	(sprintf@integ+1)^(0+128),w
  2146  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2147  00DB  00B1               	movwf	?___ftmul+4
  2148  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  2149  00DD  082F               	movf	(sprintf@integ+2)^(0+128),w
  2150  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  2151  00DF  00B2               	movwf	?___ftmul+5
  2152  00E0  2545  120A  118A   	fcall	___ftmul
  2153  00E3  082D               	movf	?___ftmul,w
  2154  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  2155  00E5  00AD               	movwf	sprintf@integ^(0+128)
  2156  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  2157  00E7  082E               	movf	?___ftmul+1,w
  2158  00E8  1683               	bsf	3,5	;RP0=1, select bank1
  2159  00E9  00AE               	movwf	(sprintf@integ+1)^(0+128)
  2160  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  2161  00EB  082F               	movf	?___ftmul+2,w
  2162  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  2163  00ED  00AF               	movwf	(sprintf@integ+2)^(0+128)
  2164  00EE  2778  120A  118A   	fcall	PL19	;call to abstracted procedure
  2165  00F1  3080               	movlw	128
  2166  00F2  01F3               	clrf	?___ftge+3
  2167  00F3  00F4               	movwf	?___ftge+4
  2168  00F4  303F               	movlw	63
  2169  00F5  00F5               	movwf	?___ftge+5
  2170  00F6  2600  120A  118A   	fcall	___ftge
  2171  00F9  1803               	btfsc	3,0
  2172  00FA  2900               	goto	l5305
  2173  00FB  30FF               	movlw	-1
  2174  00FC  07B1               	addwf	sprintf@exp^(0+128),f
  2175  00FD  1C03               	skipc
  2176  00FE  03B2               	decf	(sprintf@exp+1)^(0+128),f
  2177  00FF  2910               	goto	l5311
  2178  0100                     l5305:	
  2179  0100  2778  120A  118A   	fcall	PL19	;call to abstracted procedure
  2180  0103  3020               	movlw	32
  2181  0104  01F3               	clrf	?___ftge+3
  2182  0105  00F4               	movwf	?___ftge+4
  2183  0106  3041               	movlw	65
  2184  0107  00F5               	movwf	?___ftge+5
  2185  0108  2600  120A  118A   	fcall	___ftge
  2186  010B  1C03               	btfss	3,0
  2187  010C  2910               	goto	l5311
  2188  010D  0AB1               	incf	sprintf@exp^(0+128),f
  2189  010E  1903               	skipnz
  2190  010F  0AB2               	incf	(sprintf@exp+1)^(0+128),f
  2191  0110                     l5311:	
  2192  0110  3006               	movlw	6
  2193  0111  120A  158A  250B   	fcall	_fround
      +       120A  118A         
  2194  0116  0848               	movf	?_fround,w
  2195  0117  00BC               	movwf	?___ftadd
  2196  0118  0849               	movf	?_fround+1,w
  2197  0119  00BD               	movwf	?___ftadd+1
  2198  011A  084A               	movf	?_fround+2,w
  2199  011B  00BE               	movwf	?___ftadd+2
  2200  011C  1683               	bsf	3,5	;RP0=1, select bank1
  2201  011D  0833               	movf	sprintf@fval^(0+128),w
  2202  011E  1283               	bcf	3,5	;RP0=0, select bank0
  2203  011F  00BF               	movwf	?___ftadd+3
  2204  0120  1683               	bsf	3,5	;RP0=1, select bank1
  2205  0121  0834               	movf	(sprintf@fval+1)^(0+128),w
  2206  0122  1283               	bcf	3,5	;RP0=0, select bank0
  2207  0123  00C0               	movwf	?___ftadd+4
  2208  0124  1683               	bsf	3,5	;RP0=1, select bank1
  2209  0125  0835               	movf	(sprintf@fval+2)^(0+128),w
  2210  0126  1283               	bcf	3,5	;RP0=0, select bank0
  2211  0127  00C1               	movwf	?___ftadd+5
  2212  0128  120A  158A  2449   	fcall	___ftadd
      +       120A  118A         
  2213  012D  083C               	movf	?___ftadd,w
  2214  012E  1683               	bsf	3,5	;RP0=1, select bank1
  2215  012F  00B3               	movwf	sprintf@fval^(0+128)
  2216  0130  1283               	bcf	3,5	;RP0=0, select bank0
  2217  0131  083D               	movf	?___ftadd+1,w
  2218  0132  1683               	bsf	3,5	;RP0=1, select bank1
  2219  0133  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2220  0134  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0135  083E               	movf	?___ftadd+2,w
  2222  0136  1683               	bsf	3,5	;RP0=1, select bank1
  2223  0137  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2224  0138  0832               	movf	(sprintf@exp+1)^(0+128),w
  2225  0139  3A80               	xorlw	128
  2226  013A  00FF               	movwf	127
  2227  013B  3080               	movlw	128
  2228  013C  027F               	subwf	127,w
  2229  013D  1D03               	skipz
  2230  013E  2941               	goto	u2615
  2231  013F  300A               	movlw	10
  2232  0140  0231               	subwf	sprintf@exp^(0+128),w
  2233  0141                     u2615:	
  2234  0141  1803               	skipnc
  2235  0142  2962               	goto	l5321
  2236  0143  27AD               	call	PL28	;select bank 1
  2237  0144  0835               	movf	(sprintf@fval+2)^(0+128),w
  2238  0145  0434               	iorwf	(sprintf@fval+1)^(0+128),w
  2239  0146  0433               	iorwf	sprintf@fval^(0+128),w
  2240  0147  1903               	skipnz
  2241  0148  29A1               	goto	l5337
  2242  0149  0833               	movf	sprintf@fval^(0+128),w
  2243  014A  272F  120A  118A   	fcall	PL11	;call to abstracted procedure
  2244  014D  262C  120A  118A   	fcall	___fttol
  2245  0150  0823               	movf	?___fttol+3,w
  2246  0151  0422               	iorwf	?___fttol+2,w
  2247  0152  0421               	iorwf	?___fttol+1,w
  2248  0153  0420               	iorwf	?___fttol,w
  2249  0154  1D03               	skipz
  2250  0155  29A1               	goto	l5337
  2251  0156  1683               	bsf	3,5	;RP0=1, select bank1
  2252  0157  0832               	movf	(sprintf@exp+1)^(0+128),w
  2253  0158  3A80               	xorlw	128
  2254  0159  00FF               	movwf	127
  2255  015A  3080               	movlw	128
  2256  015B  027F               	subwf	127,w
  2257  015C  1D03               	skipz
  2258  015D  2960               	goto	u2645
  2259  015E  3002               	movlw	2
  2260  015F  0231               	subwf	sprintf@exp^(0+128),w
  2261  0160                     u2645:	
  2262  0160  1C03               	skipc
  2263  0161  29A1               	goto	l5337
  2264  0162                     l5321:	
  2265  0162  27AD               	call	PL28	;select bank 1
  2266  0163  2778  120A  118A   	fcall	PL19	;call to abstracted procedure
  2267  0166  3070               	movlw	112
  2268  0167  00F3               	movwf	?___ftge+3
  2269  0168  3089               	movlw	137
  2270  0169  00F4               	movwf	?___ftge+4
  2271  016A  3040               	movlw	64
  2272  016B  00F5               	movwf	?___ftge+5
  2273  016C  2600  120A  118A   	fcall	___ftge
  2274  016F  1803               	btfsc	3,0
  2275  0170  2973               	goto	l5325
  2276  0171  30F7               	movlw	-9
  2277  0172  2974               	goto	L1
  2278  0173                     l5325:	
  2279  0173  30F8               	movlw	-8
  2280  0174                     L1:	
  2281  0174  07B1               	addwf	sprintf@exp^(0+128),f
  2282  0175  1C03               	skipc
  2283  0176  03B2               	decf	(sprintf@exp+1)^(0+128),f
  2284  0177  0831               	movf	sprintf@exp^(0+128),w
  2285  0178  2331  120A  118A   	fcall	_scale
  2286  017B  2715               	fcall	PL9	;call to abstracted procedure
  2287  017C  00F0               	movwf	?__tdiv_to_l_
  2288  017D  0834               	movf	(sprintf@fval+1)^(0+128),w
  2289  017E  00F1               	movwf	?__tdiv_to_l_+1
  2290  017F  0835               	movf	(sprintf@fval+2)^(0+128),w
  2291  0180  00F2               	movwf	?__tdiv_to_l_+2
  2292  0181  082D               	movf	sprintf@integ^(0+128),w
  2293  0182  00F3               	movwf	?__tdiv_to_l_+3
  2294  0183  082E               	movf	(sprintf@integ+1)^(0+128),w
  2295  0184  00F4               	movwf	?__tdiv_to_l_+4
  2296  0185  082F               	movf	(sprintf@integ+2)^(0+128),w
  2297  0186  00F5               	movwf	?__tdiv_to_l_+5
  2298  0187  120A  158A  22F9   	fcall	__tdiv_to_l_
      +       120A  118A         
  2299  018C  0873               	movf	?__tdiv_to_l_+3,w
  2300  018D  1683               	bsf	3,5	;RP0=1, select bank1
  2301  018E  00A3               	movwf	(_sprintf$1888+3)^(0+128)
  2302  018F  0872               	movf	?__tdiv_to_l_+2,w
  2303  0190  00A2               	movwf	(_sprintf$1888+2)^(0+128)
  2304  0191  0871               	movf	?__tdiv_to_l_+1,w
  2305  0192  00A1               	movwf	(_sprintf$1888+1)^(0+128)
  2306  0193  0870               	movf	?__tdiv_to_l_,w
  2307  0194  00A0               	movwf	_sprintf$1888^(0+128)
  2308  0195  0823               	movf	(_sprintf$1888+3)^(0+128),w
  2309  0196  00AC               	movwf	(sprintf@_val+3)^(0+128)
  2310  0197  0822               	movf	(_sprintf$1888+2)^(0+128),w
  2311  0198  00AB               	movwf	(sprintf@_val+2)^(0+128)
  2312  0199  0821               	movf	(_sprintf$1888+1)^(0+128),w
  2313  019A  00AA               	movwf	(sprintf@_val+1)^(0+128)
  2314  019B  0820               	movf	_sprintf$1888^(0+128),w
  2315  019C  00A9               	movwf	sprintf@_val^(0+128)
  2316  019D  01B3               	clrf	sprintf@fval^(0+128)
  2317  019E  01B4               	clrf	(sprintf@fval+1)^(0+128)
  2318  019F  01B5               	clrf	(sprintf@fval+2)^(0+128)
  2319  01A0  29DE               	goto	l5341
  2320  01A1                     l5337:	
  2321  01A1  27AD               	call	PL28	;select bank 1
  2322  01A2  0833               	movf	sprintf@fval^(0+128),w
  2323  01A3  272F  120A  118A   	fcall	PL11	;call to abstracted procedure
  2324  01A6  262C  120A  118A   	fcall	___fttol
  2325  01A9  26F0               	fcall	PL5	;call to abstracted procedure
  2326  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  2327  01AB  00A9               	movwf	sprintf@_val^(0+128)
  2328  01AC  082C               	movf	(sprintf@_val+3)^(0+128),w
  2329  01AD  00FB               	movwf	?___lltoft+3
  2330  01AE  082B               	movf	(sprintf@_val+2)^(0+128),w
  2331  01AF  00FA               	movwf	?___lltoft+2
  2332  01B0  082A               	movf	(sprintf@_val+1)^(0+128),w
  2333  01B1  00F9               	movwf	?___lltoft+1
  2334  01B2  0829               	movf	sprintf@_val^(0+128),w
  2335  01B3  00F8               	movwf	?___lltoft
  2336  01B4  120A  158A  229B   	fcall	___lltoft
      +       120A  118A         
  2337  01B9  0878               	movf	?___lltoft,w
  2338  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2339  01BB  00C8               	movwf	?___ftsub
  2340  01BC  0879               	movf	?___lltoft+1,w
  2341  01BD  00C9               	movwf	?___ftsub+1
  2342  01BE  087A               	movf	?___lltoft+2,w
  2343  01BF  00CA               	movwf	?___ftsub+2
  2344  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  2345  01C1  0833               	movf	sprintf@fval^(0+128),w
  2346  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  2347  01C3  00CB               	movwf	?___ftsub+3
  2348  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  2349  01C5  0834               	movf	(sprintf@fval+1)^(0+128),w
  2350  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2351  01C7  00CC               	movwf	?___ftsub+4
  2352  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  2353  01C9  0835               	movf	(sprintf@fval+2)^(0+128),w
  2354  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2355  01CB  00CD               	movwf	?___ftsub+5
  2356  01CC  120A  158A  2433   	fcall	___ftsub
      +       120A  118A         
  2357  01D1  0848               	movf	?___ftsub,w
  2358  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2359  01D3  00B3               	movwf	sprintf@fval^(0+128)
  2360  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  2361  01D5  0849               	movf	?___ftsub+1,w
  2362  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2363  01D7  00B4               	movwf	(sprintf@fval+1)^(0+128)
  2364  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2365  01D9  084A               	movf	?___ftsub+2,w
  2366  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  2367  01DB  00B5               	movwf	(sprintf@fval+2)^(0+128)
  2368  01DC  01B1               	clrf	sprintf@exp^(0+128)
  2369  01DD  01B2               	clrf	(sprintf@exp+1)^(0+128)
  2370  01DE                     l5341:	
  2371  01DE  01B6               	clrf	sprintf@c^(0+128)
  2372  01DF  0AB6               	incf	sprintf@c^(0+128),f
  2373  01E0                     l5347:	
  2374  01E0  26DE               	fcall	PL3	;call to abstracted procedure
  2375  01E1  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2376  01E6  00D7               	movwf	??_sprintf+1
  2377  01E7  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2378  01EC  00D8               	movwf	??_sprintf+2
  2379  01ED  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2380  01F2  00D9               	movwf	??_sprintf+3
  2381  01F3  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2382  01F8  00DA               	movwf	??_sprintf+4
  2383  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2384  01FA  022C               	subwf	(sprintf@_val+3)^(0+128),w
  2385  01FB  1D03               	skipz
  2386  01FC  2A0D               	goto	u2665
  2387  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2388  01FE  0859               	movf	??_sprintf+3,w
  2389  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2390  0200  022B               	subwf	(sprintf@_val+2)^(0+128),w
  2391  0201  1D03               	skipz
  2392  0202  2A0D               	goto	u2665
  2393  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0204  0858               	movf	??_sprintf+2,w
  2395  0205  1683               	bsf	3,5	;RP0=1, select bank1
  2396  0206  022A               	subwf	(sprintf@_val+1)^(0+128),w
  2397  0207  1D03               	skipz
  2398  0208  2A0D               	goto	u2665
  2399  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2400  020A  0857               	movf	??_sprintf+1,w
  2401  020B  1683               	bsf	3,5	;RP0=1, select bank1
  2402  020C  0229               	subwf	sprintf@_val^(0+128),w
  2403  020D                     u2665:	
  2404  020D  1C03               	btfss	3,0
  2405  020E  2A14               	goto	l5355
  2406  020F  0AB6               	incf	sprintf@c^(0+128),f
  2407  0210  0836               	movf	sprintf@c^(0+128),w
  2408  0211  3A0A               	xorlw	10
  2409  0212  1D03               	skipz
  2410  0213  29E0               	goto	l5347
  2411  0214                     l5355:	
  2412  0214  0825               	movf	sprintf@flag^(0+128),w
  2413  0215  3903               	andlw	3
  2414  0216  1903               	btfsc	3,2
  2415  0217  2A4A               	goto	l5365
  2416  0218  0830               	movf	sprintf@sp^(0+128),w
  2417  0219  0084               	movwf	4
  2418  021A  302D               	movlw	45
  2419  021B  2A46               	goto	L5
  2420  021C                     l5361:	
  2421  021C  26E8  120A  118A   	fcall	PL4	;call to abstracted procedure
  2422  021F  26DE               	fcall	PL3	;call to abstracted procedure
  2423  0220  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2424  0225  00F0               	movwf	?___lldiv
  2425  0226  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2426  022B  00F1               	movwf	?___lldiv+1
  2427  022C  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2428  0231  00F2               	movwf	?___lldiv+2
  2429  0232  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2430  0237  2745  120A  118A   	fcall	PL13	;call to abstracted procedure
  2431  023A  27B0  120A  118A   	fcall	___lldiv
  2432  023D  275B  120A  118A   	fcall	PL16	;call to abstracted procedure
  2433  0240  2687  120A  118A   	fcall	___llmod
  2434  0243  276F  120A  118A   	fcall	PL18	;call to abstracted procedure
  2435  0246                     L5:	
  2436  0246  1383               	bcf	3,7	;select IRP bank0
  2437  0247  0080               	movwf	0
  2438  0248  1683               	bsf	3,5	;RP0=1, select bank1
  2439  0249  0AB0               	incf	sprintf@sp^(0+128),f
  2440  024A                     l5365:	
  2441  024A  03B6               	decf	sprintf@c^(0+128),f
  2442  024B  0F36               	incfsz	sprintf@c^(0+128),w
  2443  024C  2A1C               	goto	l5361
  2444  024D                     l5373:	
  2445  024D  0832               	movf	(sprintf@exp+1)^(0+128),w
  2446  024E  3A80               	xorlw	128
  2447  024F  00FF               	movwf	127
  2448  0250  3080               	movlw	128
  2449  0251  027F               	subwf	127,w
  2450  0252  1D03               	skipz
  2451  0253  2A56               	goto	u2705
  2452  0254  3001               	movlw	1
  2453  0255  0231               	subwf	sprintf@exp^(0+128),w
  2454  0256                     u2705:	
  2455  0256  1C03               	btfss	3,0
  2456  0257  2A61               	goto	l5375
  2457  0258  27AD               	call	PL28	;select bank 1
  2458  0259  0830               	movf	sprintf@sp^(0+128),w
  2459  025A  27A6  120A  118A   	fcall	PL27	;call to abstracted procedure
  2460  025D  07B1               	addwf	sprintf@exp^(0+128),f
  2461  025E  1C03               	skipc
  2462  025F  03B2               	decf	(sprintf@exp+1)^(0+128),f
  2463  0260  2A4D               	goto	l5373
  2464  0261                     l5375:	
  2465  0261  27AD               	call	PL28	;select bank 1
  2466  0262  0828               	movf	(sprintf@prec+1)^(0+128),w
  2467  0263  3A80               	xorlw	128
  2468  0264  00FF               	movwf	127
  2469  0265  3080               	movlw	128
  2470  0266  027F               	subwf	127,w
  2471  0267  1D03               	skipz
  2472  0268  2A6B               	goto	u2715
  2473  0269  3009               	movlw	9
  2474  026A  0227               	subwf	sprintf@prec^(0+128),w
  2475  026B                     u2715:	
  2476  026B  1C03               	skipc
  2477  026C  2A70               	goto	l5379
  2478  026D  3008               	movlw	8
  2479  026E  27AD               	call	PL28	;select bank 1
  2480  026F  2A72               	goto	L2
  2481  0270                     l5379:	
  2482  0270  27AD               	call	PL28	;select bank 1
  2483  0271  0827               	movf	sprintf@prec^(0+128),w
  2484  0272                     L2:	
  2485  0272  00B6               	movwf	sprintf@c^(0+128)
  2486  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2487  0274  00D6               	movwf	??_sprintf
  2488  0275  01D7               	clrf	??_sprintf+1
  2489  0276  1BD6               	btfsc	??_sprintf,7
  2490  0277  03D7               	decf	??_sprintf+1,f
  2491  0278  1683               	bsf	3,5	;RP0=1, select bank1
  2492  0279  02A7               	subwf	sprintf@prec^(0+128),f
  2493  027A  1283               	bcf	3,5	;RP0=0, select bank0
  2494  027B  0857               	movf	??_sprintf+1,w
  2495  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2496  027D  1C03               	skipc
  2497  027E  03A8               	decf	(sprintf@prec+1)^(0+128),f
  2498  027F  02A8               	subwf	(sprintf@prec+1)^(0+128),f
  2499  0280  0836               	movf	sprintf@c^(0+128),w
  2500  0281  1903               	btfsc	3,2
  2501  0282  2A89               	goto	l5385
  2502  0283  0830               	movf	sprintf@sp^(0+128),w
  2503  0284  0084               	movwf	4
  2504  0285  302E               	movlw	46
  2505  0286  1383               	bcf	3,7	;select IRP bank0
  2506  0287  0080               	movwf	0
  2507  0288  0AB0               	incf	sprintf@sp^(0+128),f
  2508  0289                     l5385:	
  2509  0289  0836               	movf	sprintf@c^(0+128),w
  2510  028A  2331  120A  118A   	fcall	_scale
  2511  028D  083C               	movf	?_scale,w
  2512  028E  00B0               	movwf	?___ftmul+3
  2513  028F  083D               	movf	?_scale+1,w
  2514  0290  00B1               	movwf	?___ftmul+4
  2515  0291  083E               	movf	?_scale+2,w
  2516  0292  00B2               	movwf	?___ftmul+5
  2517  0293  1683               	bsf	3,5	;RP0=1, select bank1
  2518  0294  0833               	movf	sprintf@fval^(0+128),w
  2519  0295  273A  120A  118A   	fcall	PL12	;call to abstracted procedure
  2520  0298  2545  120A  118A   	fcall	___ftmul
  2521  029B  082D               	movf	?___ftmul,w
  2522  029C  00A0               	movwf	?___fttol
  2523  029D  082E               	movf	?___ftmul+1,w
  2524  029E  00A1               	movwf	?___fttol+1
  2525  029F  082F               	movf	?___ftmul+2,w
  2526  02A0  00A2               	movwf	?___fttol+2
  2527  02A1  262C  120A  118A   	fcall	___fttol
  2528  02A4  26F0  120A  118A   	fcall	PL5	;call to abstracted procedure
  2529  02A7  2B0F               	goto	L3
  2530  02A8                     l5387:	
  2531  02A8  26E8  120A  118A   	fcall	PL4	;call to abstracted procedure
  2532  02AB  26DE               	fcall	PL3	;call to abstracted procedure
  2533  02AC  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2534  02B1  00F0               	movwf	?___lldiv
  2535  02B2  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2536  02B7  00F1               	movwf	?___lldiv+1
  2537  02B8  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2538  02BD  00F2               	movwf	?___lldiv+2
  2539  02BE  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2540  02C3  2745  120A  118A   	fcall	PL13	;call to abstracted procedure
  2541  02C6  27B0  120A  118A   	fcall	___lldiv
  2542  02C9  275B  120A  118A   	fcall	PL16	;call to abstracted procedure
  2543  02CC  2687  120A  118A   	fcall	___llmod
  2544  02CF  276F  120A  118A   	fcall	PL18	;call to abstracted procedure
  2545  02D2  1383               	bcf	3,7	;select IRP bank0
  2546  02D3  0080               	movwf	0
  2547  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  2548  02D5  0AB0               	incf	sprintf@sp^(0+128),f
  2549  02D6  26DE               	fcall	PL3	;call to abstracted procedure
  2550  02D7  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2551  02DC  00A0               	movwf	?___llmod
  2552  02DD  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2553  02E2  00A1               	movwf	?___llmod+1
  2554  02E3  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2555  02E8  00A2               	movwf	?___llmod+2
  2556  02E9  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2557  02EE  00A3               	movwf	?___llmod+3
  2558  02EF  1683               	bsf	3,5	;RP0=1, select bank1
  2559  02F0  082C               	movf	(sprintf@_val+3)^(0+128),w
  2560  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  2561  02F2  00A7               	movwf	?___llmod+7
  2562  02F3  1683               	bsf	3,5	;RP0=1, select bank1
  2563  02F4  082B               	movf	(sprintf@_val+2)^(0+128),w
  2564  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2565  02F6  00A6               	movwf	?___llmod+6
  2566  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2567  02F8  082A               	movf	(sprintf@_val+1)^(0+128),w
  2568  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  2569  02FA  00A5               	movwf	?___llmod+5
  2570  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  2571  02FC  0829               	movf	sprintf@_val^(0+128),w
  2572  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  2573  02FE  00A4               	movwf	?___llmod+4
  2574  02FF  2687  120A  118A   	fcall	___llmod
  2575  0302  0823               	movf	?___llmod+3,w
  2576  0303  1683               	bsf	3,5	;RP0=1, select bank1
  2577  0304  00AC               	movwf	(sprintf@_val+3)^(0+128)
  2578  0305  1283               	bcf	3,5	;RP0=0, select bank0
  2579  0306  0822               	movf	?___llmod+2,w
  2580  0307  1683               	bsf	3,5	;RP0=1, select bank1
  2581  0308  00AB               	movwf	(sprintf@_val+2)^(0+128)
  2582  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2583  030A  0821               	movf	?___llmod+1,w
  2584  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2585  030C  00AA               	movwf	(sprintf@_val+1)^(0+128)
  2586  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2587  030E  0820               	movf	?___llmod,w
  2588  030F                     L3:	
  2589  030F  1683               	bsf	3,5	;RP0=1, select bank1
  2590  0310  00A9               	movwf	sprintf@_val^(0+128)
  2591  0311  03B6               	decf	sprintf@c^(0+128),f
  2592  0312  0F36               	incfsz	sprintf@c^(0+128),w
  2593  0313  2AA8               	goto	l5387
  2594  0314                     l5401:	
  2595  0314  0828               	movf	(sprintf@prec+1)^(0+128),w
  2596  0315  0427               	iorwf	sprintf@prec^(0+128),w
  2597  0316  1903               	btfsc	3,2
  2598  0317  2812               	goto	l5409
  2599  0318  0830               	movf	sprintf@sp^(0+128),w
  2600  0319  27A6  120A  118A   	fcall	PL27	;call to abstracted procedure
  2601  031C  07A7               	addwf	sprintf@prec^(0+128),f
  2602  031D  1C03               	skipc
  2603  031E  03A8               	decf	(sprintf@prec+1)^(0+128),f
  2604  031F  2B14               	goto	l5401
  2605  0320                     l5403:	
  2606  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2607  0321  0825               	movf	sprintf@flag^(0+128),w
  2608  0322  3903               	andlw	3
  2609  0323  1903               	btfsc	3,2
  2610  0324  2812               	goto	l5409
  2611  0325  0830               	movf	sprintf@sp^(0+128),w
  2612  0326  0084               	movwf	4
  2613  0327  302D               	movlw	45
  2614  0328                     L4:	
  2615  0328  1383               	bcf	3,7	;select IRP bank0
  2616  0329  0080               	movwf	0
  2617  032A  0AB0               	incf	sprintf@sp^(0+128),f
  2618  032B  2812               	goto	l5409
  2619  032C                     l5411:	
  2620  032C  0830               	movf	sprintf@sp^(0+128),w
  2621  032D  0084               	movwf	4
  2622  032E  1383               	bcf	3,7	;select IRP bank0
  2623  032F  0180               	clrf	0
  2624  0330  0008               	return
  2625  0331                     __end_of_sprintf:	
  2626  0331                     __ptext519:	
  2627 ;; =============== function ___ftsub ends ============
  2628                           
  2629                           
  2630 ;; *************** function _scale *****************
  2631 ;; Defined at:
  2632 ;;		line 422 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  scl             1    wreg     char 
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;  scl             1   38[BANK0 ] char 
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  3   28[BANK0 ] char 
  2639 ;; Registers used:
  2640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 60/20
  2643 ;;		On exit  : 60/0
  2644 ;;		Unchanged: FFF9F/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2646 ;;      Params:         0       3       0       0       0
  2647 ;;      Locals:         0       4       0       0       0
  2648 ;;      Temps:          0       4       0       0       0
  2649 ;;      Totals:         0      11       0       0       0
  2650 ;;Total ram usage:       11 bytes
  2651 ;; Hardware stack levels used:    1
  2652 ;; Hardware stack levels required when called:    2
  2653 ;; This function calls:
  2654 ;;		___awmod
  2655 ;;		___awdiv
  2656 ;;		___ftmul
  2657 ;;		___bmul
  2658 ;; This function is called by:
  2659 ;;		_sprintf
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662  0331                     _scale:	
  2663                           
  2664                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2665                           ;scale@scl stored from wreg
  2666  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2667  0332  00C6               	movwf	scale@scl
  2668  0333  1FC6               	btfss	scale@scl,7
  2669  0334  2BFD               	goto	l5213
  2670  0335  09C6               	comf	scale@scl,f
  2671  0336  0AC6               	incf	scale@scl,f
  2672  0337  0846               	movf	scale@scl,w
  2673  0338  3A80               	xorlw	128
  2674  0339  3E12               	addlw	-238
  2675  033A  1C03               	skipc
  2676  033B  2BA1               	goto	l5203
  2677  033C  300A               	movlw	10
  2678  033D  2750  120A  118A   	fcall	PL14	;call to abstracted procedure
  2679  0340  2508  120A  118A   	fcall	___awmod
  2680  0343  0871               	movf	?___awmod+1,w
  2681  0344  00F9               	movwf	?___awdiv+3
  2682  0345  0870               	movf	?___awmod,w
  2683  0346  00F8               	movwf	?___awdiv+2
  2684  0347  24C3  120A  118A   	fcall	___awdiv
  2685  034A  2797               	fcall	PL24	;call to abstracted procedure
  2686  034B  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  2687  034C  0084               	movwf	4
  2688  034D  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2689  0352  00AD               	movwf	?___ftmul
  2690  0353  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2691  0358  00AE               	movwf	?___ftmul+1
  2692  0359  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2693  035E  277F  120A  118A   	fcall	PL20	;call to abstracted procedure
  2694  0361  1BF8               	btfsc	?___awdiv+2,7
  2695  0362  03F9               	decf	?___awdiv+3,f
  2696  0363  24C3  120A  118A   	fcall	___awdiv
  2697  0366  2706               	fcall	PL7	;call to abstracted procedure
  2698  0367  3E37               	addlw	low ((__npowers_-__stringbase+54))
  2699  0368  0084               	movwf	4
  2700  0369  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2701  036E  00B0               	movwf	?___ftmul+3
  2702  036F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2703  0374  00B1               	movwf	?___ftmul+4
  2704  0375  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2705  037A  00B2               	movwf	?___ftmul+5
  2706  037B  2545  120A  118A   	fcall	___ftmul
  2707  037E  2722  120A  118A   	fcall	PL10	;call to abstracted procedure
  2708  0381  1BF2               	btfsc	?___awmod+2,7
  2709  0382  03F3               	decf	?___awmod+3,f
  2710  0383  2508  120A  118A   	fcall	___awmod
  2711  0386  26FE               	fcall	PL6	;call to abstracted procedure
  2712  0387  3E01               	addlw	low (__npowers_-__stringbase)
  2713  0388  0084               	movwf	4
  2714  0389  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2715  038E  00AD               	movwf	?___ftmul
  2716  038F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2717  0394  00AE               	movwf	?___ftmul+1
  2718  0395  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2719  039A  2787  120A  118A   	fcall	PL21	;call to abstracted procedure
  2720  039D  2545  120A  118A   	fcall	___ftmul
  2721  03A0  2F0E               	ljmp	PL8	;call to abstracted procedure
  2722  03A1                     l5203:	
  2723  03A1  0846               	movf	scale@scl,w
  2724  03A2  3A80               	xorlw	128
  2725  03A3  3E75               	addlw	-139
  2726  03A4  1C03               	skipc
  2727  03A5  2BE6               	goto	l5209
  2728  03A6  300A               	movlw	10
  2729  03A7  00F0               	movwf	?___awmod
  2730  03A8  01F1               	clrf	?___awmod+1
  2731  03A9  0846               	movf	scale@scl,w
  2732  03AA  00F2               	movwf	?___awmod+2
  2733  03AB  01F3               	clrf	?___awmod+3
  2734  03AC  1BF2               	btfsc	?___awmod+2,7
  2735  03AD  03F3               	decf	?___awmod+3,f
  2736  03AE  2508  120A  118A   	fcall	___awmod
  2737  03B1  26FE               	fcall	PL6	;call to abstracted procedure
  2738  03B2  3E01               	addlw	low (__npowers_-__stringbase)
  2739  03B3  0084               	movwf	4
  2740  03B4  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2741  03B9  00AD               	movwf	?___ftmul
  2742  03BA  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2743  03BF  00AE               	movwf	?___ftmul+1
  2744  03C0  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2745  03C5  278F  120A  118A   	fcall	PL23	;call to abstracted procedure
  2746  03C8  1BF8               	btfsc	?___awdiv+2,7
  2747  03C9  03F9               	decf	?___awdiv+3,f
  2748  03CA  24C3  120A  118A   	fcall	___awdiv
  2749  03CD  2706               	fcall	PL7	;call to abstracted procedure
  2750  03CE  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  2751  03CF  0084               	movwf	4
  2752  03D0  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2753  03D5  00B0               	movwf	?___ftmul+3
  2754  03D6  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2755  03DB  00B1               	movwf	?___ftmul+4
  2756  03DC  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2757  03E1  00B2               	movwf	?___ftmul+5
  2758  03E2  2545  120A  118A   	fcall	___ftmul
  2759  03E5  2F0E               	ljmp	PL8	;call to abstracted procedure
  2760  03E6                     l5209:	
  2761  03E6  3003               	movlw	3
  2762  03E7  00F9               	movwf	?___bmul
  2763  03E8  0846               	movf	scale@scl,w
  2764  03E9  25B4               	fcall	___bmul
  2765  03EA  3E01               	addlw	low (__npowers_-__stringbase)
  2766  03EB  0084               	movwf	4
  2767  03EC  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2768  03F1  00BC               	movwf	?_scale
  2769  03F2  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2770  03F7  00BD               	movwf	?_scale+1
  2771  03F8  120A  158A  2000   	fcall	stringdir
  2772  03FB  00BE               	movwf	?_scale+2
  2773  03FC  0008               	return
  2774  03FD                     l5213:	
  2775  03FD  0846               	movf	scale@scl,w
  2776  03FE  3A80               	xorlw	128
  2777  03FF  3E12               	addlw	-238
  2778  0400  1C03               	skipc
  2779  0401  2C67               	goto	l5221
  2780  0402  300A               	movlw	10
  2781  0403  2750  120A  118A   	fcall	PL14	;call to abstracted procedure
  2782  0406  2508  120A  118A   	fcall	___awmod
  2783  0409  0871               	movf	?___awmod+1,w
  2784  040A  00F9               	movwf	?___awdiv+3
  2785  040B  0870               	movf	?___awmod,w
  2786  040C  00F8               	movwf	?___awdiv+2
  2787  040D  24C3  120A  118A   	fcall	___awdiv
  2788  0410  2797               	fcall	PL24	;call to abstracted procedure
  2789  0411  3E43               	addlw	low ((__powers_-__stringbase+27))
  2790  0412  0084               	movwf	4
  2791  0413  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2792  0418  00AD               	movwf	?___ftmul
  2793  0419  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2794  041E  00AE               	movwf	?___ftmul+1
  2795  041F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2796  0424  277F  120A  118A   	fcall	PL20	;call to abstracted procedure
  2797  0427  1BF8               	btfsc	?___awdiv+2,7
  2798  0428  03F9               	decf	?___awdiv+3,f
  2799  0429  24C3  120A  118A   	fcall	___awdiv
  2800  042C  2706               	fcall	PL7	;call to abstracted procedure
  2801  042D  3E5E               	addlw	low ((__powers_-__stringbase+54))
  2802  042E  0084               	movwf	4
  2803  042F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2804  0434  00B0               	movwf	?___ftmul+3
  2805  0435  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2806  043A  00B1               	movwf	?___ftmul+4
  2807  043B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2808  0440  00B2               	movwf	?___ftmul+5
  2809  0441  2545  120A  118A   	fcall	___ftmul
  2810  0444  2722  120A  118A   	fcall	PL10	;call to abstracted procedure
  2811  0447  1BF2               	btfsc	?___awmod+2,7
  2812  0448  03F3               	decf	?___awmod+3,f
  2813  0449  2508  120A  118A   	fcall	___awmod
  2814  044C  26FE               	fcall	PL6	;call to abstracted procedure
  2815  044D  3E28               	addlw	low (__powers_-__stringbase)
  2816  044E  0084               	movwf	4
  2817  044F  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2818  0454  00AD               	movwf	?___ftmul
  2819  0455  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2820  045A  00AE               	movwf	?___ftmul+1
  2821  045B  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2822  0460  2787  120A  118A   	fcall	PL21	;call to abstracted procedure
  2823  0463  2545  120A  118A   	fcall	___ftmul
  2824  0466  2F0E               	ljmp	PL8	;call to abstracted procedure
  2825  0467                     l5221:	
  2826  0467  0846               	movf	scale@scl,w
  2827  0468  3A80               	xorlw	128
  2828  0469  3E75               	addlw	-139
  2829  046A  1C03               	skipc
  2830  046B  2CAC               	goto	l5227
  2831  046C  300A               	movlw	10
  2832  046D  00F0               	movwf	?___awmod
  2833  046E  01F1               	clrf	?___awmod+1
  2834  046F  0846               	movf	scale@scl,w
  2835  0470  00F2               	movwf	?___awmod+2
  2836  0471  01F3               	clrf	?___awmod+3
  2837  0472  1BF2               	btfsc	?___awmod+2,7
  2838  0473  03F3               	decf	?___awmod+3,f
  2839  0474  2508  120A  118A   	fcall	___awmod
  2840  0477  26FE               	fcall	PL6	;call to abstracted procedure
  2841  0478  3E28               	addlw	low (__powers_-__stringbase)
  2842  0479  0084               	movwf	4
  2843  047A  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2844  047F  00AD               	movwf	?___ftmul
  2845  0480  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2846  0485  00AE               	movwf	?___ftmul+1
  2847  0486  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2848  048B  278F  120A  118A   	fcall	PL23	;call to abstracted procedure
  2849  048E  1BF8               	btfsc	?___awdiv+2,7
  2850  048F  03F9               	decf	?___awdiv+3,f
  2851  0490  24C3  120A  118A   	fcall	___awdiv
  2852  0493  2706               	fcall	PL7	;call to abstracted procedure
  2853  0494  3E43               	addlw	low ((__powers_-__stringbase+27))
  2854  0495  0084               	movwf	4
  2855  0496  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2856  049B  00B0               	movwf	?___ftmul+3
  2857  049C  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2858  04A1  00B1               	movwf	?___ftmul+4
  2859  04A2  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2860  04A7  00B2               	movwf	?___ftmul+5
  2861  04A8  2545  120A  118A   	fcall	___ftmul
  2862  04AB  2F0E               	ljmp	PL8	;call to abstracted procedure
  2863  04AC                     l5227:	
  2864  04AC  3003               	movlw	3
  2865  04AD  00F9               	movwf	?___bmul
  2866  04AE  0846               	movf	scale@scl,w
  2867  04AF  25B4               	fcall	___bmul
  2868  04B0  3E28               	addlw	low (__powers_-__stringbase)
  2869  04B1  0084               	movwf	4
  2870  04B2  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2871  04B7  00BC               	movwf	?_scale
  2872  04B8  120A  158A  2000   	fcall	stringdir
      +       120A  118A         
  2873  04BD  00BD               	movwf	?_scale+1
  2874  04BE  120A  158A  2000   	fcall	stringdir
  2875  04C1  00BE               	movwf	?_scale+2
  2876  04C2  0008               	return
  2877  04C3                     __end_of_scale:	
  2878  04C3                     __ptext532:	
  2879 ;; =============== function ___llmod ends ============
  2880                           
  2881                           
  2882 ;; *************** function ___awdiv *****************
  2883 ;; Defined at:
  2884 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awdiv.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  divisor         2    6[COMMON] int 
  2887 ;;  dividend        2    8[COMMON] int 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  quotient        2   12[COMMON] int 
  2890 ;;  sign            1   11[COMMON] unsigned char 
  2891 ;;  counter         1   10[COMMON] unsigned char 
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  2    6[COMMON] int 
  2894 ;; Registers used:
  2895 ;;		wreg, status,2, status,0
  2896 ;; Tracked objects:
  2897 ;;		On entry : 40/20
  2898 ;;		On exit  : 40/20
  2899 ;;		Unchanged: FFFBF/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2901 ;;      Params:         4       0       0       0       0
  2902 ;;      Locals:         4       0       0       0       0
  2903 ;;      Temps:          0       0       0       0       0
  2904 ;;      Totals:         8       0       0       0       0
  2905 ;;Total ram usage:        8 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_scale
  2911 ;;		_sprintf
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914  04C3                     ___awdiv:	
  2915                           
  2916                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2917  04C3  01FB               	clrf	___awdiv@sign
  2918  04C4  1FF7               	btfss	___awdiv@divisor+1,7
  2919  04C5  2CCD               	goto	l4845
  2920  04C6  09F6               	comf	___awdiv@divisor,f
  2921  04C7  09F7               	comf	___awdiv@divisor+1,f
  2922  04C8  0AF6               	incf	___awdiv@divisor,f
  2923  04C9  1903               	skipnz
  2924  04CA  0AF7               	incf	___awdiv@divisor+1,f
  2925  04CB  01FB               	clrf	___awdiv@sign
  2926  04CC  0AFB               	incf	___awdiv@sign,f
  2927  04CD                     l4845:	
  2928  04CD  1FF9               	btfss	___awdiv@dividend+1,7
  2929  04CE  2CD6               	goto	l4851
  2930  04CF  09F8               	comf	___awdiv@dividend,f
  2931  04D0  09F9               	comf	___awdiv@dividend+1,f
  2932  04D1  0AF8               	incf	___awdiv@dividend,f
  2933  04D2  1903               	skipnz
  2934  04D3  0AF9               	incf	___awdiv@dividend+1,f
  2935  04D4  3001               	movlw	1
  2936  04D5  06FB               	xorwf	___awdiv@sign,f
  2937  04D6                     l4851:	
  2938  04D6  01FC               	clrf	___awdiv@quotient
  2939  04D7  01FD               	clrf	___awdiv@quotient+1
  2940  04D8  0877               	movf	___awdiv@divisor+1,w
  2941  04D9  0476               	iorwf	___awdiv@divisor,w
  2942  04DA  1903               	skipnz
  2943  04DB  2CFB               	goto	l4873
  2944  04DC  01FA               	clrf	___awdiv@counter
  2945  04DD                     L14:	
  2946  04DD  0AFA               	incf	___awdiv@counter,f
  2947  04DE  1BF7               	btfsc	___awdiv@divisor+1,7
  2948  04DF  2CE4               	goto	l4861
  2949  04E0  1003               	clrc
  2950  04E1  0DF6               	rlf	___awdiv@divisor,f
  2951  04E2  0DF7               	rlf	___awdiv@divisor+1,f
  2952  04E3  2CDD               	goto	L14
  2953  04E4                     l4861:	
  2954  04E4  1003               	clrc
  2955  04E5  0DFC               	rlf	___awdiv@quotient,f
  2956  04E6  0DFD               	rlf	___awdiv@quotient+1,f
  2957  04E7  0877               	movf	___awdiv@divisor+1,w
  2958  04E8  0279               	subwf	___awdiv@dividend+1,w
  2959  04E9  1D03               	skipz
  2960  04EA  2CED               	goto	u1935
  2961  04EB  0876               	movf	___awdiv@divisor,w
  2962  04EC  0278               	subwf	___awdiv@dividend,w
  2963  04ED                     u1935:	
  2964  04ED  1C03               	skipc
  2965  04EE  2CF7               	goto	L15
  2966  04EF  0876               	movf	___awdiv@divisor,w
  2967  04F0  02F8               	subwf	___awdiv@dividend,f
  2968  04F1  0877               	movf	___awdiv@divisor+1,w
  2969  04F2  1C03               	skipc
  2970  04F3  03F9               	decf	___awdiv@dividend+1,f
  2971  04F4  02F9               	subwf	___awdiv@dividend+1,f
  2972  04F5  147C               	bsf	___awdiv@quotient,0
  2973  04F6  1003               	clrc
  2974  04F7                     L15:	
  2975  04F7  0CF7               	rrf	___awdiv@divisor+1,f
  2976  04F8  0CF6               	rrf	___awdiv@divisor,f
  2977  04F9  0BFA               	decfsz	___awdiv@counter,f
  2978  04FA  2CE4               	goto	l4861
  2979  04FB                     l4873:	
  2980  04FB  087B               	movf	___awdiv@sign,w
  2981  04FC  1903               	btfsc	3,2
  2982  04FD  2D03               	goto	l4877
  2983  04FE  09FC               	comf	___awdiv@quotient,f
  2984  04FF  09FD               	comf	___awdiv@quotient+1,f
  2985  0500  0AFC               	incf	___awdiv@quotient,f
  2986  0501  1903               	skipnz
  2987  0502  0AFD               	incf	___awdiv@quotient+1,f
  2988  0503                     l4877:	
  2989  0503  087D               	movf	___awdiv@quotient+1,w
  2990  0504  00F7               	movwf	?___awdiv+1
  2991  0505  087C               	movf	___awdiv@quotient,w
  2992  0506  00F6               	movwf	?___awdiv
  2993  0507  0008               	return
  2994  0508                     __end_of___awdiv:	
  2995  0508                     __ptext527:	
  2996 ;; =============== function _pause ends ============
  2997                           
  2998                           
  2999 ;; *************** function ___awmod *****************
  3000 ;; Defined at:
  3001 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awmod.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  divisor         2    0[COMMON] int 
  3004 ;;  dividend        2    2[COMMON] int 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  sign            1    5[COMMON] unsigned char 
  3007 ;;  counter         1    4[COMMON] unsigned char 
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  2    0[COMMON] int 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0
  3012 ;; Tracked objects:
  3013 ;;		On entry : 60/0
  3014 ;;		On exit  : 60/0
  3015 ;;		Unchanged: FFF9F/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3017 ;;      Params:         4       0       0       0       0
  3018 ;;      Locals:         2       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0
  3020 ;;      Totals:         6       0       0       0       0
  3021 ;;Total ram usage:        6 bytes
  3022 ;; Hardware stack levels used:    1
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_scale
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029  0508                     ___awmod:	
  3030                           
  3031                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3032  0508  01F5               	clrf	___awmod@sign
  3033  0509  1FF3               	btfss	___awmod@dividend+1,7
  3034  050A  2D12               	goto	l4963
  3035  050B  09F2               	comf	___awmod@dividend,f
  3036  050C  09F3               	comf	___awmod@dividend+1,f
  3037  050D  0AF2               	incf	___awmod@dividend,f
  3038  050E  1903               	skipnz
  3039  050F  0AF3               	incf	___awmod@dividend+1,f
  3040  0510  01F5               	clrf	___awmod@sign
  3041  0511  0AF5               	incf	___awmod@sign,f
  3042  0512                     l4963:	
  3043  0512  1FF1               	btfss	___awmod@divisor+1,7
  3044  0513  2D19               	goto	l4967
  3045  0514  09F0               	comf	___awmod@divisor,f
  3046  0515  09F1               	comf	___awmod@divisor+1,f
  3047  0516  0AF0               	incf	___awmod@divisor,f
  3048  0517  1903               	skipnz
  3049  0518  0AF1               	incf	___awmod@divisor+1,f
  3050  0519                     l4967:	
  3051  0519  0871               	movf	___awmod@divisor+1,w
  3052  051A  0470               	iorwf	___awmod@divisor,w
  3053  051B  1903               	skipnz
  3054  051C  2D38               	goto	l4983
  3055  051D  01F4               	clrf	___awmod@counter
  3056  051E                     L7:	
  3057  051E  0AF4               	incf	___awmod@counter,f
  3058  051F  1BF1               	btfsc	___awmod@divisor+1,7
  3059  0520  2D25               	goto	l4975
  3060  0521  1003               	clrc
  3061  0522  0DF0               	rlf	___awmod@divisor,f
  3062  0523  0DF1               	rlf	___awmod@divisor+1,f
  3063  0524  2D1E               	goto	L7
  3064  0525                     l4975:	
  3065  0525  0871               	movf	___awmod@divisor+1,w
  3066  0526  0273               	subwf	___awmod@dividend+1,w
  3067  0527  1D03               	skipz
  3068  0528  2D2B               	goto	u2125
  3069  0529  0870               	movf	___awmod@divisor,w
  3070  052A  0272               	subwf	___awmod@dividend,w
  3071  052B                     u2125:	
  3072  052B  1C03               	skipc
  3073  052C  2D34               	goto	L8
  3074  052D  0870               	movf	___awmod@divisor,w
  3075  052E  02F2               	subwf	___awmod@dividend,f
  3076  052F  0871               	movf	___awmod@divisor+1,w
  3077  0530  1C03               	skipc
  3078  0531  03F3               	decf	___awmod@dividend+1,f
  3079  0532  02F3               	subwf	___awmod@dividend+1,f
  3080  0533  1003               	clrc
  3081  0534                     L8:	
  3082  0534  0CF1               	rrf	___awmod@divisor+1,f
  3083  0535  0CF0               	rrf	___awmod@divisor,f
  3084  0536  0BF4               	decfsz	___awmod@counter,f
  3085  0537  2D25               	goto	l4975
  3086  0538                     l4983:	
  3087  0538  0875               	movf	___awmod@sign,w
  3088  0539  1903               	btfsc	3,2
  3089  053A  2D40               	goto	l4987
  3090  053B  09F2               	comf	___awmod@dividend,f
  3091  053C  09F3               	comf	___awmod@dividend+1,f
  3092  053D  0AF2               	incf	___awmod@dividend,f
  3093  053E  1903               	skipnz
  3094  053F  0AF3               	incf	___awmod@dividend+1,f
  3095  0540                     l4987:	
  3096  0540  0873               	movf	___awmod@dividend+1,w
  3097  0541  00F1               	movwf	?___awmod+1
  3098  0542  0872               	movf	___awmod@dividend,w
  3099  0543  00F0               	movwf	?___awmod
  3100  0544  0008               	return
  3101  0545                     __end_of___awmod:	
  3102  0545                     __ptext524:	
  3103 ;; =============== function ___awtoft ends ============
  3104                           
  3105                           
  3106 ;; *************** function ___ftmul *****************
  3107 ;; Defined at:
  3108 ;;		line 52 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftmul.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  f1              3   13[BANK0 ] float 
  3111 ;;  f2              3   16[BANK0 ] float 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;  f3_as_produc    3   23[BANK0 ] unsigned um
  3114 ;;  sign            1   27[BANK0 ] unsigned char 
  3115 ;;  cntr            1   26[BANK0 ] unsigned char 
  3116 ;;  exp             1   22[BANK0 ] unsigned char 
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  3   13[BANK0 ] float 
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0, pclath, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 60/0
  3123 ;;		On exit  : 60/0
  3124 ;;		Unchanged: FFF9F/0
  3125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3126 ;;      Params:         0       6       0       0       0
  3127 ;;      Locals:         0       6       0       0       0
  3128 ;;      Temps:          0       3       0       0       0
  3129 ;;      Totals:         0      15       0       0       0
  3130 ;;Total ram usage:       15 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:    1
  3133 ;; This function calls:
  3134 ;;		___ftpack
  3135 ;; This function is called by:
  3136 ;;		_main
  3137 ;;		_fround
  3138 ;;		_scale
  3139 ;;		_sprintf
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142  0545                     ___ftmul:	
  3143                           
  3144                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3145  0545  082D               	movf	___ftmul@f1,w
  3146  0546  00B3               	movwf	??___ftmul
  3147  0547  082E               	movf	___ftmul@f1+1,w
  3148  0548  00B4               	movwf	??___ftmul+1
  3149  0549  082F               	movf	___ftmul@f1+2,w
  3150  054A  00B5               	movwf	??___ftmul+2
  3151  054B  1003               	clrc
  3152  054C  0D34               	rlf	??___ftmul+1,w
  3153  054D  0D35               	rlf	??___ftmul+2,w
  3154  054E  00B6               	movwf	___ftmul@exp
  3155  054F  08B6               	movf	___ftmul@exp,f
  3156  0550  1D03               	skipz
  3157  0551  2D56               	goto	l5083
  3158  0552  01AD               	clrf	?___ftmul
  3159  0553  01AE               	clrf	?___ftmul+1
  3160  0554  01AF               	clrf	?___ftmul+2
  3161  0555  0008               	return
  3162  0556                     l5083:	
  3163  0556  0830               	movf	___ftmul@f2,w
  3164  0557  00B3               	movwf	??___ftmul
  3165  0558  0831               	movf	___ftmul@f2+1,w
  3166  0559  00B4               	movwf	??___ftmul+1
  3167  055A  0832               	movf	___ftmul@f2+2,w
  3168  055B  00B5               	movwf	??___ftmul+2
  3169  055C  1003               	clrc
  3170  055D  0D34               	rlf	??___ftmul+1,w
  3171  055E  0D35               	rlf	??___ftmul+2,w
  3172  055F  00BB               	movwf	___ftmul@sign
  3173  0560  08BB               	movf	___ftmul@sign,f
  3174  0561  1D03               	skipz
  3175  0562  2D67               	goto	l5089
  3176  0563  01AD               	clrf	?___ftmul
  3177  0564  01AE               	clrf	?___ftmul+1
  3178  0565  01AF               	clrf	?___ftmul+2
  3179  0566  0008               	return
  3180  0567                     l5089:	
  3181  0567  083B               	movf	___ftmul@sign,w
  3182  0568  3E7B               	addlw	123
  3183  0569  07B6               	addwf	___ftmul@exp,f
  3184  056A  082F               	movf	___ftmul@f1+2,w
  3185  056B  00BB               	movwf	___ftmul@sign
  3186  056C  0832               	movf	___ftmul@f2+2,w
  3187  056D  06BB               	xorwf	___ftmul@sign,f
  3188  056E  3080               	movlw	128
  3189  056F  05BB               	andwf	___ftmul@sign,f
  3190  0570  3007               	movlw	7
  3191  0571  17AE               	bsf	___ftmul@f1+1,7
  3192  0572  17B1               	bsf	___ftmul@f2+1,7
  3193  0573  01B2               	clrf	___ftmul@f2+2
  3194  0574  01B7               	clrf	___ftmul@f3_as_product
  3195  0575  01B8               	clrf	___ftmul@f3_as_product+1
  3196  0576  01B9               	clrf	___ftmul@f3_as_product+2
  3197  0577  00BA               	movwf	___ftmul@cntr
  3198  0578                     l5107:	
  3199  0578  1C2D               	btfss	___ftmul@f1,0
  3200  0579  2D82               	goto	l5111
  3201  057A  0830               	movf	___ftmul@f2,w
  3202  057B  2765  120A  118A   	fcall	PL17	;call to abstracted procedure
  3203  057E  1803               	skipnc
  3204  057F  0A32               	incf	___ftmul@f2+2,w
  3205  0580  1D03               	btfss	3,2
  3206  0581  07B9               	addwf	___ftmul@f3_as_product+2,f
  3207  0582                     l5111:	
  3208  0582  1003               	clrc
  3209  0583  0CAF               	rrf	___ftmul@f1+2,f
  3210  0584  0CAE               	rrf	___ftmul@f1+1,f
  3211  0585  0CAD               	rrf	___ftmul@f1,f
  3212  0586  1003               	clrc
  3213  0587  0DB0               	rlf	___ftmul@f2,f
  3214  0588  0DB1               	rlf	___ftmul@f2+1,f
  3215  0589  0DB2               	rlf	___ftmul@f2+2,f
  3216  058A  0BBA               	decfsz	___ftmul@cntr,f
  3217  058B  2D78               	goto	l5107
  3218  058C  3009               	movlw	9
  3219  058D  00BA               	movwf	___ftmul@cntr
  3220  058E                     l5119:	
  3221  058E  1C2D               	btfss	___ftmul@f1,0
  3222  058F  2D98               	goto	l5123
  3223  0590  0830               	movf	___ftmul@f2,w
  3224  0591  2765  120A  118A   	fcall	PL17	;call to abstracted procedure
  3225  0594  1803               	skipnc
  3226  0595  0A32               	incf	___ftmul@f2+2,w
  3227  0596  1D03               	btfss	3,2
  3228  0597  07B9               	addwf	___ftmul@f3_as_product+2,f
  3229  0598                     l5123:	
  3230  0598  1003               	clrc
  3231  0599  0CAF               	rrf	___ftmul@f1+2,f
  3232  059A  0CAE               	rrf	___ftmul@f1+1,f
  3233  059B  0CAD               	rrf	___ftmul@f1,f
  3234  059C  1003               	clrc
  3235  059D  0CB9               	rrf	___ftmul@f3_as_product+2,f
  3236  059E  0CB8               	rrf	___ftmul@f3_as_product+1,f
  3237  059F  0CB7               	rrf	___ftmul@f3_as_product,f
  3238  05A0  0BBA               	decfsz	___ftmul@cntr,f
  3239  05A1  2D8E               	goto	l5119
  3240  05A2  0837               	movf	___ftmul@f3_as_product,w
  3241  05A3  00F0               	movwf	?___ftpack
  3242  05A4  0838               	movf	___ftmul@f3_as_product+1,w
  3243  05A5  00F1               	movwf	?___ftpack+1
  3244  05A6  0839               	movf	___ftmul@f3_as_product+2,w
  3245  05A7  00F2               	movwf	?___ftpack+2
  3246  05A8  0836               	movf	___ftmul@exp,w
  3247  05A9  00F3               	movwf	?___ftpack+3
  3248  05AA  083B               	movf	___ftmul@sign,w
  3249  05AB  00F4               	movwf	?___ftpack+4
  3250  05AC  25C2               	fcall	___ftpack
  3251  05AD  0870               	movf	?___ftpack,w
  3252  05AE  00AD               	movwf	?___ftmul
  3253  05AF  0871               	movf	?___ftpack+1,w
  3254  05B0  00AE               	movwf	?___ftmul+1
  3255  05B1  0872               	movf	?___ftpack+2,w
  3256  05B2  00AF               	movwf	?___ftmul+2
  3257  05B3  0008               	return
  3258  05B4                     __end_of___ftmul:	
  3259  05B4                     __ptext538:	
  3260 ;; =============== function ___wmul ends ============
  3261                           
  3262                           
  3263 ;; *************** function ___bmul *****************
  3264 ;; Defined at:
  3265 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\bmul.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  multiplier      1    wreg     unsigned char 
  3268 ;;  multiplicand    1    9[COMMON] unsigned char 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  multiplier      1   11[COMMON] unsigned char 
  3271 ;;  product         1   10[COMMON] unsigned char 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  1    wreg      unsigned char 
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0
  3276 ;; Tracked objects:
  3277 ;;		On entry : 60/0
  3278 ;;		On exit  : 60/0
  3279 ;;		Unchanged: FFF9F/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3281 ;;      Params:         1       0       0       0       0
  3282 ;;      Locals:         2       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0
  3284 ;;      Totals:         3       0       0       0       0
  3285 ;;Total ram usage:        3 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; This function calls:
  3288 ;;		Nothing
  3289 ;; This function is called by:
  3290 ;;		_fround
  3291 ;;		_scale
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294  05B4                     ___bmul:	
  3295                           
  3296                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3297                           ;___bmul@multiplier stored from wreg
  3298  05B4  00FB               	movwf	___bmul@multiplier
  3299  05B5  01FA               	clrf	___bmul@product
  3300  05B6                     l4699:	
  3301  05B6  0879               	movf	___bmul@multiplicand,w
  3302  05B7  187B               	btfsc	___bmul@multiplier,0
  3303  05B8  07FA               	addwf	___bmul@product,f
  3304  05B9  1003               	clrc
  3305  05BA  0DF9               	rlf	___bmul@multiplicand,f
  3306  05BB  1003               	clrc
  3307  05BC  0CFB               	rrf	___bmul@multiplier,f
  3308  05BD  08FB               	movf	___bmul@multiplier,f
  3309  05BE  1D03               	skipz
  3310  05BF  2DB6               	goto	l4699
  3311  05C0  087A               	movf	___bmul@product,w
  3312  05C1  0008               	return
  3313  05C2                     __end_of___bmul:	
  3314  05C2                     __ptext534:	
  3315 ;; =============== function ___fttol ends ============
  3316                           
  3317                           
  3318 ;; *************** function ___ftpack *****************
  3319 ;; Defined at:
  3320 ;;		line 63 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\float.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  arg             3    0[COMMON] unsigned um
  3323 ;;  exp             1    3[COMMON] unsigned char 
  3324 ;;  sign            1    4[COMMON] unsigned char 
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;                  3    0[COMMON] float 
  3329 ;; Registers used:
  3330 ;;		wreg, status,2, status,0
  3331 ;; Tracked objects:
  3332 ;;		On entry : 40/20
  3333 ;;		On exit  : 40/20
  3334 ;;		Unchanged: FFFBF/0
  3335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3336 ;;      Params:         5       0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0
  3338 ;;      Temps:          3       0       0       0       0
  3339 ;;      Totals:         8       0       0       0       0
  3340 ;;Total ram usage:        8 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; This function calls:
  3343 ;;		Nothing
  3344 ;; This function is called by:
  3345 ;;		___ftadd
  3346 ;;		___ftmul
  3347 ;;		___awtoft
  3348 ;;		___lltoft
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351  05C2                     ___ftpack:	
  3352                           
  3353                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3354  05C2  0873               	movf	___ftpack@exp,w
  3355  05C3  1903               	btfsc	3,2
  3356  05C4  2DCA               	goto	l4775
  3357  05C5  0872               	movf	___ftpack@arg+2,w
  3358  05C6  0471               	iorwf	___ftpack@arg+1,w
  3359  05C7  0470               	iorwf	___ftpack@arg,w
  3360  05C8  1D03               	skipz
  3361  05C9  2DD3               	goto	l4781
  3362  05CA                     l4775:	
  3363  05CA  01F0               	clrf	?___ftpack
  3364  05CB  01F1               	clrf	?___ftpack+1
  3365  05CC  01F2               	clrf	?___ftpack+2
  3366  05CD  0008               	return
  3367  05CE                     l4779:	
  3368  05CE  0AF3               	incf	___ftpack@exp,f
  3369  05CF  1003               	clrc
  3370  05D0  0CF2               	rrf	___ftpack@arg+2,f
  3371  05D1  0CF1               	rrf	___ftpack@arg+1,f
  3372  05D2  0CF0               	rrf	___ftpack@arg,f
  3373  05D3                     l4781:	
  3374  05D3  30FE               	movlw	254
  3375  05D4  0572               	andwf	___ftpack@arg+2,w
  3376  05D5  1903               	btfsc	3,2
  3377  05D6  2DE2               	goto	l4785
  3378  05D7  2DCE               	goto	l4779
  3379  05D8                     l4783:	
  3380  05D8  0AF3               	incf	___ftpack@exp,f
  3381  05D9  0AF0               	incf	___ftpack@arg,f
  3382  05DA  1903               	skipnz
  3383  05DB  0AF1               	incf	___ftpack@arg+1,f
  3384  05DC  1903               	skipnz
  3385  05DD  0AF2               	incf	___ftpack@arg+2,f
  3386  05DE  1003               	clrc
  3387  05DF  0CF2               	rrf	___ftpack@arg+2,f
  3388  05E0  0CF1               	rrf	___ftpack@arg+1,f
  3389  05E1  0CF0               	rrf	___ftpack@arg,f
  3390  05E2                     l4785:	
  3391  05E2  30FF               	movlw	255
  3392  05E3  0572               	andwf	___ftpack@arg+2,w
  3393  05E4  1903               	btfsc	3,2
  3394  05E5  2DEC               	goto	l4789
  3395  05E6  2DD8               	goto	l4783
  3396  05E7                     l4787:	
  3397  05E7  03F3               	decf	___ftpack@exp,f
  3398  05E8  1003               	clrc
  3399  05E9  0DF0               	rlf	___ftpack@arg,f
  3400  05EA  0DF1               	rlf	___ftpack@arg+1,f
  3401  05EB  0DF2               	rlf	___ftpack@arg+2,f
  3402  05EC                     l4789:	
  3403  05EC  1FF1               	btfss	___ftpack@arg+1,7
  3404  05ED  2DE7               	goto	l4787
  3405  05EE  1C73               	btfss	___ftpack@exp,0
  3406  05EF  13F1               	bcf	___ftpack@arg+1,7
  3407  05F0  1003               	clrc
  3408  05F1  0CF3               	rrf	___ftpack@exp,f
  3409  05F2  0873               	movf	___ftpack@exp,w
  3410  05F3  00F7               	movwf	??___ftpack+2
  3411  05F4  01F6               	clrf	??___ftpack+1
  3412  05F5  01F5               	clrf	??___ftpack
  3413  05F6  0875               	movf	??___ftpack,w
  3414  05F7  04F0               	iorwf	___ftpack@arg,f
  3415  05F8  0876               	movf	??___ftpack+1,w
  3416  05F9  04F1               	iorwf	___ftpack@arg+1,f
  3417  05FA  0877               	movf	??___ftpack+2,w
  3418  05FB  04F2               	iorwf	___ftpack@arg+2,f
  3419  05FC  0874               	movf	___ftpack@sign,w
  3420  05FD  1D03               	skipz
  3421  05FE  17F2               	bsf	___ftpack@arg+2,7
  3422  05FF  0008               	return
  3423  0600                     __end_of___ftpack:	
  3424  0600                     __ptext529:	
  3425 ;; =============== function ___lldiv ends ============
  3426                           
  3427                           
  3428 ;; *************** function ___ftge *****************
  3429 ;; Defined at:
  3430 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftge.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  ff1             3    0[COMMON] float 
  3433 ;;  ff2             3    3[COMMON] float 
  3434 ;; Auto vars:     Size  Location     Type
  3435 ;;		None
  3436 ;; Return value:  Size  Location     Type
  3437 ;;		None               void
  3438 ;; Registers used:
  3439 ;;		wreg, status,2, status,0
  3440 ;; Tracked objects:
  3441 ;;		On entry : 60/20
  3442 ;;		On exit  : 60/20
  3443 ;;		Unchanged: FFF9F/0
  3444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3445 ;;      Params:         6       0       0       0       0
  3446 ;;      Locals:         0       0       0       0       0
  3447 ;;      Temps:          0       0       0       0       0
  3448 ;;      Totals:         6       0       0       0       0
  3449 ;;Total ram usage:        6 bytes
  3450 ;; Hardware stack levels used:    1
  3451 ;; This function calls:
  3452 ;;		Nothing
  3453 ;; This function is called by:
  3454 ;;		_sprintf
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457  0600                     ___ftge:	
  3458                           
  3459                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  3460  0600  1FF2               	btfss	___ftge@ff1+2,7
  3461  0601  2E0F               	goto	l4913
  3462  0602  0870               	movf	___ftge@ff1,w
  3463  0603  3C00               	sublw	0
  3464  0604  00F0               	movwf	___ftge@ff1
  3465  0605  0871               	movf	___ftge@ff1+1,w
  3466  0606  1C03               	skipc
  3467  0607  0F71               	incfsz	___ftge@ff1+1,w
  3468  0608  3C00               	sublw	0
  3469  0609  00F1               	movwf	___ftge@ff1+1
  3470  060A  0872               	movf	___ftge@ff1+2,w
  3471  060B  1C03               	skipc
  3472  060C  0F72               	incfsz	___ftge@ff1+2,w
  3473  060D  3C80               	sublw	128
  3474  060E  00F2               	movwf	___ftge@ff1+2
  3475  060F                     l4913:	
  3476  060F  1FF5               	btfss	___ftge@ff2+2,7
  3477  0610  2E1E               	goto	l4917
  3478  0611  0873               	movf	___ftge@ff2,w
  3479  0612  3C00               	sublw	0
  3480  0613  00F3               	movwf	___ftge@ff2
  3481  0614  0874               	movf	___ftge@ff2+1,w
  3482  0615  1C03               	skipc
  3483  0616  0F74               	incfsz	___ftge@ff2+1,w
  3484  0617  3C00               	sublw	0
  3485  0618  00F4               	movwf	___ftge@ff2+1
  3486  0619  0875               	movf	___ftge@ff2+2,w
  3487  061A  1C03               	skipc
  3488  061B  0F75               	incfsz	___ftge@ff2+2,w
  3489  061C  3C80               	sublw	128
  3490  061D  00F5               	movwf	___ftge@ff2+2
  3491  061E                     l4917:	
  3492  061E  3080               	movlw	128
  3493  061F  06F2               	xorwf	___ftge@ff1+2,f
  3494  0620  06F5               	xorwf	___ftge@ff2+2,f
  3495  0621  0875               	movf	___ftge@ff2+2,w
  3496  0622  0272               	subwf	___ftge@ff1+2,w
  3497  0623  1D03               	skipz
  3498  0624  0008               	return
  3499  0625  0874               	movf	___ftge@ff2+1,w
  3500  0626  0271               	subwf	___ftge@ff1+1,w
  3501  0627  1D03               	skipz
  3502  0628  0008               	return
  3503  0629  0873               	movf	___ftge@ff2,w
  3504  062A  0270               	subwf	___ftge@ff1,w
  3505  062B  0008               	return
  3506  062C                     __end_of___ftge:	
  3507  062C                     __ptext533:	
  3508 ;; =============== function ___awdiv ends ============
  3509                           
  3510                           
  3511 ;; *************** function ___fttol *****************
  3512 ;; Defined at:
  3513 ;;		line 45 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fttol.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  f1              3    0[BANK0 ] float 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  lval            4    8[BANK0 ] unsigned long 
  3518 ;;  exp1            1   12[BANK0 ] unsigned char 
  3519 ;;  sign1           1    7[BANK0 ] unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  4    0[BANK0 ] long 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2, status,0
  3524 ;; Tracked objects:
  3525 ;;		On entry : 60/0
  3526 ;;		On exit  : 60/0
  3527 ;;		Unchanged: FFF9F/0
  3528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3529 ;;      Params:         0       4       0       0       0
  3530 ;;      Locals:         0       6       0       0       0
  3531 ;;      Temps:          0       3       0       0       0
  3532 ;;      Totals:         0      13       0       0       0
  3533 ;;Total ram usage:       13 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_sprintf
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541  062C                     ___fttol:	
  3542                           
  3543                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3544  062C  279F  120A  118A   	fcall	PL25	;call to abstracted procedure
  3545  062F  1003               	clrc
  3546  0630  0D25               	rlf	??___fttol+1,w
  3547  0631  0D26               	rlf	??___fttol+2,w
  3548  0632  00AC               	movwf	___fttol@exp1
  3549  0633  08AC               	movf	___fttol@exp1,f
  3550  0634  1D03               	skipz
  3551  0635  2E3B               	goto	l4803
  3552  0636                     l4801:	
  3553  0636  01A0               	clrf	?___fttol
  3554  0637  01A1               	clrf	?___fttol+1
  3555  0638  01A2               	clrf	?___fttol+2
  3556  0639  01A3               	clrf	?___fttol+3
  3557  063A  0008               	return
  3558  063B                     l4803:	
  3559  063B  279F  120A  118A   	fcall	PL25	;call to abstracted procedure
  3560  063E  3017               	movlw	23
  3561  063F                     u1825:	
  3562  063F  1003               	clrc
  3563  0640  0CA6               	rrf	??___fttol+2,f
  3564  0641  0CA5               	rrf	??___fttol+1,f
  3565  0642  0CA4               	rrf	??___fttol,f
  3566  0643  3EFF               	addlw	-1
  3567  0644  1D03               	skipz
  3568  0645  2E3F               	goto	u1825
  3569  0646  0824               	movf	??___fttol,w
  3570  0647  00A7               	movwf	___fttol@sign1
  3571  0648  17A1               	bsf	___fttol@f1+1,7
  3572  0649  01A2               	clrf	___fttol@f1+2
  3573  064A  0820               	movf	___fttol@f1,w
  3574  064B  00A8               	movwf	___fttol@lval
  3575  064C  0821               	movf	___fttol@f1+1,w
  3576  064D  00A9               	movwf	___fttol@lval+1
  3577  064E  0822               	movf	___fttol@f1+2,w
  3578  064F  00AA               	movwf	___fttol@lval+2
  3579  0650  308E               	movlw	142
  3580  0651  01AB               	clrf	___fttol@lval+3
  3581  0652  02AC               	subwf	___fttol@exp1,f
  3582  0653  1FAC               	btfss	___fttol@exp1,7
  3583  0654  2E62               	goto	l4823
  3584  0655  082C               	movf	___fttol@exp1,w
  3585  0656  3A80               	xorlw	128
  3586  0657  3E8F               	addlw	143
  3587  0658  1C03               	btfss	3,0
  3588  0659  2E36               	goto	l4801
  3589  065A                     l4819:	
  3590  065A  1003               	clrc
  3591  065B  0CAB               	rrf	___fttol@lval+3,f
  3592  065C  0CAA               	rrf	___fttol@lval+2,f
  3593  065D  0CA9               	rrf	___fttol@lval+1,f
  3594  065E  0CA8               	rrf	___fttol@lval,f
  3595  065F  0FAC               	incfsz	___fttol@exp1,f
  3596  0660  2E5A               	goto	l4819
  3597  0661  2E70               	goto	l4829
  3598  0662                     l4823:	
  3599  0662  3018               	movlw	24
  3600  0663  022C               	subwf	___fttol@exp1,w
  3601  0664  1803               	btfsc	3,0
  3602  0665  2E36               	goto	l4801
  3603  0666                     l2312:	
  3604  0666  08AC               	movf	___fttol@exp1,f
  3605  0667  1903               	btfsc	3,2
  3606  0668  2E70               	goto	l4829
  3607  0669  1003               	clrc
  3608  066A  0DA8               	rlf	___fttol@lval,f
  3609  066B  0DA9               	rlf	___fttol@lval+1,f
  3610  066C  0DAA               	rlf	___fttol@lval+2,f
  3611  066D  0DAB               	rlf	___fttol@lval+3,f
  3612  066E  03AC               	decf	___fttol@exp1,f
  3613  066F  2E66               	goto	l2312
  3614  0670                     l4829:	
  3615  0670  0827               	movf	___fttol@sign1,w
  3616  0671  1903               	btfsc	3,2
  3617  0672  2E7E               	goto	l4833
  3618  0673  09A8               	comf	___fttol@lval,f
  3619  0674  09A9               	comf	___fttol@lval+1,f
  3620  0675  09AA               	comf	___fttol@lval+2,f
  3621  0676  09AB               	comf	___fttol@lval+3,f
  3622  0677  0AA8               	incf	___fttol@lval,f
  3623  0678  1903               	skipnz
  3624  0679  0AA9               	incf	___fttol@lval+1,f
  3625  067A  1903               	skipnz
  3626  067B  0AAA               	incf	___fttol@lval+2,f
  3627  067C  1903               	skipnz
  3628  067D  0AAB               	incf	___fttol@lval+3,f
  3629  067E                     l4833:	
  3630  067E  082B               	movf	___fttol@lval+3,w
  3631  067F  00A3               	movwf	?___fttol+3
  3632  0680  082A               	movf	___fttol@lval+2,w
  3633  0681  00A2               	movwf	?___fttol+2
  3634  0682  0829               	movf	___fttol@lval+1,w
  3635  0683  00A1               	movwf	?___fttol+1
  3636  0684  0828               	movf	___fttol@lval,w
  3637  0685  00A0               	movwf	?___fttol
  3638  0686  0008               	return
  3639  0687                     __end_of___fttol:	
  3640  0687                     __ptext531:	
  3641 ;; =============== function ___ftneg ends ============
  3642                           
  3643                           
  3644 ;; *************** function ___llmod *****************
  3645 ;; Defined at:
  3646 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\llmod.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  divisor         4    0[BANK0 ] unsigned long 
  3649 ;;  dividend        4    4[BANK0 ] unsigned long 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  counter         1   13[COMMON] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  4    0[BANK0 ] unsigned long 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0
  3656 ;; Tracked objects:
  3657 ;;		On entry : 60/0
  3658 ;;		On exit  : 60/0
  3659 ;;		Unchanged: FFF9F/0
  3660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3661 ;;      Params:         0       8       0       0       0
  3662 ;;      Locals:         1       0       0       0       0
  3663 ;;      Temps:          0       0       0       0       0
  3664 ;;      Totals:         1       8       0       0       0
  3665 ;;Total ram usage:        9 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_sprintf
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673  0687                     ___llmod:	
  3674                           
  3675                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3676  0687  0823               	movf	___llmod@divisor+3,w
  3677  0688  0422               	iorwf	___llmod@divisor+2,w
  3678  0689  0421               	iorwf	___llmod@divisor+1,w
  3679  068A  0420               	iorwf	___llmod@divisor,w
  3680  068B  1903               	skipnz
  3681  068C  2EBC               	goto	l4897
  3682  068D  01FD               	clrf	___llmod@counter
  3683  068E                     L12:	
  3684  068E  0AFD               	incf	___llmod@counter,f
  3685  068F  1BA3               	btfsc	___llmod@divisor+3,7
  3686  0690  2E97               	goto	l4889
  3687  0691  1003               	clrc
  3688  0692  0DA0               	rlf	___llmod@divisor,f
  3689  0693  0DA1               	rlf	___llmod@divisor+1,f
  3690  0694  0DA2               	rlf	___llmod@divisor+2,f
  3691  0695  0DA3               	rlf	___llmod@divisor+3,f
  3692  0696  2E8E               	goto	L12
  3693  0697                     l4889:	
  3694  0697  0823               	movf	___llmod@divisor+3,w
  3695  0698  0227               	subwf	___llmod@dividend+3,w
  3696  0699  1D03               	skipz
  3697  069A  2EA5               	goto	u1985
  3698  069B  0822               	movf	___llmod@divisor+2,w
  3699  069C  0226               	subwf	___llmod@dividend+2,w
  3700  069D  1D03               	skipz
  3701  069E  2EA5               	goto	u1985
  3702  069F  0821               	movf	___llmod@divisor+1,w
  3703  06A0  0225               	subwf	___llmod@dividend+1,w
  3704  06A1  1D03               	skipz
  3705  06A2  2EA5               	goto	u1985
  3706  06A3  0820               	movf	___llmod@divisor,w
  3707  06A4  0224               	subwf	___llmod@dividend,w
  3708  06A5                     u1985:	
  3709  06A5  1C03               	skipc
  3710  06A6  2EB6               	goto	L13
  3711  06A7  0820               	movf	___llmod@divisor,w
  3712  06A8  02A4               	subwf	___llmod@dividend,f
  3713  06A9  0821               	movf	___llmod@divisor+1,w
  3714  06AA  1C03               	skipc
  3715  06AB  0F21               	incfsz	___llmod@divisor+1,w
  3716  06AC  02A5               	subwf	___llmod@dividend+1,f
  3717  06AD  0822               	movf	___llmod@divisor+2,w
  3718  06AE  1C03               	skipc
  3719  06AF  0F22               	incfsz	___llmod@divisor+2,w
  3720  06B0  02A6               	subwf	___llmod@dividend+2,f
  3721  06B1  0823               	movf	___llmod@divisor+3,w
  3722  06B2  1C03               	skipc
  3723  06B3  0F23               	incfsz	___llmod@divisor+3,w
  3724  06B4  02A7               	subwf	___llmod@dividend+3,f
  3725  06B5  1003               	clrc
  3726  06B6                     L13:	
  3727  06B6  0CA3               	rrf	___llmod@divisor+3,f
  3728  06B7  0CA2               	rrf	___llmod@divisor+2,f
  3729  06B8  0CA1               	rrf	___llmod@divisor+1,f
  3730  06B9  0CA0               	rrf	___llmod@divisor,f
  3731  06BA  0BFD               	decfsz	___llmod@counter,f
  3732  06BB  2E97               	goto	l4889
  3733  06BC                     l4897:	
  3734  06BC  0827               	movf	___llmod@dividend+3,w
  3735  06BD  00A3               	movwf	?___llmod+3
  3736  06BE  0826               	movf	___llmod@dividend+2,w
  3737  06BF  00A2               	movwf	?___llmod+2
  3738  06C0  0825               	movf	___llmod@dividend+1,w
  3739  06C1  00A1               	movwf	?___llmod+1
  3740  06C2  0824               	movf	___llmod@dividend,w
  3741  06C3  00A0               	movwf	?___llmod
  3742  06C4  0008               	return
  3743  06C5                     __end_of___llmod:	
  3744  06C5                     __ptext537:	
  3745 ;; =============== function ___lbdiv ends ============
  3746                           
  3747                           
  3748 ;; *************** function ___wmul *****************
  3749 ;; Defined at:
  3750 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\wmul.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  multiplier      2    0[COMMON] unsigned int 
  3753 ;;  multiplicand    2    2[COMMON] unsigned int 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  product         2    4[COMMON] unsigned int 
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  2    0[COMMON] unsigned int 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0
  3760 ;; Tracked objects:
  3761 ;;		On entry : 160/20
  3762 ;;		On exit  : 160/20
  3763 ;;		Unchanged: FFE9F/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3765 ;;      Params:         4       0       0       0       0
  3766 ;;      Locals:         2       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0
  3768 ;;      Totals:         6       0       0       0       0
  3769 ;;Total ram usage:        6 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; This function calls:
  3772 ;;		Nothing
  3773 ;; This function is called by:
  3774 ;;		_fround
  3775 ;;		_scale
  3776 ;;		_sprintf
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779  06C5                     ___wmul:	
  3780                           
  3781                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3782  06C5  01F4               	clrf	___wmul@product
  3783  06C6  01F5               	clrf	___wmul@product+1
  3784  06C7                     l4715:	
  3785  06C7  1C70               	btfss	___wmul@multiplier,0
  3786  06C8  2ECF               	goto	l4719
  3787  06C9  0872               	movf	___wmul@multiplicand,w
  3788  06CA  07F4               	addwf	___wmul@product,f
  3789  06CB  1803               	skipnc
  3790  06CC  0AF5               	incf	___wmul@product+1,f
  3791  06CD  0873               	movf	___wmul@multiplicand+1,w
  3792  06CE  07F5               	addwf	___wmul@product+1,f
  3793  06CF                     l4719:	
  3794  06CF  1003               	clrc
  3795  06D0  0DF2               	rlf	___wmul@multiplicand,f
  3796  06D1  0DF3               	rlf	___wmul@multiplicand+1,f
  3797  06D2  1003               	clrc
  3798  06D3  0CF1               	rrf	___wmul@multiplier+1,f
  3799  06D4  0CF0               	rrf	___wmul@multiplier,f
  3800  06D5  0871               	movf	___wmul@multiplier+1,w
  3801  06D6  0470               	iorwf	___wmul@multiplier,w
  3802  06D7  1D03               	skipz
  3803  06D8  2EC7               	goto	l4715
  3804  06D9  0875               	movf	___wmul@product+1,w
  3805  06DA  00F1               	movwf	?___wmul+1
  3806  06DB  0874               	movf	___wmul@product,w
  3807  06DC  00F0               	movwf	?___wmul
  3808  06DD  0008               	return
  3809  06DE                     __end_of___wmul:	
  3810  06DE                     PL3:	
  3811  06DE  0836               	movf	sprintf@c^(0+128),w
  3812  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3813  06E0  00D6               	movwf	??_sprintf
  3814  06E1  1003               	clrc
  3815  06E2  0DD6               	rlf	??_sprintf,f
  3816  06E3  1003               	clrc
  3817  06E4  0D56               	rlf	??_sprintf,w
  3818  06E5  3E4F               	addlw	low (_dpowers-__stringbase)
  3819  06E6  0084               	movwf	4
  3820  06E7  0008               	return
  3821  06E8                     PL4:	
  3822  06E8  300A               	movlw	10
  3823  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3824  06EA  00A0               	movwf	?___llmod
  3825  06EB  01A1               	clrf	?___llmod+1
  3826  06EC  01A2               	clrf	?___llmod+2
  3827  06ED  01A3               	clrf	?___llmod+3
  3828  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  3829  06EF  0008               	return
  3830  06F0                     PL5:	
  3831  06F0  0823               	movf	?___fttol+3,w
  3832  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  3833  06F2  00AC               	movwf	(sprintf@_val+3)^(0+128)
  3834  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  3835  06F4  0822               	movf	?___fttol+2,w
  3836  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3837  06F6  00AB               	movwf	(sprintf@_val+2)^(0+128)
  3838  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  3839  06F8  0821               	movf	?___fttol+1,w
  3840  06F9  1683               	bsf	3,5	;RP0=1, select bank1
  3841  06FA  00AA               	movwf	(sprintf@_val+1)^(0+128)
  3842  06FB  1283               	bcf	3,5	;RP0=0, select bank0
  3843  06FC  0820               	movf	?___fttol,w
  3844  06FD  0008               	return
  3845  06FE                     PL6:	
  3846  06FE  0870               	movf	?___awmod,w
  3847  06FF  00BF               	movwf	??_scale
  3848  0700  0871               	movf	?___awmod+1,w
  3849  0701  00C0               	movwf	??_scale+1
  3850  0702  083F               	movf	??_scale,w
  3851  0703  073F               	addwf	??_scale,w
  3852  0704  073F               	addwf	??_scale,w
  3853  0705  0008               	return
  3854  0706                     PL7:	
  3855  0706  0876               	movf	?___awdiv,w
  3856  0707  00C1               	movwf	??_scale+2
  3857  0708  0877               	movf	?___awdiv+1,w
  3858  0709  00C2               	movwf	??_scale+3
  3859  070A  0841               	movf	??_scale+2,w
  3860  070B  0741               	addwf	??_scale+2,w
  3861  070C  0741               	addwf	??_scale+2,w
  3862  070D  0008               	return
  3863  070E                     PL8:	
  3864  070E  082D               	movf	?___ftmul,w
  3865  070F  00BC               	movwf	?_scale
  3866  0710  082E               	movf	?___ftmul+1,w
  3867  0711  00BD               	movwf	?_scale+1
  3868  0712  082F               	movf	?___ftmul+2,w
  3869  0713  00BE               	movwf	?_scale+2
  3870  0714  0008               	return
  3871  0715                     PL9:	
  3872  0715  083C               	movf	?_scale,w
  3873  0716  1683               	bsf	3,5	;RP0=1, select bank1
  3874  0717  00AD               	movwf	sprintf@integ^(0+128)
  3875  0718  1283               	bcf	3,5	;RP0=0, select bank0
  3876  0719  083D               	movf	?_scale+1,w
  3877  071A  1683               	bsf	3,5	;RP0=1, select bank1
  3878  071B  00AE               	movwf	(sprintf@integ+1)^(0+128)
  3879  071C  1283               	bcf	3,5	;RP0=0, select bank0
  3880  071D  083E               	movf	?_scale+2,w
  3881  071E  1683               	bsf	3,5	;RP0=1, select bank1
  3882  071F  00AF               	movwf	(sprintf@integ+2)^(0+128)
  3883  0720  0833               	movf	sprintf@fval^(0+128),w
  3884  0721  0008               	return
  3885  0722                     PL10:	
  3886  0722  082D               	movf	?___ftmul,w
  3887  0723  00C3               	movwf	_scale$2835
  3888  0724  082E               	movf	?___ftmul+1,w
  3889  0725  00C4               	movwf	_scale$2835+1
  3890  0726  082F               	movf	?___ftmul+2,w
  3891  0727  00C5               	movwf	_scale$2835+2
  3892  0728  300A               	movlw	10
  3893  0729  00F0               	movwf	?___awmod
  3894  072A  01F1               	clrf	?___awmod+1
  3895  072B  0846               	movf	scale@scl,w
  3896  072C  00F2               	movwf	?___awmod+2
  3897  072D  01F3               	clrf	?___awmod+3
  3898  072E  0008               	return
  3899  072F                     PL11:	
  3900  072F  1283               	bcf	3,5	;RP0=0, select bank0
  3901  0730  00A0               	movwf	?___fttol
  3902  0731  1683               	bsf	3,5	;RP0=1, select bank1
  3903  0732  0834               	movf	(sprintf@fval+1)^(0+128),w
  3904  0733  1283               	bcf	3,5	;RP0=0, select bank0
  3905  0734  00A1               	movwf	?___fttol+1
  3906  0735  1683               	bsf	3,5	;RP0=1, select bank1
  3907  0736  0835               	movf	(sprintf@fval+2)^(0+128),w
  3908  0737  1283               	bcf	3,5	;RP0=0, select bank0
  3909  0738  00A2               	movwf	?___fttol+2
  3910  0739  0008               	return
  3911  073A                     PL12:	
  3912  073A  1283               	bcf	3,5	;RP0=0, select bank0
  3913  073B  00AD               	movwf	?___ftmul
  3914  073C  1683               	bsf	3,5	;RP0=1, select bank1
  3915  073D  0834               	movf	(sprintf@fval+1)^(0+128),w
  3916  073E  1283               	bcf	3,5	;RP0=0, select bank0
  3917  073F  00AE               	movwf	?___ftmul+1
  3918  0740  1683               	bsf	3,5	;RP0=1, select bank1
  3919  0741  0835               	movf	(sprintf@fval+2)^(0+128),w
  3920  0742  1283               	bcf	3,5	;RP0=0, select bank0
  3921  0743  00AF               	movwf	?___ftmul+2
  3922  0744  0008               	return
  3923  0745                     PL13:	
  3924  0745  00F3               	movwf	?___lldiv+3
  3925  0746  1683               	bsf	3,5	;RP0=1, select bank1
  3926  0747  082C               	movf	(sprintf@_val+3)^(0+128),w
  3927  0748  00F7               	movwf	?___lldiv+7
  3928  0749  082B               	movf	(sprintf@_val+2)^(0+128),w
  3929  074A  00F6               	movwf	?___lldiv+6
  3930  074B  082A               	movf	(sprintf@_val+1)^(0+128),w
  3931  074C  00F5               	movwf	?___lldiv+5
  3932  074D  0829               	movf	sprintf@_val^(0+128),w
  3933  074E  00F4               	movwf	?___lldiv+4
  3934  074F  0008               	return
  3935  0750                     PL14:	
  3936  0750  00F6               	movwf	?___awdiv
  3937  0751  01F7               	clrf	?___awdiv+1
  3938  0752  0846               	movf	scale@scl,w
  3939  0753  00F2               	movwf	?___awmod+2
  3940  0754  01F3               	clrf	?___awmod+3
  3941  0755  1BF2               	btfsc	?___awmod+2,7
  3942  0756  03F3               	decf	?___awmod+3,f
  3943  0757  3064               	movlw	100
  3944  0758  00F0               	movwf	?___awmod
  3945  0759  01F1               	clrf	?___awmod+1
  3946  075A  0008               	return
  3947  075B                     PL16:	
  3948  075B  0873               	movf	?___lldiv+3,w
  3949  075C  1283               	bcf	3,5	;RP0=0, select bank0
  3950  075D  00A7               	movwf	?___llmod+7
  3951  075E  0872               	movf	?___lldiv+2,w
  3952  075F  00A6               	movwf	?___llmod+6
  3953  0760  0871               	movf	?___lldiv+1,w
  3954  0761  00A5               	movwf	?___llmod+5
  3955  0762  0870               	movf	?___lldiv,w
  3956  0763  00A4               	movwf	?___llmod+4
  3957  0764  0008               	return
  3958  0765                     PL17:	
  3959  0765  07B7               	addwf	___ftmul@f3_as_product,f
  3960  0766  0831               	movf	___ftmul@f2+1,w
  3961  0767  1103               	clrz
  3962  0768  1803               	skipnc
  3963  0769  0A31               	incf	___ftmul@f2+1,w
  3964  076A  1D03               	btfss	3,2
  3965  076B  07B8               	addwf	___ftmul@f3_as_product+1,f
  3966  076C  0832               	movf	___ftmul@f2+2,w
  3967  076D  1103               	clrz
  3968  076E  0008               	return
  3969  076F                     PL18:	
  3970  076F  0820               	movf	?___llmod,w
  3971  0770  3E30               	addlw	48
  3972  0771  00D7               	movwf	??_sprintf+1
  3973  0772  1683               	bsf	3,5	;RP0=1, select bank1
  3974  0773  0830               	movf	sprintf@sp^(0+128),w
  3975  0774  0084               	movwf	4
  3976  0775  1283               	bcf	3,5	;RP0=0, select bank0
  3977  0776  0857               	movf	??_sprintf+1,w
  3978  0777  0008               	return
  3979  0778                     PL19:	
  3980  0778  082D               	movf	sprintf@integ^(0+128),w
  3981  0779  00F0               	movwf	?___ftge
  3982  077A  082E               	movf	(sprintf@integ+1)^(0+128),w
  3983  077B  00F1               	movwf	?___ftge+1
  3984  077C  082F               	movf	(sprintf@integ+2)^(0+128),w
  3985  077D  00F2               	movwf	?___ftge+2
  3986  077E  0008               	return
  3987  077F                     PL20:	
  3988  077F  00AF               	movwf	?___ftmul+2
  3989  0780  3064               	movlw	100
  3990  0781  00F6               	movwf	?___awdiv
  3991  0782  01F7               	clrf	?___awdiv+1
  3992  0783  0846               	movf	scale@scl,w
  3993  0784  00F8               	movwf	?___awdiv+2
  3994  0785  01F9               	clrf	?___awdiv+3
  3995  0786  0008               	return
  3996  0787                     PL21:	
  3997  0787  00AF               	movwf	?___ftmul+2
  3998  0788  0843               	movf	_scale$2835,w
  3999  0789  00B0               	movwf	?___ftmul+3
  4000  078A  0844               	movf	_scale$2835+1,w
  4001  078B  00B1               	movwf	?___ftmul+4
  4002  078C  0845               	movf	_scale$2835+2,w
  4003  078D  00B2               	movwf	?___ftmul+5
  4004  078E  0008               	return
  4005  078F                     PL23:	
  4006  078F  00AF               	movwf	?___ftmul+2
  4007  0790  300A               	movlw	10
  4008  0791  00F6               	movwf	?___awdiv
  4009  0792  01F7               	clrf	?___awdiv+1
  4010  0793  0846               	movf	scale@scl,w
  4011  0794  00F8               	movwf	?___awdiv+2
  4012  0795  01F9               	clrf	?___awdiv+3
  4013  0796  0008               	return
  4014  0797                     PL24:	
  4015  0797  0876               	movf	?___awdiv,w
  4016  0798  00BF               	movwf	??_scale
  4017  0799  0877               	movf	?___awdiv+1,w
  4018  079A  00C0               	movwf	??_scale+1
  4019  079B  083F               	movf	??_scale,w
  4020  079C  073F               	addwf	??_scale,w
  4021  079D  073F               	addwf	??_scale,w
  4022  079E  0008               	return
  4023  079F                     PL25:	
  4024  079F  0820               	movf	___fttol@f1,w
  4025  07A0  00A4               	movwf	??___fttol
  4026  07A1  0821               	movf	___fttol@f1+1,w
  4027  07A2  00A5               	movwf	??___fttol+1
  4028  07A3  0822               	movf	___fttol@f1+2,w
  4029  07A4  00A6               	movwf	??___fttol+2
  4030  07A5  0008               	return
  4031  07A6                     PL27:	
  4032  07A6  0084               	movwf	4
  4033  07A7  3030               	movlw	48
  4034  07A8  1383               	bcf	3,7	;select IRP bank0
  4035  07A9  0080               	movwf	0
  4036  07AA  30FF               	movlw	-1
  4037  07AB  0AB0               	incf	sprintf@sp^(0+128),f
  4038  07AC  0008               	return
  4039  07AD                     PL28:	
  4040  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  4041  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  4042  07AF  0008               	return
  4043  07B0                     __ptext528:	
  4044 ;; =============== function ___awmod ends ============
  4045                           
  4046                           
  4047 ;; *************** function ___lldiv *****************
  4048 ;; Defined at:
  4049 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lldiv.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  divisor         4    0[COMMON] unsigned long 
  4052 ;;  dividend        4    4[COMMON] unsigned long 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  quotient        4    8[COMMON] unsigned long 
  4055 ;;  counter         1   12[COMMON] unsigned char 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  4    0[COMMON] unsigned long 
  4058 ;; Registers used:
  4059 ;;		wreg, status,2, status,0
  4060 ;; Tracked objects:
  4061 ;;		On entry : 60/20
  4062 ;;		On exit  : 60/20
  4063 ;;		Unchanged: FFF9F/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4065 ;;      Params:         8       0       0       0       0
  4066 ;;      Locals:         5       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0
  4068 ;;      Totals:        13       0       0       0       0
  4069 ;;Total ram usage:       13 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; This function calls:
  4072 ;;		Nothing
  4073 ;; This function is called by:
  4074 ;;		_sprintf
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077  07B0                     ___lldiv:	
  4078                           
  4079                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4080  07B0  01F8               	clrf	___lldiv@quotient
  4081  07B1  01F9               	clrf	___lldiv@quotient+1
  4082  07B2  01FA               	clrf	___lldiv@quotient+2
  4083  07B3  01FB               	clrf	___lldiv@quotient+3
  4084  07B4  0873               	movf	___lldiv@divisor+3,w
  4085  07B5  0472               	iorwf	___lldiv@divisor+2,w
  4086  07B6  0471               	iorwf	___lldiv@divisor+1,w
  4087  07B7  0470               	iorwf	___lldiv@divisor,w
  4088  07B8  1903               	skipnz
  4089  07B9  2FEF               	goto	l4951
  4090  07BA  01FC               	clrf	___lldiv@counter
  4091  07BB                     L9:	
  4092  07BB  0AFC               	incf	___lldiv@counter,f
  4093  07BC  1BF3               	btfsc	___lldiv@divisor+3,7
  4094  07BD  2FC4               	goto	l4939
  4095  07BE  1003               	clrc
  4096  07BF  0DF0               	rlf	___lldiv@divisor,f
  4097  07C0  0DF1               	rlf	___lldiv@divisor+1,f
  4098  07C1  0DF2               	rlf	___lldiv@divisor+2,f
  4099  07C2  0DF3               	rlf	___lldiv@divisor+3,f
  4100  07C3  2FBB               	goto	L9
  4101  07C4                     l4939:	
  4102  07C4  1003               	clrc
  4103  07C5  0DF8               	rlf	___lldiv@quotient,f
  4104  07C6  0DF9               	rlf	___lldiv@quotient+1,f
  4105  07C7  0DFA               	rlf	___lldiv@quotient+2,f
  4106  07C8  0DFB               	rlf	___lldiv@quotient+3,f
  4107  07C9  0873               	movf	___lldiv@divisor+3,w
  4108  07CA  0277               	subwf	___lldiv@dividend+3,w
  4109  07CB  1D03               	skipz
  4110  07CC  2FD7               	goto	u2065
  4111  07CD  0872               	movf	___lldiv@divisor+2,w
  4112  07CE  0276               	subwf	___lldiv@dividend+2,w
  4113  07CF  1D03               	skipz
  4114  07D0  2FD7               	goto	u2065
  4115  07D1  0871               	movf	___lldiv@divisor+1,w
  4116  07D2  0275               	subwf	___lldiv@dividend+1,w
  4117  07D3  1D03               	skipz
  4118  07D4  2FD7               	goto	u2065
  4119  07D5  0870               	movf	___lldiv@divisor,w
  4120  07D6  0274               	subwf	___lldiv@dividend,w
  4121  07D7                     u2065:	
  4122  07D7  1C03               	skipc
  4123  07D8  2FE9               	goto	L10
  4124  07D9  0870               	movf	___lldiv@divisor,w
  4125  07DA  02F4               	subwf	___lldiv@dividend,f
  4126  07DB  0871               	movf	___lldiv@divisor+1,w
  4127  07DC  1C03               	skipc
  4128  07DD  0F71               	incfsz	___lldiv@divisor+1,w
  4129  07DE  02F5               	subwf	___lldiv@dividend+1,f
  4130  07DF  0872               	movf	___lldiv@divisor+2,w
  4131  07E0  1C03               	skipc
  4132  07E1  0F72               	incfsz	___lldiv@divisor+2,w
  4133  07E2  02F6               	subwf	___lldiv@dividend+2,f
  4134  07E3  0873               	movf	___lldiv@divisor+3,w
  4135  07E4  1C03               	skipc
  4136  07E5  0F73               	incfsz	___lldiv@divisor+3,w
  4137  07E6  02F7               	subwf	___lldiv@dividend+3,f
  4138  07E7  1478               	bsf	___lldiv@quotient,0
  4139  07E8  1003               	clrc
  4140  07E9                     L10:	
  4141  07E9  0CF3               	rrf	___lldiv@divisor+3,f
  4142  07EA  0CF2               	rrf	___lldiv@divisor+2,f
  4143  07EB  0CF1               	rrf	___lldiv@divisor+1,f
  4144  07EC  0CF0               	rrf	___lldiv@divisor,f
  4145  07ED  0BFC               	decfsz	___lldiv@counter,f
  4146  07EE  2FC4               	goto	l4939
  4147  07EF                     l4951:	
  4148  07EF  087B               	movf	___lldiv@quotient+3,w
  4149  07F0  00F3               	movwf	?___lldiv+3
  4150  07F1  087A               	movf	___lldiv@quotient+2,w
  4151  07F2  00F2               	movwf	?___lldiv+2
  4152  07F3  0879               	movf	___lldiv@quotient+1,w
  4153  07F4  00F1               	movwf	?___lldiv+1
  4154  07F5  0878               	movf	___lldiv@quotient,w
  4155  07F6  00F0               	movwf	?___lldiv
  4156  07F7  0008               	return
  4157  07F8                     __end_of___lldiv:	
  4158  07F8                     __ptext530:	
  4159 ;; =============== function ___ftge ends ============
  4160                           
  4161                           
  4162 ;; *************** function ___ftneg *****************
  4163 ;; Defined at:
  4164 ;;		line 16 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftneg.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  f1              3    0[COMMON] float 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  3    0[COMMON] float 
  4171 ;; Registers used:
  4172 ;;		wreg
  4173 ;; Tracked objects:
  4174 ;;		On entry : 160/20
  4175 ;;		On exit  : 160/20
  4176 ;;		Unchanged: FFE9F/0
  4177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4178 ;;      Params:         3       0       0       0       0
  4179 ;;      Locals:         0       0       0       0       0
  4180 ;;      Temps:          0       0       0       0       0
  4181 ;;      Totals:         3       0       0       0       0
  4182 ;;Total ram usage:        3 bytes
  4183 ;; Hardware stack levels used:    1
  4184 ;; This function calls:
  4185 ;;		Nothing
  4186 ;; This function is called by:
  4187 ;;		_sprintf
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190  07F8                     ___ftneg:	
  4191                           
  4192                           ; Regs used in ___ftneg: [wreg]
  4193  07F8  0872               	movf	___ftneg@f1+2,w
  4194  07F9  0471               	iorwf	___ftneg@f1+1,w
  4195  07FA  0470               	iorwf	___ftneg@f1,w
  4196  07FB  1903               	skipnz
  4197  07FC  0008               	return
  4198  07FD  3080               	movlw	128
  4199  07FE  06F2               	xorwf	___ftneg@f1+2,f
  4200  07FF  0008               	return
  4201  0800                     __end_of___ftneg:	
  4202                           
  4203                           	psect	text516
  4204  0ABB                     __ptext516:	
  4205 ;; =============== function _lcd_goto ends ============
  4206                           
  4207                           
  4208 ;; *************** function _lcd_putch *****************
  4209 ;; Defined at:
  4210 ;;		line 91 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  c               1    wreg     unsigned char 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  c               1    5[COMMON] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;		None               void
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0, pclath, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 160/0
  4221 ;;		On exit  : 160/0
  4222 ;;		Unchanged: FFE9F/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4224 ;;      Params:         0       0       0       0       0
  4225 ;;      Locals:         1       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0
  4227 ;;      Totals:         1       0       0       0       0
  4228 ;;Total ram usage:        1 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    3
  4231 ;; This function calls:
  4232 ;;		_lcd_write
  4233 ;; This function is called by:
  4234 ;;		_main
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237  0ABB                     _lcd_putch:	
  4238                           
  4239                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  4240                           ;lcd_putch@c stored from wreg
  4241  0ABB  00F5               	movwf	lcd_putch@c
  4242                           
  4243                           ;C_PuertoSerial_usart.c: 92: RA7=1;
  4244  0ABC  1785               	bsf	5,7
  4245                           
  4246                           ;C_PuertoSerial_usart.c: 93: lcd_write(c);
  4247  0ABD  2ACB               	ljmp	_lcd_write
  4248  0ABE                     __end_of_lcd_putch:	
  4249  0ABE                     __ptext515:	
  4250 ;; =============== function _sprintf ends ============
  4251                           
  4252                           
  4253 ;; *************** function _lcd_goto *****************
  4254 ;; Defined at:
  4255 ;;		line 97 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  pos             1    wreg     unsigned char 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  pos             1    5[COMMON] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;		None               void
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0, pclath, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 160/0
  4266 ;;		On exit  : 160/0
  4267 ;;		Unchanged: FFE9F/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4269 ;;      Params:         0       0       0       0       0
  4270 ;;      Locals:         1       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0
  4272 ;;      Totals:         1       0       0       0       0
  4273 ;;Total ram usage:        1 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    3
  4276 ;; This function calls:
  4277 ;;		_lcd_write
  4278 ;; This function is called by:
  4279 ;;		_main
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282  0ABE                     _lcd_goto:	
  4283                           
  4284                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  4285                           ;lcd_goto@pos stored from wreg
  4286  0ABE  00F5               	movwf	lcd_goto@pos
  4287                           
  4288                           ;C_PuertoSerial_usart.c: 98: RA7=0;
  4289  0ABF  1385               	bcf	5,7
  4290                           
  4291                           ;C_PuertoSerial_usart.c: 99: lcd_write(0x80+pos);
  4292  0AC0  3E80               	addlw	128
  4293  0AC1  2ACB               	ljmp	_lcd_write
  4294  0AC2                     __end_of_lcd_goto:	
  4295  0AC2                     __ptext517:	
  4296 ;; =============== function _lcd_putch ends ============
  4297                           
  4298                           
  4299 ;; *************** function _lcd_clear *****************
  4300 ;; Defined at:
  4301 ;;		line 77 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;		None
  4304 ;; Auto vars:     Size  Location     Type
  4305 ;;		None
  4306 ;; Return value:  Size  Location     Type
  4307 ;;		None               void
  4308 ;; Registers used:
  4309 ;;		wreg, status,2, status,0, pclath, cstack
  4310 ;; Tracked objects:
  4311 ;;		On entry : 17F/0
  4312 ;;		On exit  : 11F/0
  4313 ;;		Unchanged: FFE80/0
  4314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4315 ;;      Params:         0       0       0       0       0
  4316 ;;      Locals:         0       0       0       0       0
  4317 ;;      Temps:          0       0       0       0       0
  4318 ;;      Totals:         0       0       0       0       0
  4319 ;;Total ram usage:        0 bytes
  4320 ;; Hardware stack levels used:    1
  4321 ;; Hardware stack levels required when called:    3
  4322 ;; This function calls:
  4323 ;;		_lcd_write
  4324 ;;		_pause
  4325 ;; This function is called by:
  4326 ;;		_main
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329  0AC2                     _lcd_clear:	
  4330  0AC2  3001               	movlw	1
  4331                           
  4332                           ;C_PuertoSerial_usart.c: 78: RA7=0;
  4333                           
  4334                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  4335  0AC3  1385               	bcf	5,7
  4336                           
  4337                           ;C_PuertoSerial_usart.c: 79: lcd_write(0x1);
  4338  0AC4  22CB  120A  158A   	fcall	_lcd_write
  4339                           
  4340                           ;C_PuertoSerial_usart.c: 80: pause(2);
  4341  0AC7  3002               	movlw	2
  4342  0AC8  00F0               	movwf	?_pause
  4343  0AC9  01F1               	clrf	?_pause+1
  4344  0ACA  2ADD               	ljmp	l4991
  4345  0ACB                     __end_of_lcd_clear:	
  4346  0ACB                     __ptext521:	
  4347 ;; =============== function _fround ends ============
  4348                           
  4349                           
  4350 ;; *************** function _lcd_write *****************
  4351 ;; Defined at:
  4352 ;;		line 68 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  c               1    wreg     unsigned char 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  c               1    4[COMMON] unsigned char 
  4357 ;; Return value:  Size  Location     Type
  4358 ;;		None               void
  4359 ;; Registers used:
  4360 ;;		wreg, status,2, status,0, pclath, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 100/0
  4363 ;;		On exit  : 160/0
  4364 ;;		Unchanged: FFE9F/0
  4365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4366 ;;      Params:         0       0       0       0       0
  4367 ;;      Locals:         1       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0
  4369 ;;      Totals:         1       0       0       0       0
  4370 ;;Total ram usage:        1 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    2
  4373 ;; This function calls:
  4374 ;;		_pause
  4375 ;; This function is called by:
  4376 ;;		_lcd_clear
  4377 ;;		_lcd_putch
  4378 ;;		_lcd_goto
  4379 ;;		_main
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382  0ACB                     _lcd_write:	
  4383                           
  4384                           ; Regs used in _lcd_write: [wreg+status,2+status,0+pclath+cstack]
  4385                           ;lcd_write@c stored from wreg
  4386  0ACB  00F4               	movwf	lcd_write@c
  4387                           
  4388                           ;C_PuertoSerial_usart.c: 69: pause(1);
  4389  0ACC  01F0               	clrf	?_pause
  4390  0ACD  0AF0               	incf	?_pause,f
  4391  0ACE  01F1               	clrf	?_pause+1
  4392  0ACF  22DD               	fcall	_pause
  4393                           
  4394                           ;C_PuertoSerial_usart.c: 70: PORTD=((c >> 4) & 0x0F);
  4395  0AD0  0E74               	swapf	lcd_write@c,w
  4396  0AD1  390F               	andlw	15
  4397  0AD2  1283               	bcf	3,5	;RP0=0, select bank0
  4398  0AD3  1303               	bcf	3,6	;RP1=0, select bank0
  4399  0AD4  0088               	movwf	8	;volatile
  4400                           
  4401                           ;C_PuertoSerial_usart.c: 71: ((RA6=1),(RA6=0));
  4402  0AD5  1705               	bsf	5,6
  4403  0AD6  1305               	bcf	5,6
  4404                           
  4405                           ;C_PuertoSerial_usart.c: 72: PORTD=(c & 0x0F);
  4406  0AD7  0874               	movf	lcd_write@c,w
  4407  0AD8  390F               	andlw	15
  4408  0AD9  0088               	movwf	8	;volatile
  4409                           
  4410                           ;C_PuertoSerial_usart.c: 73: ((RA6=1),(RA6=0));
  4411  0ADA  1705               	bsf	5,6
  4412  0ADB  1305               	bcf	5,6
  4413  0ADC  0008               	return
  4414  0ADD                     __end_of_lcd_write:	
  4415  0ADD                     __ptext526:	
  4416 ;; =============== function ___ftadd ends ============
  4417                           
  4418                           
  4419 ;; *************** function _pause *****************
  4420 ;; Defined at:
  4421 ;;		line 20 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  msvalue         2    0[COMMON] unsigned short 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  x               2    2[COMMON] unsigned short 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;		None               void
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0, pclath, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: FFF9F/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4435 ;;      Params:         2       0       0       0       0
  4436 ;;      Locals:         2       0       0       0       0
  4437 ;;      Temps:          0       0       0       0       0
  4438 ;;      Totals:         4       0       0       0       0
  4439 ;;Total ram usage:        4 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    1
  4442 ;; This function calls:
  4443 ;;		_msecbase
  4444 ;; This function is called by:
  4445 ;;		_lcd_write
  4446 ;;		_lcd_clear
  4447 ;;		_main
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450  0ADD                     _pause:	
  4451  0ADD                     l4991:	
  4452                           ; Regs used in _pause: [wreg+status,2+status,0+pclath+cstack]
  4453                           
  4454                           
  4455                           ;C_PuertoSerial_usart.c: 21: for (unsigned short x=0; x<=msvalue; x++) msecbase();
  4456  0ADD  01F2               	clrf	pause@x
  4457  0ADE  01F3               	clrf	pause@x+1
  4458  0ADF                     l4997:	
  4459  0ADF  0873               	movf	pause@x+1,w
  4460  0AE0  0271               	subwf	pause@msvalue+1,w
  4461  0AE1  1D03               	skipz
  4462  0AE2  2AE5               	goto	u2155
  4463  0AE3  0872               	movf	pause@x,w
  4464  0AE4  0270               	subwf	pause@msvalue,w
  4465  0AE5                     u2155:	
  4466  0AE5  1C03               	btfss	3,0
  4467  0AE6  0008               	return
  4468  0AE7  22EE  120A  158A   	fcall	_msecbase
  4469  0AEA  0AF2               	incf	pause@x,f
  4470  0AEB  1903               	skipnz
  4471  0AEC  0AF3               	incf	pause@x+1,f
  4472  0AED  2ADF               	goto	l4997
  4473  0AEE                     __end_of_pause:	
  4474  0AEE                     __ptext543:	
  4475 ;; =============== function _putch ends ============
  4476                           
  4477                           
  4478 ;; *************** function _msecbase *****************
  4479 ;; Defined at:
  4480 ;;		line 11 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;		None               void
  4487 ;; Registers used:
  4488 ;;		wreg
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: FFF9F/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4494 ;;      Params:         0       0       0       0       0
  4495 ;;      Locals:         0       0       0       0       0
  4496 ;;      Temps:          0       0       0       0       0
  4497 ;;      Totals:         0       0       0       0       0
  4498 ;;Total ram usage:        0 bytes
  4499 ;; Hardware stack levels used:    1
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_pause
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506  0AEE                     _msecbase:	
  4507                           
  4508                           ;C_PuertoSerial_usart.c: 14: OPTION_REG = 0b00000001;
  4509                           
  4510                           ; Regs used in _msecbase: [wreg]
  4511  0AEE  3001               	movlw	1
  4512  0AEF  1683               	bsf	3,5	;RP0=1, select bank1
  4513  0AF0  1303               	bcf	3,6	;RP1=0, select bank1
  4514  0AF1  0081               	movwf	1	;volatile
  4515                           
  4516                           ;C_PuertoSerial_usart.c: 15: TMR0 = 0x07;
  4517  0AF2  3007               	movlw	7
  4518  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  4519  0AF4  0081               	movwf	1	;volatile
  4520  0AF5                     l1055:	
  4521                           ;C_PuertoSerial_usart.c: 16: while(!T0IF);
  4522                           
  4523  0AF5  1D0B               	btfss	11,2
  4524  0AF6  2AF5               	goto	l1055
  4525                           
  4526                           ;C_PuertoSerial_usart.c: 17: T0IF = 0;
  4527  0AF7  110B               	bcf	11,2
  4528  0AF8  0008               	return
  4529  0AF9                     __end_of_msecbase:	
  4530                           
  4531                           	psect	text518
  4532  0C33                     __ptext518:	
  4533 ;; =============== function _lcd_clear ends ============
  4534                           
  4535                           
  4536 ;; *************** function ___ftsub *****************
  4537 ;; Defined at:
  4538 ;;		line 17 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftsub.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  f2              3   40[BANK0 ] float 
  4541 ;;  f1              3   43[BANK0 ] float 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  3   40[BANK0 ] float 
  4546 ;; Registers used:
  4547 ;;		wreg, status,2, status,0, pclath, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 60/0
  4550 ;;		On exit  : 60/0
  4551 ;;		Unchanged: FFF9F/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4553 ;;      Params:         0       6       0       0       0
  4554 ;;      Locals:         0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0
  4556 ;;      Totals:         0       6       0       0       0
  4557 ;;Total ram usage:        6 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    2
  4560 ;; This function calls:
  4561 ;;		___ftadd
  4562 ;; This function is called by:
  4563 ;;		_sprintf
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566  0C33                     ___ftsub:	
  4567                           
  4568                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  4569  0C33  3080               	movlw	128
  4570  0C34  06CA               	xorwf	___ftsub@f2+2,f
  4571  0C35  084B               	movf	___ftsub@f1,w
  4572  0C36  00BC               	movwf	?___ftadd
  4573  0C37  084C               	movf	___ftsub@f1+1,w
  4574  0C38  00BD               	movwf	?___ftadd+1
  4575  0C39  084D               	movf	___ftsub@f1+2,w
  4576  0C3A  00BE               	movwf	?___ftadd+2
  4577  0C3B  0848               	movf	___ftsub@f2,w
  4578  0C3C  00BF               	movwf	?___ftadd+3
  4579  0C3D  0849               	movf	___ftsub@f2+1,w
  4580  0C3E  00C0               	movwf	?___ftadd+4
  4581  0C3F  084A               	movf	___ftsub@f2+2,w
  4582  0C40  00C1               	movwf	?___ftadd+5
  4583  0C41  2449               	fcall	___ftadd
  4584  0C42  083C               	movf	?___ftadd,w
  4585  0C43  00C8               	movwf	?___ftsub
  4586  0C44  083D               	movf	?___ftadd+1,w
  4587  0C45  00C9               	movwf	?___ftsub+1
  4588  0C46  083E               	movf	?___ftadd+2,w
  4589  0C47  00CA               	movwf	?___ftsub+2
  4590  0C48  0008               	return
  4591  0C49                     __end_of___ftsub:	
  4592  0C49                     __ptext525:	
  4593 ;; =============== function ___ftmul ends ============
  4594                           
  4595                           
  4596 ;; *************** function ___ftadd *****************
  4597 ;; Defined at:
  4598 ;;		line 87 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftadd.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  f1              3   28[BANK0 ] float 
  4601 ;;  f2              3   31[BANK0 ] float 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  exp1            1   39[BANK0 ] unsigned char 
  4604 ;;  exp2            1   38[BANK0 ] unsigned char 
  4605 ;;  sign            1   37[BANK0 ] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  3   28[BANK0 ] float 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0, pclath, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 60/0
  4612 ;;		On exit  : 60/0
  4613 ;;		Unchanged: FFF9F/0
  4614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4615 ;;      Params:         0       6       0       0       0
  4616 ;;      Locals:         0       3       0       0       0
  4617 ;;      Temps:          0       3       0       0       0
  4618 ;;      Totals:         0      12       0       0       0
  4619 ;;Total ram usage:       12 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; Hardware stack levels required when called:    1
  4622 ;; This function calls:
  4623 ;;		___ftpack
  4624 ;; This function is called by:
  4625 ;;		_sprintf
  4626 ;;		___ftsub
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629  0C49                     ___ftadd:	
  4630                           
  4631                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4632  0C49  083C               	movf	___ftadd@f1,w
  4633  0C4A  00C2               	movwf	??___ftadd
  4634  0C4B  083D               	movf	___ftadd@f1+1,w
  4635  0C4C  00C3               	movwf	??___ftadd+1
  4636  0C4D  083E               	movf	___ftadd@f1+2,w
  4637  0C4E  00C4               	movwf	??___ftadd+2
  4638  0C4F  1003               	clrc
  4639  0C50  0D43               	rlf	??___ftadd+1,w
  4640  0C51  0D44               	rlf	??___ftadd+2,w
  4641  0C52  00C7               	movwf	___ftadd@exp1
  4642  0C53  083F               	movf	___ftadd@f2,w
  4643  0C54  00C2               	movwf	??___ftadd
  4644  0C55  0840               	movf	___ftadd@f2+1,w
  4645  0C56  00C3               	movwf	??___ftadd+1
  4646  0C57  0841               	movf	___ftadd@f2+2,w
  4647  0C58  00C4               	movwf	??___ftadd+2
  4648  0C59  1003               	clrc
  4649  0C5A  0D43               	rlf	??___ftadd+1,w
  4650  0C5B  0D44               	rlf	??___ftadd+2,w
  4651  0C5C  00C6               	movwf	___ftadd@exp2
  4652  0C5D  0847               	movf	___ftadd@exp1,w
  4653  0C5E  1903               	btfsc	3,2
  4654  0C5F  2C6C               	goto	l5007
  4655  0C60  0846               	movf	___ftadd@exp2,w
  4656  0C61  0247               	subwf	___ftadd@exp1,w
  4657  0C62  0846               	movf	___ftadd@exp2,w
  4658  0C63  1803               	skipnc
  4659  0C64  2C74               	goto	L6
  4660  0C65  00C2               	movwf	??___ftadd
  4661  0C66  0847               	movf	___ftadd@exp1,w
  4662  0C67  02C2               	subwf	??___ftadd,f
  4663  0C68  3019               	movlw	25
  4664  0C69  0242               	subwf	??___ftadd,w
  4665  0C6A  1C03               	skipc
  4666  0C6B  2C73               	goto	l5011
  4667  0C6C                     l5007:	
  4668  0C6C  083F               	movf	___ftadd@f2,w
  4669  0C6D  00BC               	movwf	?___ftadd
  4670  0C6E  0840               	movf	___ftadd@f2+1,w
  4671  0C6F  00BD               	movwf	?___ftadd+1
  4672  0C70  0841               	movf	___ftadd@f2+2,w
  4673  0C71  00BE               	movwf	?___ftadd+2
  4674  0C72  0008               	return
  4675  0C73                     l5011:	
  4676  0C73  0846               	movf	___ftadd@exp2,w
  4677  0C74                     L6:	
  4678  0C74  1903               	btfsc	3,2
  4679  0C75  0008               	return
  4680  0C76  0847               	movf	___ftadd@exp1,w
  4681  0C77  0246               	subwf	___ftadd@exp2,w
  4682  0C78  1803               	skipnc
  4683  0C79  2C82               	goto	l5017
  4684  0C7A  0847               	movf	___ftadd@exp1,w
  4685  0C7B  00C2               	movwf	??___ftadd
  4686  0C7C  0846               	movf	___ftadd@exp2,w
  4687  0C7D  02C2               	subwf	??___ftadd,f
  4688  0C7E  3019               	movlw	25
  4689  0C7F  0242               	subwf	??___ftadd,w
  4690  0C80  1803               	btfsc	3,0
  4691  0C81  0008               	return
  4692  0C82                     l5017:	
  4693  0C82  3006               	movlw	6
  4694  0C83  00C5               	movwf	___ftadd@sign
  4695  0C84  1BBE               	btfsc	___ftadd@f1+2,7
  4696  0C85  17C5               	bsf	___ftadd@sign,7
  4697  0C86  1BC1               	btfsc	___ftadd@f2+2,7
  4698  0C87  1745               	bsf	___ftadd@sign,6
  4699  0C88  17BD               	bsf	___ftadd@f1+1,7
  4700  0C89  01BE               	clrf	___ftadd@f1+2
  4701  0C8A  17C0               	bsf	___ftadd@f2+1,7
  4702  0C8B  01C1               	clrf	___ftadd@f2+2
  4703  0C8C  0846               	movf	___ftadd@exp2,w
  4704  0C8D  0247               	subwf	___ftadd@exp1,w
  4705  0C8E  1803               	skipnc
  4706  0C8F  2CA9               	goto	l5039
  4707  0C90                     l5029:	
  4708  0C90  1003               	clrc
  4709  0C91  0DBF               	rlf	___ftadd@f2,f
  4710  0C92  0DC0               	rlf	___ftadd@f2+1,f
  4711  0C93  0DC1               	rlf	___ftadd@f2+2,f
  4712  0C94  03C6               	decf	___ftadd@exp2,f
  4713  0C95  0846               	movf	___ftadd@exp2,w
  4714  0C96  0647               	xorwf	___ftadd@exp1,w
  4715  0C97  1903               	skipnz
  4716  0C98  2CA4               	goto	l5037
  4717  0C99  03C5               	decf	___ftadd@sign,f
  4718  0C9A  0845               	movf	___ftadd@sign,w
  4719  0C9B  3907               	andlw	7
  4720  0C9C  1903               	btfsc	3,2
  4721  0C9D  2CA4               	goto	l5037
  4722  0C9E  2C90               	goto	l5029
  4723  0C9F                     l5035:	
  4724  0C9F  1003               	clrc
  4725  0CA0  0CBE               	rrf	___ftadd@f1+2,f
  4726  0CA1  0CBD               	rrf	___ftadd@f1+1,f
  4727  0CA2  0CBC               	rrf	___ftadd@f1,f
  4728  0CA3  0AC7               	incf	___ftadd@exp1,f
  4729  0CA4                     l5037:	
  4730  0CA4  0847               	movf	___ftadd@exp1,w
  4731  0CA5  0646               	xorwf	___ftadd@exp2,w
  4732  0CA6  1903               	btfsc	3,2
  4733  0CA7  2CC5               	goto	l2256
  4734  0CA8  2C9F               	goto	l5035
  4735  0CA9                     l5039:	
  4736  0CA9  0847               	movf	___ftadd@exp1,w
  4737  0CAA  0246               	subwf	___ftadd@exp2,w
  4738  0CAB  1803               	skipnc
  4739  0CAC  2CC5               	goto	l2256
  4740  0CAD                     l5041:	
  4741  0CAD  1003               	clrc
  4742  0CAE  0DBC               	rlf	___ftadd@f1,f
  4743  0CAF  0DBD               	rlf	___ftadd@f1+1,f
  4744  0CB0  0DBE               	rlf	___ftadd@f1+2,f
  4745  0CB1  03C7               	decf	___ftadd@exp1,f
  4746  0CB2  0846               	movf	___ftadd@exp2,w
  4747  0CB3  0647               	xorwf	___ftadd@exp1,w
  4748  0CB4  1903               	skipnz
  4749  0CB5  2CC1               	goto	l5049
  4750  0CB6  03C5               	decf	___ftadd@sign,f
  4751  0CB7  0845               	movf	___ftadd@sign,w
  4752  0CB8  3907               	andlw	7
  4753  0CB9  1903               	btfsc	3,2
  4754  0CBA  2CC1               	goto	l5049
  4755  0CBB  2CAD               	goto	l5041
  4756  0CBC                     l5047:	
  4757  0CBC  1003               	clrc
  4758  0CBD  0CC1               	rrf	___ftadd@f2+2,f
  4759  0CBE  0CC0               	rrf	___ftadd@f2+1,f
  4760  0CBF  0CBF               	rrf	___ftadd@f2,f
  4761  0CC0  0AC6               	incf	___ftadd@exp2,f
  4762  0CC1                     l5049:	
  4763  0CC1  0847               	movf	___ftadd@exp1,w
  4764  0CC2  0646               	xorwf	___ftadd@exp2,w
  4765  0CC3  1D03               	skipz
  4766  0CC4  2CBC               	goto	l5047
  4767  0CC5                     l2256:	
  4768  0CC5  1FC5               	btfss	___ftadd@sign,7
  4769  0CC6  2CD0               	goto	l5055
  4770  0CC7  30FF               	movlw	255
  4771  0CC8  06BC               	xorwf	___ftadd@f1,f
  4772  0CC9  06BD               	xorwf	___ftadd@f1+1,f
  4773  0CCA  06BE               	xorwf	___ftadd@f1+2,f
  4774  0CCB  0ABC               	incf	___ftadd@f1,f
  4775  0CCC  1903               	skipnz
  4776  0CCD  0ABD               	incf	___ftadd@f1+1,f
  4777  0CCE  1903               	skipnz
  4778  0CCF  0ABE               	incf	___ftadd@f1+2,f
  4779  0CD0                     l5055:	
  4780  0CD0  1F45               	btfss	___ftadd@sign,6
  4781  0CD1  2CDB               	goto	l5061
  4782  0CD2  30FF               	movlw	255
  4783  0CD3  06BF               	xorwf	___ftadd@f2,f
  4784  0CD4  06C0               	xorwf	___ftadd@f2+1,f
  4785  0CD5  06C1               	xorwf	___ftadd@f2+2,f
  4786  0CD6  0ABF               	incf	___ftadd@f2,f
  4787  0CD7  1903               	skipnz
  4788  0CD8  0AC0               	incf	___ftadd@f2+1,f
  4789  0CD9  1903               	skipnz
  4790  0CDA  0AC1               	incf	___ftadd@f2+2,f
  4791  0CDB                     l5061:	
  4792  0CDB  01C5               	clrf	___ftadd@sign
  4793  0CDC  083C               	movf	___ftadd@f1,w
  4794  0CDD  07BF               	addwf	___ftadd@f2,f
  4795  0CDE  083D               	movf	___ftadd@f1+1,w
  4796  0CDF  1103               	clrz
  4797  0CE0  1803               	skipnc
  4798  0CE1  0A3D               	incf	___ftadd@f1+1,w
  4799  0CE2  1D03               	btfss	3,2
  4800  0CE3  07C0               	addwf	___ftadd@f2+1,f
  4801  0CE4  083E               	movf	___ftadd@f1+2,w
  4802  0CE5  1103               	clrz
  4803  0CE6  1803               	skipnc
  4804  0CE7  0A3E               	incf	___ftadd@f1+2,w
  4805  0CE8  1D03               	btfss	3,2
  4806  0CE9  07C1               	addwf	___ftadd@f2+2,f
  4807  0CEA  1FC1               	btfss	___ftadd@f2+2,7
  4808  0CEB  2CF7               	goto	l5073
  4809  0CEC  30FF               	movlw	255
  4810  0CED  06BF               	xorwf	___ftadd@f2,f
  4811  0CEE  06C0               	xorwf	___ftadd@f2+1,f
  4812  0CEF  06C1               	xorwf	___ftadd@f2+2,f
  4813  0CF0  0ABF               	incf	___ftadd@f2,f
  4814  0CF1  1903               	skipnz
  4815  0CF2  0AC0               	incf	___ftadd@f2+1,f
  4816  0CF3  1903               	skipnz
  4817  0CF4  0AC1               	incf	___ftadd@f2+2,f
  4818  0CF5  01C5               	clrf	___ftadd@sign
  4819  0CF6  0AC5               	incf	___ftadd@sign,f
  4820  0CF7                     l5073:	
  4821  0CF7  083F               	movf	___ftadd@f2,w
  4822  0CF8  00F0               	movwf	?___ftpack
  4823  0CF9  0840               	movf	___ftadd@f2+1,w
  4824  0CFA  00F1               	movwf	?___ftpack+1
  4825  0CFB  0841               	movf	___ftadd@f2+2,w
  4826  0CFC  00F2               	movwf	?___ftpack+2
  4827  0CFD  0847               	movf	___ftadd@exp1,w
  4828  0CFE  00F3               	movwf	?___ftpack+3
  4829  0CFF  0845               	movf	___ftadd@sign,w
  4830  0D00  00F4               	movwf	?___ftpack+4
  4831  0D01  120A  118A  25C2   	fcall	___ftpack
  4832  0D04  0870               	movf	?___ftpack,w
  4833  0D05  00BC               	movwf	?___ftadd
  4834  0D06  0871               	movf	?___ftpack+1,w
  4835  0D07  00BD               	movwf	?___ftadd+1
  4836  0D08  0872               	movf	?___ftpack+2,w
  4837  0D09  00BE               	movwf	?___ftadd+2
  4838  0D0A  0008               	return
  4839  0D0B                     __end_of___ftadd:	
  4840                           
  4841                           	psect	text520
  4842  0D0B                     __ptext520:	
  4843 ;; =============== function _scale ends ============
  4844                           
  4845                           
  4846 ;; *************** function _fround *****************
  4847 ;; Defined at:
  4848 ;;		line 406 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\lib\doprnt.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  prec            1    wreg     unsigned char 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;  prec            1   49[BANK0 ] unsigned char 
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  3   40[BANK0 ] unsigned char 
  4855 ;; Registers used:
  4856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 160/20
  4859 ;;		On exit  : 160/0
  4860 ;;		Unchanged: FFE9F/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4862 ;;      Params:         0       3       0       0       0
  4863 ;;      Locals:         0       7       0       0       0
  4864 ;;      Temps:          0       0       0       0       0
  4865 ;;      Totals:         0      10       0       0       0
  4866 ;;Total ram usage:       10 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    2
  4869 ;; This function calls:
  4870 ;;		___lbmod
  4871 ;;		___bmul
  4872 ;;		___lbdiv
  4873 ;;		___ftmul
  4874 ;; This function is called by:
  4875 ;;		_sprintf
  4876 ;; This function uses a non-reentrant model
  4877 ;;
  4878  0D0B                     _fround:	
  4879                           
  4880                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4881                           ;fround@prec stored from wreg
  4882  0D0B  1283               	bcf	3,5	;RP0=0, select bank0
  4883  0D0C  00D1               	movwf	fround@prec
  4884  0D0D  306E               	movlw	110
  4885  0D0E  0251               	subwf	fround@prec,w
  4886  0D0F  1C03               	skipc
  4887  0D10  2D96               	goto	l5179
  4888  0D11  3003               	movlw	3
  4889  0D12  00F9               	movwf	?___bmul
  4890  0D13  300A               	movlw	10
  4891  0D14  00F5               	movwf	?___lbdiv
  4892  0D15  3064               	movlw	100
  4893  0D16  00F0               	movwf	?___lbmod
  4894  0D17  0851               	movf	fround@prec,w
  4895  0D18  262B  120A  158A   	fcall	___lbmod
  4896  0D1B  2610               	fcall	___lbdiv
  4897  0D1C  120A  118A  25B4   	fcall	___bmul
      +       120A  158A         
  4898  0D21  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4899  0D22  0084               	movwf	4
  4900  0D23  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4901  0D28  00AD               	movwf	?___ftmul
  4902  0D29  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4903  0D2E  00AE               	movwf	?___ftmul+1
  4904  0D2F  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4905  0D34  00AF               	movwf	?___ftmul+2
  4906  0D35  3003               	movlw	3
  4907  0D36  00F9               	movwf	?___bmul
  4908  0D37  3064               	movlw	100
  4909  0D38  00F5               	movwf	?___lbdiv
  4910  0D39  0851               	movf	fround@prec,w
  4911  0D3A  2610               	fcall	___lbdiv
  4912  0D3B  120A  118A  25B4   	fcall	___bmul
      +       120A  158A         
  4913  0D40  3E37               	addlw	low ((__npowers_-__stringbase+54))
  4914  0D41  0084               	movwf	4
  4915  0D42  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4916  0D47  00B0               	movwf	?___ftmul+3
  4917  0D48  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4918  0D4D  00B1               	movwf	?___ftmul+4
  4919  0D4E  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4920  0D53  00B2               	movwf	?___ftmul+5
  4921  0D54  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  4922  0D59  2656  120A  158A   	fcall	PL26	;call to abstracted procedure
  4923  0D5C  3003               	movlw	3
  4924  0D5D  00F9               	movwf	?___bmul
  4925  0D5E  300A               	movlw	10
  4926  0D5F  00F0               	movwf	?___lbmod
  4927  0D60  0851               	movf	fround@prec,w
  4928  0D61  262B               	fcall	___lbmod
  4929  0D62  120A  118A  25B4   	fcall	___bmul
      +       120A  158A         
  4930  0D67  3E01               	addlw	low (__npowers_-__stringbase)
  4931  0D68  0084               	movwf	4
  4932  0D69  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4933  0D6E  00AD               	movwf	?___ftmul
  4934  0D6F  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4935  0D74  00AE               	movwf	?___ftmul+1
  4936  0D75  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4937  0D7A  264E               	fcall	PL22	;call to abstracted procedure
  4938  0D7B  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  4939  0D80  082D               	movf	?___ftmul,w
  4940  0D81  00CB               	movwf	_fround$2834
  4941  0D82  082E               	movf	?___ftmul+1,w
  4942  0D83  00CC               	movwf	_fround$2834+1
  4943  0D84  082F               	movf	?___ftmul+2,w
  4944  0D85  00CD               	movwf	_fround$2834+2
  4945  0D86  303F               	movlw	63
  4946  0D87  01AD               	clrf	?___ftmul
  4947  0D88  01AE               	clrf	?___ftmul+1
  4948  0D89  00AF               	movwf	?___ftmul+2
  4949  0D8A  084B               	movf	_fround$2834,w
  4950  0D8B  00B0               	movwf	?___ftmul+3
  4951  0D8C  084C               	movf	_fround$2834+1,w
  4952  0D8D  00B1               	movwf	?___ftmul+4
  4953  0D8E  084D               	movf	_fround$2834+2,w
  4954  0D8F  00B2               	movwf	?___ftmul+5
  4955  0D90  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  4956  0D95  2E47               	ljmp	PL15	;call to abstracted procedure
  4957  0D96                     l5179:	
  4958  0D96  300B               	movlw	11
  4959  0D97  0251               	subwf	fround@prec,w
  4960  0D98  1C03               	skipc
  4961  0D99  2DEA               	goto	l5187
  4962  0D9A  3003               	movlw	3
  4963  0D9B  00F9               	movwf	?___bmul
  4964  0D9C  300A               	movlw	10
  4965  0D9D  00F0               	movwf	?___lbmod
  4966  0D9E  0851               	movf	fround@prec,w
  4967  0D9F  262B               	fcall	___lbmod
  4968  0DA0  120A  118A  25B4   	fcall	___bmul
      +       120A  158A         
  4969  0DA5  3E01               	addlw	low (__npowers_-__stringbase)
  4970  0DA6  0084               	movwf	4
  4971  0DA7  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4972  0DAC  00AD               	movwf	?___ftmul
  4973  0DAD  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4974  0DB2  00AE               	movwf	?___ftmul+1
  4975  0DB3  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4976  0DB8  00AF               	movwf	?___ftmul+2
  4977  0DB9  3003               	movlw	3
  4978  0DBA  00F9               	movwf	?___bmul
  4979  0DBB  300A               	movlw	10
  4980  0DBC  00F5               	movwf	?___lbdiv
  4981  0DBD  0851               	movf	fround@prec,w
  4982  0DBE  2610               	fcall	___lbdiv
  4983  0DBF  120A  118A  25B4   	fcall	___bmul
      +       120A  158A         
  4984  0DC4  3E1C               	addlw	low ((__npowers_-__stringbase+27))
  4985  0DC5  0084               	movwf	4
  4986  0DC6  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4987  0DCB  00B0               	movwf	?___ftmul+3
  4988  0DCC  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4989  0DD1  00B1               	movwf	?___ftmul+4
  4990  0DD2  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  4991  0DD7  00B2               	movwf	?___ftmul+5
  4992  0DD8  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  4993  0DDD  2656  120A  158A   	fcall	PL26	;call to abstracted procedure
  4994  0DE0  303F               	movlw	63
  4995  0DE1  01AD               	clrf	?___ftmul
  4996  0DE2  01AE               	clrf	?___ftmul+1
  4997  0DE3  264E               	fcall	PL22	;call to abstracted procedure
  4998  0DE4  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  4999  0DE9  2E47               	ljmp	PL15	;call to abstracted procedure
  5000  0DEA                     l5187:	
  5001  0DEA  303F               	movlw	63
  5002  0DEB  01AD               	clrf	?___ftmul
  5003  0DEC  01AE               	clrf	?___ftmul+1
  5004  0DED  00AF               	movwf	?___ftmul+2
  5005  0DEE  3003               	movlw	3
  5006  0DEF  00F9               	movwf	?___bmul
  5007  0DF0  0851               	movf	fround@prec,w
  5008  0DF1  120A  118A  25B4   	fcall	___bmul
      +       120A  158A         
  5009  0DF6  3E01               	addlw	low (__npowers_-__stringbase)
  5010  0DF7  0084               	movwf	4
  5011  0DF8  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5012  0DFD  00B0               	movwf	?___ftmul+3
  5013  0DFE  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5014  0E03  00B1               	movwf	?___ftmul+4
  5015  0E04  120A  158A  2000   	fcall	stringdir
      +       120A  158A         
  5016  0E09  00B2               	movwf	?___ftmul+5
  5017  0E0A  120A  118A  2545   	fcall	___ftmul
      +       120A  158A         
  5018  0E0F  2E47               	ljmp	PL15	;call to abstracted procedure
  5019  0E10                     __end_of_fround:	
  5020  0E10                     __ptext536:	
  5021 ;; =============== function ___lbmod ends ============
  5022                           
  5023                           
  5024 ;; *************** function ___lbdiv *****************
  5025 ;; Defined at:
  5026 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbdiv.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  dividend        1    wreg     unsigned char 
  5029 ;;  divisor         1    5[COMMON] unsigned char 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  dividend        1    6[COMMON] unsigned char 
  5032 ;;  quotient        1    8[COMMON] unsigned char 
  5033 ;;  counter         1    7[COMMON] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      unsigned char 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0
  5038 ;; Tracked objects:
  5039 ;;		On entry : 160/0
  5040 ;;		On exit  : 160/0
  5041 ;;		Unchanged: FFE9F/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5043 ;;      Params:         1       0       0       0       0
  5044 ;;      Locals:         3       0       0       0       0
  5045 ;;      Temps:          0       0       0       0       0
  5046 ;;      Totals:         4       0       0       0       0
  5047 ;;Total ram usage:        4 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; This function calls:
  5050 ;;		Nothing
  5051 ;; This function is called by:
  5052 ;;		_fround
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055  0E10                     ___lbdiv:	
  5056                           
  5057                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5058                           ;___lbdiv@dividend stored from wreg
  5059  0E10  00F6               	movwf	___lbdiv@dividend
  5060  0E11  01F8               	clrf	___lbdiv@quotient
  5061  0E12  0875               	movf	___lbdiv@divisor,w
  5062  0E13  1903               	btfsc	3,2
  5063  0E14  2E29               	goto	l4749
  5064  0E15  01F7               	clrf	___lbdiv@counter
  5065  0E16                     l4735:	
  5066  0E16  0AF7               	incf	___lbdiv@counter,f
  5067  0E17  1BF5               	btfsc	___lbdiv@divisor,7
  5068  0E18  2E1C               	goto	l2225
  5069  0E19  1003               	clrc
  5070  0E1A  0DF5               	rlf	___lbdiv@divisor,f
  5071  0E1B  2E16               	goto	l4735
  5072  0E1C                     l2225:	
  5073  0E1C  1003               	clrc
  5074  0E1D  0DF8               	rlf	___lbdiv@quotient,f
  5075  0E1E  0875               	movf	___lbdiv@divisor,w
  5076  0E1F  0276               	subwf	___lbdiv@dividend,w
  5077  0E20  1C03               	skipc
  5078  0E21  2E26               	goto	L17
  5079  0E22  0875               	movf	___lbdiv@divisor,w
  5080  0E23  02F6               	subwf	___lbdiv@dividend,f
  5081  0E24  1478               	bsf	___lbdiv@quotient,0
  5082  0E25  1003               	clrc
  5083  0E26                     L17:	
  5084  0E26  0CF5               	rrf	___lbdiv@divisor,f
  5085  0E27  0BF7               	decfsz	___lbdiv@counter,f
  5086  0E28  2E1C               	goto	l2225
  5087  0E29                     l4749:	
  5088  0E29  0878               	movf	___lbdiv@quotient,w
  5089  0E2A  0008               	return
  5090  0E2B                     __end_of___lbdiv:	
  5091  0E2B                     __ptext535:	
  5092 ;; =============== function ___ftpack ends ============
  5093                           
  5094                           
  5095 ;; *************** function ___lbmod *****************
  5096 ;; Defined at:
  5097 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lbmod.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;  dividend        1    wreg     unsigned char 
  5100 ;;  divisor         1    0[COMMON] unsigned char 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  dividend        1    2[COMMON] unsigned char 
  5103 ;;  rem             1    4[COMMON] unsigned char 
  5104 ;;  counter         1    3[COMMON] unsigned char 
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      unsigned char 
  5107 ;; Registers used:
  5108 ;;		wreg, status,2, status,0
  5109 ;; Tracked objects:
  5110 ;;		On entry : 160/0
  5111 ;;		On exit  : 160/0
  5112 ;;		Unchanged: FFE9F/0
  5113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5114 ;;      Params:         1       0       0       0       0
  5115 ;;      Locals:         3       0       0       0       0
  5116 ;;      Temps:          1       0       0       0       0
  5117 ;;      Totals:         5       0       0       0       0
  5118 ;;Total ram usage:        5 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; This function calls:
  5121 ;;		Nothing
  5122 ;; This function is called by:
  5123 ;;		_fround
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126  0E2B                     ___lbmod:	
  5127                           
  5128                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5129                           ;___lbmod@dividend stored from wreg
  5130  0E2B  00F2               	movwf	___lbmod@dividend
  5131  0E2C  3008               	movlw	8
  5132  0E2D  00F3               	movwf	___lbmod@counter
  5133  0E2E  01F4               	clrf	___lbmod@rem
  5134  0E2F                     l4757:	
  5135  0E2F  0872               	movf	___lbmod@dividend,w
  5136  0E30  00F1               	movwf	??___lbmod
  5137  0E31  3007               	movlw	7
  5138  0E32  1003               	clrc
  5139  0E33                     L16:	
  5140  0E33  0CF1               	rrf	??___lbmod,f
  5141  0E34  3EFF               	addlw	-1
  5142  0E35  1003               	clrc
  5143  0E36  1D03               	skipz
  5144  0E37  2E33               	goto	L16
  5145  0E38  0D74               	rlf	___lbmod@rem,w
  5146  0E39  0471               	iorwf	??___lbmod,w
  5147  0E3A  00F4               	movwf	___lbmod@rem
  5148  0E3B  1003               	clrc
  5149  0E3C  0DF2               	rlf	___lbmod@dividend,f
  5150  0E3D  0870               	movf	___lbmod@divisor,w
  5151  0E3E  0274               	subwf	___lbmod@rem,w
  5152  0E3F  1C03               	skipc
  5153  0E40  2E43               	goto	l4765
  5154  0E41  0870               	movf	___lbmod@divisor,w
  5155  0E42  02F4               	subwf	___lbmod@rem,f
  5156  0E43                     l4765:	
  5157  0E43  0BF3               	decfsz	___lbmod@counter,f
  5158  0E44  2E2F               	goto	l4757
  5159  0E45  0874               	movf	___lbmod@rem,w
  5160  0E46  0008               	return
  5161  0E47                     __end_of___lbmod:	
  5162  0E47                     PL15:	
  5163  0E47  082D               	movf	?___ftmul,w
  5164  0E48  00C8               	movwf	?_fround
  5165  0E49  082E               	movf	?___ftmul+1,w
  5166  0E4A  00C9               	movwf	?_fround+1
  5167  0E4B  082F               	movf	?___ftmul+2,w
  5168  0E4C  00CA               	movwf	?_fround+2
  5169  0E4D  0008               	return
  5170  0E4E                     PL22:	
  5171  0E4E  00AF               	movwf	?___ftmul+2
  5172  0E4F  084E               	movf	_fround$2833,w
  5173  0E50  00B0               	movwf	?___ftmul+3
  5174  0E51  084F               	movf	_fround$2833+1,w
  5175  0E52  00B1               	movwf	?___ftmul+4
  5176  0E53  0850               	movf	_fround$2833+2,w
  5177  0E54  00B2               	movwf	?___ftmul+5
  5178  0E55  0008               	return
  5179  0E56                     PL26:	
  5180  0E56  082D               	movf	?___ftmul,w
  5181  0E57  00CE               	movwf	_fround$2833
  5182  0E58  082E               	movf	?___ftmul+1,w
  5183  0E59  00CF               	movwf	_fround$2833+1
  5184  0E5A  082F               	movf	?___ftmul+2,w
  5185  0E5B  00D0               	movwf	_fround$2833+2
  5186  0E5C  0008               	return
  5187                           
  5188                           	psect	text522
  5189  0A9B                     __ptext522:	
  5190 ;; =============== function _lcd_write ends ============
  5191                           
  5192                           
  5193 ;; *************** function ___lltoft *****************
  5194 ;; Defined at:
  5195 ;;		line 36 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\lltoft.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  c               4    8[COMMON] unsigned long 
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;  exp             1   12[COMMON] unsigned char 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  3    8[COMMON] float 
  5202 ;; Registers used:
  5203 ;;		wreg, status,2, status,0, pclath, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 60/20
  5206 ;;		On exit  : 60/20
  5207 ;;		Unchanged: FFF9F/0
  5208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5209 ;;      Params:         4       0       0       0       0
  5210 ;;      Locals:         1       0       0       0       0
  5211 ;;      Temps:          0       0       0       0       0
  5212 ;;      Totals:         5       0       0       0       0
  5213 ;;Total ram usage:        5 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    1
  5216 ;; This function calls:
  5217 ;;		___ftpack
  5218 ;; This function is called by:
  5219 ;;		_sprintf
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222  0A9B                     ___lltoft:	
  5223                           
  5224                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5225  0A9B  308E               	movlw	142
  5226  0A9C  00FC               	movwf	___lltoft@exp
  5227  0A9D                     l5149:	
  5228  0A9D  30FF               	movlw	255
  5229  0A9E  057B               	andwf	___lltoft@c+3,w
  5230  0A9F  1903               	btfsc	3,2
  5231  0AA0  2AA8               	goto	l5151
  5232  0AA1  1003               	clrc
  5233  0AA2  0CFB               	rrf	___lltoft@c+3,f
  5234  0AA3  0CFA               	rrf	___lltoft@c+2,f
  5235  0AA4  0CF9               	rrf	___lltoft@c+1,f
  5236  0AA5  0CF8               	rrf	___lltoft@c,f
  5237  0AA6  0AFC               	incf	___lltoft@exp,f
  5238  0AA7  2A9D               	goto	l5149
  5239  0AA8                     l5151:	
  5240  0AA8  0878               	movf	___lltoft@c,w
  5241  0AA9  00F0               	movwf	?___ftpack
  5242  0AAA  0879               	movf	___lltoft@c+1,w
  5243  0AAB  00F1               	movwf	?___ftpack+1
  5244  0AAC  087A               	movf	___lltoft@c+2,w
  5245  0AAD  00F2               	movwf	?___ftpack+2
  5246  0AAE  087C               	movf	___lltoft@exp,w
  5247  0AAF  00F3               	movwf	?___ftpack+3
  5248  0AB0  01F4               	clrf	?___ftpack+4
  5249  0AB1  120A  118A  25C2   	fcall	___ftpack
  5250  0AB4  0870               	movf	?___ftpack,w
  5251  0AB5  00F8               	movwf	?___lltoft
  5252  0AB6  0871               	movf	?___ftpack+1,w
  5253  0AB7  00F9               	movwf	?___lltoft+1
  5254  0AB8  0872               	movf	?___ftpack+2,w
  5255  0AB9  00FA               	movwf	?___lltoft+2
  5256  0ABA  0008               	return
  5257  0ABB                     __end_of___lltoft:	
  5258                           
  5259                           	psect	text523
  5260  0A5F                     __ptext523:	
  5261 ;; =============== function ___lltoft ends ============
  5262                           
  5263                           
  5264 ;; *************** function ___awtoft *****************
  5265 ;; Defined at:
  5266 ;;		line 33 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\awtoft.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;  c               2    8[COMMON] int 
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;  sign            1   11[COMMON] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  3    8[COMMON] float 
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, status,0, pclath, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 60/20
  5277 ;;		On exit  : 60/20
  5278 ;;		Unchanged: FFF9F/0
  5279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5280 ;;      Params:         3       0       0       0       0
  5281 ;;      Locals:         1       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0
  5283 ;;      Totals:         4       0       0       0       0
  5284 ;;Total ram usage:        4 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    1
  5287 ;; This function calls:
  5288 ;;		___ftpack
  5289 ;; This function is called by:
  5290 ;;		_main
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293  0A5F                     ___awtoft:	
  5294                           
  5295                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5296  0A5F  01FB               	clrf	___awtoft@sign
  5297  0A60  1FF9               	btfss	___awtoft@c+1,7
  5298  0A61  2A69               	goto	l5141
  5299  0A62  09F8               	comf	___awtoft@c,f
  5300  0A63  09F9               	comf	___awtoft@c+1,f
  5301  0A64  0AF8               	incf	___awtoft@c,f
  5302  0A65  1903               	skipnz
  5303  0A66  0AF9               	incf	___awtoft@c+1,f
  5304  0A67  01FB               	clrf	___awtoft@sign
  5305  0A68  0AFB               	incf	___awtoft@sign,f
  5306  0A69                     l5141:	
  5307  0A69  0878               	movf	___awtoft@c,w
  5308  0A6A  00F0               	movwf	?___ftpack
  5309  0A6B  0879               	movf	___awtoft@c+1,w
  5310  0A6C  00F1               	movwf	?___ftpack+1
  5311  0A6D  308E               	movlw	142
  5312  0A6E  01F2               	clrf	?___ftpack+2
  5313  0A6F  00F3               	movwf	?___ftpack+3
  5314  0A70  087B               	movf	___awtoft@sign,w
  5315  0A71  00F4               	movwf	?___ftpack+4
  5316  0A72  120A  118A  25C2   	fcall	___ftpack
  5317  0A75  0870               	movf	?___ftpack,w
  5318  0A76  00F8               	movwf	?___awtoft
  5319  0A77  0871               	movf	?___ftpack+1,w
  5320  0A78  00F9               	movwf	?___awtoft+1
  5321  0A79  0872               	movf	?___ftpack+2,w
  5322  0A7A  00FA               	movwf	?___awtoft+2
  5323  0A7B  0008               	return
  5324  0A7C                     __end_of___awtoft:	
  5325                           
  5326                           	psect	text539
  5327  0B71                     __ptext539:	
  5328 ;; =============== function ___bmul ends ============
  5329                           
  5330                           
  5331 ;; *************** function __div_to_l_ *****************
  5332 ;; Defined at:
  5333 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\fldivl.c"
  5334 ;; Parameters:    Size  Location     Type
  5335 ;;  f1              3    0[COMMON] unsigned char 
  5336 ;;  f2              3    3[COMMON] unsigned char 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  quot            4    0[BANK0 ] unsigned long 
  5339 ;;  exp1            1    5[BANK0 ] unsigned char 
  5340 ;;  cntr            1    4[BANK0 ] unsigned char 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  4    0[COMMON] unsigned long 
  5343 ;; Registers used:
  5344 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 60/0
  5348 ;;		Unchanged: FFF9F/0
  5349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5350 ;;      Params:         6       0       0       0       0
  5351 ;;      Locals:         0       6       0       0       0
  5352 ;;      Temps:          8       0       0       0       0
  5353 ;;      Totals:        14       6       0       0       0
  5354 ;;Total ram usage:       20 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; This function calls:
  5357 ;;		Nothing
  5358 ;; This function is called by:
  5359 ;;		_sprintf
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362  0B71                     __div_to_l_:	
  5363                           
  5364                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5365  0B71  3070               	movlw	low __div_to_l_@f1
  5366  0B72  2426  120A  158A   	fcall	PL2	;call to abstracted procedure
  5367  0B75  1003               	clrc
  5368  0B76  0D78               	rlf	??__div_to_l_+2,w
  5369  0B77  0D79               	rlf	??__div_to_l_+3,w
  5370  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  5371  0B79  1303               	bcf	3,6	;RP1=0, select bank0
  5372  0B7A  00A5               	movwf	__div_to_l_@exp1
  5373  0B7B  08A5               	movf	__div_to_l_@exp1,f
  5374  0B7C  1D03               	skipz
  5375  0B7D  2B83               	goto	l4655
  5376  0B7E                     l4653:	
  5377  0B7E  01F0               	clrf	?__div_to_l_
  5378  0B7F  01F1               	clrf	?__div_to_l_+1
  5379  0B80  01F2               	clrf	?__div_to_l_+2
  5380  0B81  01F3               	clrf	?__div_to_l_+3
  5381  0B82  0008               	return
  5382  0B83                     l4655:	
  5383  0B83  3073               	movlw	low __div_to_l_@f2
  5384  0B84  2426  120A  158A   	fcall	PL2	;call to abstracted procedure
  5385  0B87  1003               	clrc
  5386  0B88  0D78               	rlf	??__div_to_l_+2,w
  5387  0B89  0D79               	rlf	??__div_to_l_+3,w
  5388  0B8A  00A4               	movwf	__div_to_l_@cntr
  5389  0B8B  08A4               	movf	__div_to_l_@cntr,f
  5390  0B8C  1903               	btfsc	3,2
  5391  0B8D  2B7E               	goto	l4653
  5392  0B8E  3070               	movlw	low __div_to_l_@f1
  5393  0B8F  0084               	movwf	4
  5394  0B90  3080               	movlw	128
  5395  0B91  0A84               	incf	4,f
  5396  0B92  0A84               	incf	4,f
  5397  0B93  0480               	iorwf	0,f
  5398  0B94  3070               	movlw	low __div_to_l_@f1
  5399  0B95  0A84               	incf	4,f
  5400  0B96  0084               	movwf	4
  5401  0B97  3073               	movlw	low __div_to_l_@f2
  5402  0B98  0A84               	incf	4,f
  5403  0B99  0A84               	incf	4,f
  5404  0B9A  0A84               	incf	4,f
  5405  0B9B  0180               	clrf	0
  5406  0B9C  0084               	movwf	4
  5407  0B9D  3080               	movlw	128
  5408  0B9E  0A84               	incf	4,f
  5409  0B9F  0A84               	incf	4,f
  5410  0BA0  0480               	iorwf	0,f
  5411  0BA1  3073               	movlw	low __div_to_l_@f2
  5412  0BA2  0A84               	incf	4,f
  5413  0BA3  0084               	movwf	4
  5414  0BA4  307F               	movlw	127
  5415  0BA5  0A84               	incf	4,f
  5416  0BA6  0A84               	incf	4,f
  5417  0BA7  0A84               	incf	4,f
  5418  0BA8  0180               	clrf	0
  5419  0BA9  01A0               	clrf	__div_to_l_@quot
  5420  0BAA  01A1               	clrf	__div_to_l_@quot+1
  5421  0BAB  01A2               	clrf	__div_to_l_@quot+2
  5422  0BAC  01A3               	clrf	__div_to_l_@quot+3
  5423  0BAD  02A5               	subwf	__div_to_l_@exp1,f
  5424  0BAE  30A0               	movlw	160
  5425  0BAF  0724               	addwf	__div_to_l_@cntr,w
  5426  0BB0  00F6               	movwf	??__div_to_l_
  5427  0BB1  02A5               	subwf	__div_to_l_@exp1,f
  5428  0BB2  3020               	movlw	32
  5429  0BB3  00A4               	movwf	__div_to_l_@cntr
  5430  0BB4                     l4669:	
  5431  0BB4  3073               	movlw	low __div_to_l_@f2
  5432  0BB5  1003               	clrc
  5433  0BB6  0DA0               	rlf	__div_to_l_@quot,f
  5434  0BB7  0DA1               	rlf	__div_to_l_@quot+1,f
  5435  0BB8  0DA2               	rlf	__div_to_l_@quot+2,f
  5436  0BB9  0DA3               	rlf	__div_to_l_@quot+3,f
  5437  0BBA  2426  120A  158A   	fcall	PL2	;call to abstracted procedure
  5438  0BBD  3070               	movlw	low __div_to_l_@f1
  5439  0BBE  0084               	movwf	4
  5440  0BBF  0800               	movf	0,w
  5441  0BC0  00FA               	movwf	??__div_to_l_+4
  5442  0BC1  0A84               	incf	4,f
  5443  0BC2  0800               	movf	0,w
  5444  0BC3  00FB               	movwf	??__div_to_l_+5
  5445  0BC4  0A84               	incf	4,f
  5446  0BC5  0800               	movf	0,w
  5447  0BC6  00FC               	movwf	??__div_to_l_+6
  5448  0BC7  0A84               	incf	4,f
  5449  0BC8  0800               	movf	0,w
  5450  0BC9  00FD               	movwf	??__div_to_l_+7
  5451  0BCA  0879               	movf	??__div_to_l_+3,w
  5452  0BCB  027D               	subwf	??__div_to_l_+7,w
  5453  0BCC  1D03               	skipz
  5454  0BCD  2BD8               	goto	u1565
  5455  0BCE  0878               	movf	??__div_to_l_+2,w
  5456  0BCF  027C               	subwf	??__div_to_l_+6,w
  5457  0BD0  1D03               	skipz
  5458  0BD1  2BD8               	goto	u1565
  5459  0BD2  0877               	movf	??__div_to_l_+1,w
  5460  0BD3  027B               	subwf	??__div_to_l_+5,w
  5461  0BD4  1D03               	skipz
  5462  0BD5  2BD8               	goto	u1565
  5463  0BD6  0876               	movf	??__div_to_l_,w
  5464  0BD7  027A               	subwf	??__div_to_l_+4,w
  5465  0BD8                     u1565:	
  5466  0BD8  1C03               	skipc
  5467  0BD9  2BF4               	goto	l2485
  5468  0BDA  3073               	movlw	low __div_to_l_@f2
  5469  0BDB  2426  120A  158A   	fcall	PL2	;call to abstracted procedure
  5470  0BDE  3070               	movlw	low __div_to_l_@f1
  5471  0BDF  0084               	movwf	4
  5472  0BE0  0876               	movf	??__div_to_l_,w
  5473  0BE1  0280               	subwf	0,f
  5474  0BE2  0A84               	incf	4,f
  5475  0BE3  0877               	movf	??__div_to_l_+1,w
  5476  0BE4  1C03               	skipc
  5477  0BE5  0F77               	incfsz	??__div_to_l_+1,w
  5478  0BE6  0280               	subwf	0,f
  5479  0BE7  0A84               	incf	4,f
  5480  0BE8  0878               	movf	??__div_to_l_+2,w
  5481  0BE9  1C03               	skipc
  5482  0BEA  0F78               	incfsz	??__div_to_l_+2,w
  5483  0BEB  0280               	subwf	0,f
  5484  0BEC  0A84               	incf	4,f
  5485  0BED  0879               	movf	??__div_to_l_+3,w
  5486  0BEE  1C03               	skipc
  5487  0BEF  0A79               	incf	??__div_to_l_+3,w
  5488  0BF0  0280               	subwf	0,f
  5489  0BF1  3003               	movlw	3
  5490  0BF2  0284               	subwf	4,f
  5491  0BF3  1420               	bsf	__div_to_l_@quot,0
  5492  0BF4                     l2485:	
  5493  0BF4  3070               	movlw	low __div_to_l_@f1
  5494  0BF5  0084               	movwf	4
  5495  0BF6  1003               	clrc
  5496  0BF7  0D80               	rlf	0,f
  5497  0BF8  0A84               	incf	4,f
  5498  0BF9  0D80               	rlf	0,f
  5499  0BFA  0A84               	incf	4,f
  5500  0BFB  0D80               	rlf	0,f
  5501  0BFC  0A84               	incf	4,f
  5502  0BFD  0D80               	rlf	0,f
  5503  0BFE  0BA4               	decfsz	__div_to_l_@cntr,f
  5504  0BFF  2BB4               	goto	l4669
  5505  0C00  1FA5               	btfss	__div_to_l_@exp1,7
  5506  0C01  2C0F               	goto	l4687
  5507  0C02  0825               	movf	__div_to_l_@exp1,w
  5508  0C03  3A80               	xorlw	128
  5509  0C04  3E9F               	addlw	159
  5510  0C05  1C03               	btfss	3,0
  5511  0C06  2B7E               	goto	l4653
  5512  0C07                     l4683:	
  5513  0C07  1003               	clrc
  5514  0C08  0CA3               	rrf	__div_to_l_@quot+3,f
  5515  0C09  0CA2               	rrf	__div_to_l_@quot+2,f
  5516  0C0A  0CA1               	rrf	__div_to_l_@quot+1,f
  5517  0C0B  0CA0               	rrf	__div_to_l_@quot,f
  5518  0C0C  0FA5               	incfsz	__div_to_l_@exp1,f
  5519  0C0D  2C07               	goto	l4683
  5520  0C0E  2C1D               	goto	l4693
  5521  0C0F                     l4687:	
  5522  0C0F  3020               	movlw	32
  5523  0C10  0225               	subwf	__div_to_l_@exp1,w
  5524  0C11  1803               	btfsc	3,0
  5525  0C12  2B7E               	goto	l4653
  5526  0C13                     l2493:	
  5527  0C13  08A5               	movf	__div_to_l_@exp1,f
  5528  0C14  1903               	btfsc	3,2
  5529  0C15  2C1D               	goto	l4693
  5530  0C16  1003               	clrc
  5531  0C17  0DA0               	rlf	__div_to_l_@quot,f
  5532  0C18  0DA1               	rlf	__div_to_l_@quot+1,f
  5533  0C19  0DA2               	rlf	__div_to_l_@quot+2,f
  5534  0C1A  0DA3               	rlf	__div_to_l_@quot+3,f
  5535  0C1B  03A5               	decf	__div_to_l_@exp1,f
  5536  0C1C  2C13               	goto	l2493
  5537  0C1D                     l4693:	
  5538  0C1D  0823               	movf	__div_to_l_@quot+3,w
  5539  0C1E  00F3               	movwf	?__div_to_l_+3
  5540  0C1F  0822               	movf	__div_to_l_@quot+2,w
  5541  0C20  00F2               	movwf	?__div_to_l_+2
  5542  0C21  0821               	movf	__div_to_l_@quot+1,w
  5543  0C22  00F1               	movwf	?__div_to_l_+1
  5544  0C23  0820               	movf	__div_to_l_@quot,w
  5545  0C24  00F0               	movwf	?__div_to_l_
  5546  0C25  0008               	return
  5547  0C26                     __end_of__div_to_l_:	
  5548  0C26                     PL2:	
  5549  0C26  0084               	movwf	4
  5550  0C27  0800               	movf	0,w
  5551  0C28  00F6               	movwf	??__div_to_l_
  5552  0C29  0A84               	incf	4,f
  5553  0C2A  0800               	movf	0,w
  5554  0C2B  00F7               	movwf	??__div_to_l_+1
  5555  0C2C  0A84               	incf	4,f
  5556  0C2D  0800               	movf	0,w
  5557  0C2E  00F8               	movwf	??__div_to_l_+2
  5558  0C2F  0A84               	incf	4,f
  5559  0C30  0800               	movf	0,w
  5560  0C31  00F9               	movwf	??__div_to_l_+3
  5561  0C32  0008               	return
  5562                           
  5563                           	psect	text540
  5564  0AF9                     __ptext540:	
  5565 ;; =============== function __div_to_l_ ends ============
  5566                           
  5567                           
  5568 ;; *************** function __tdiv_to_l_ *****************
  5569 ;; Defined at:
  5570 ;;		line 61 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.82\sources\ftdivl.c"
  5571 ;; Parameters:    Size  Location     Type
  5572 ;;  f1              3    0[COMMON] float 
  5573 ;;  f2              3    3[COMMON] float 
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;  quot            4    0[BANK0 ] unsigned long 
  5576 ;;  exp1            1    5[BANK0 ] unsigned char 
  5577 ;;  cntr            1    4[BANK0 ] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  4    0[COMMON] unsigned long 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0
  5582 ;; Tracked objects:
  5583 ;;		On entry : 60/20
  5584 ;;		On exit  : 60/0
  5585 ;;		Unchanged: FFF9F/0
  5586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5587 ;;      Params:         6       0       0       0       0
  5588 ;;      Locals:         0       6       0       0       0
  5589 ;;      Temps:          3       0       0       0       0
  5590 ;;      Totals:         9       6       0       0       0
  5591 ;;Total ram usage:       15 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_sprintf
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599  0AF9                     __tdiv_to_l_:	
  5600                           
  5601                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5602  0AF9  0870               	movf	__tdiv_to_l_@f1,w
  5603  0AFA  00F6               	movwf	??__tdiv_to_l_
  5604  0AFB  0871               	movf	__tdiv_to_l_@f1+1,w
  5605  0AFC  00F7               	movwf	??__tdiv_to_l_+1
  5606  0AFD  0872               	movf	__tdiv_to_l_@f1+2,w
  5607  0AFE  00F8               	movwf	??__tdiv_to_l_+2
  5608  0AFF  1003               	clrc
  5609  0B00  0D77               	rlf	??__tdiv_to_l_+1,w
  5610  0B01  0D78               	rlf	??__tdiv_to_l_+2,w
  5611  0B02  1283               	bcf	3,5	;RP0=0, select bank0
  5612  0B03  00A5               	movwf	__tdiv_to_l_@exp1
  5613  0B04  08A5               	movf	__tdiv_to_l_@exp1,f
  5614  0B05  1D03               	skipz
  5615  0B06  2B0C               	goto	l4607
  5616  0B07                     l4605:	
  5617  0B07  01F0               	clrf	?__tdiv_to_l_
  5618  0B08  01F1               	clrf	?__tdiv_to_l_+1
  5619  0B09  01F2               	clrf	?__tdiv_to_l_+2
  5620  0B0A  01F3               	clrf	?__tdiv_to_l_+3
  5621  0B0B  0008               	return
  5622  0B0C                     l4607:	
  5623  0B0C  0873               	movf	__tdiv_to_l_@f2,w
  5624  0B0D  00F6               	movwf	??__tdiv_to_l_
  5625  0B0E  0874               	movf	__tdiv_to_l_@f2+1,w
  5626  0B0F  00F7               	movwf	??__tdiv_to_l_+1
  5627  0B10  0875               	movf	__tdiv_to_l_@f2+2,w
  5628  0B11  00F8               	movwf	??__tdiv_to_l_+2
  5629  0B12  1003               	clrc
  5630  0B13  0D77               	rlf	??__tdiv_to_l_+1,w
  5631  0B14  0D78               	rlf	??__tdiv_to_l_+2,w
  5632  0B15  00A4               	movwf	__tdiv_to_l_@cntr
  5633  0B16  08A4               	movf	__tdiv_to_l_@cntr,f
  5634  0B17  1903               	btfsc	3,2
  5635  0B18  2B07               	goto	l4605
  5636  0B19  307F               	movlw	127
  5637  0B1A  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5638  0B1B  01F2               	clrf	__tdiv_to_l_@f1+2
  5639  0B1C  17F4               	bsf	__tdiv_to_l_@f2+1,7
  5640  0B1D  01F5               	clrf	__tdiv_to_l_@f2+2
  5641  0B1E  01A0               	clrf	__tdiv_to_l_@quot
  5642  0B1F  01A1               	clrf	__tdiv_to_l_@quot+1
  5643  0B20  01A2               	clrf	__tdiv_to_l_@quot+2
  5644  0B21  01A3               	clrf	__tdiv_to_l_@quot+3
  5645  0B22  02A5               	subwf	__tdiv_to_l_@exp1,f
  5646  0B23  3098               	movlw	152
  5647  0B24  0724               	addwf	__tdiv_to_l_@cntr,w
  5648  0B25  00F6               	movwf	??__tdiv_to_l_
  5649  0B26  02A5               	subwf	__tdiv_to_l_@exp1,f
  5650  0B27  3018               	movlw	24
  5651  0B28  00A4               	movwf	__tdiv_to_l_@cntr
  5652  0B29                     l4621:	
  5653  0B29  1003               	clrc
  5654  0B2A  0DA0               	rlf	__tdiv_to_l_@quot,f
  5655  0B2B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5656  0B2C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5657  0B2D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5658  0B2E  0875               	movf	__tdiv_to_l_@f2+2,w
  5659  0B2F  0272               	subwf	__tdiv_to_l_@f1+2,w
  5660  0B30  1D03               	skipz
  5661  0B31  2B38               	goto	u1475
  5662  0B32  0874               	movf	__tdiv_to_l_@f2+1,w
  5663  0B33  0271               	subwf	__tdiv_to_l_@f1+1,w
  5664  0B34  1D03               	skipz
  5665  0B35  2B38               	goto	u1475
  5666  0B36  0873               	movf	__tdiv_to_l_@f2,w
  5667  0B37  0270               	subwf	__tdiv_to_l_@f1,w
  5668  0B38                     u1475:	
  5669  0B38  1C03               	skipc
  5670  0B39  2B46               	goto	L18
  5671  0B3A  0873               	movf	__tdiv_to_l_@f2,w
  5672  0B3B  02F0               	subwf	__tdiv_to_l_@f1,f
  5673  0B3C  0874               	movf	__tdiv_to_l_@f2+1,w
  5674  0B3D  1C03               	skipc
  5675  0B3E  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  5676  0B3F  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5677  0B40  0875               	movf	__tdiv_to_l_@f2+2,w
  5678  0B41  1C03               	skipc
  5679  0B42  0A75               	incf	__tdiv_to_l_@f2+2,w
  5680  0B43  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5681  0B44  1420               	bsf	__tdiv_to_l_@quot,0
  5682  0B45  1003               	clrc
  5683  0B46                     L18:	
  5684  0B46  0DF0               	rlf	__tdiv_to_l_@f1,f
  5685  0B47  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5686  0B48  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5687  0B49  0BA4               	decfsz	__tdiv_to_l_@cntr,f
  5688  0B4A  2B29               	goto	l4621
  5689  0B4B  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5690  0B4C  2B5A               	goto	l4641
  5691  0B4D  0825               	movf	__tdiv_to_l_@exp1,w
  5692  0B4E  3A80               	xorlw	128
  5693  0B4F  3E97               	addlw	151
  5694  0B50  1C03               	btfss	3,0
  5695  0B51  2B07               	goto	l4605
  5696  0B52                     l4637:	
  5697  0B52  1003               	clrc
  5698  0B53  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5699  0B54  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5700  0B55  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5701  0B56  0CA0               	rrf	__tdiv_to_l_@quot,f
  5702  0B57  0FA5               	incfsz	__tdiv_to_l_@exp1,f
  5703  0B58  2B52               	goto	l4637
  5704  0B59  2B68               	goto	l4647
  5705  0B5A                     l4641:	
  5706  0B5A  3018               	movlw	24
  5707  0B5B  0225               	subwf	__tdiv_to_l_@exp1,w
  5708  0B5C  1803               	btfsc	3,0
  5709  0B5D  2B07               	goto	l4605
  5710  0B5E                     l2450:	
  5711  0B5E  08A5               	movf	__tdiv_to_l_@exp1,f
  5712  0B5F  1903               	btfsc	3,2
  5713  0B60  2B68               	goto	l4647
  5714  0B61  1003               	clrc
  5715  0B62  0DA0               	rlf	__tdiv_to_l_@quot,f
  5716  0B63  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5717  0B64  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5718  0B65  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5719  0B66  03A5               	decf	__tdiv_to_l_@exp1,f
  5720  0B67  2B5E               	goto	l2450
  5721  0B68                     l4647:	
  5722  0B68  0823               	movf	__tdiv_to_l_@quot+3,w
  5723  0B69  00F3               	movwf	?__tdiv_to_l_+3
  5724  0B6A  0822               	movf	__tdiv_to_l_@quot+2,w
  5725  0B6B  00F2               	movwf	?__tdiv_to_l_+2
  5726  0B6C  0821               	movf	__tdiv_to_l_@quot+1,w
  5727  0B6D  00F1               	movwf	?__tdiv_to_l_+1
  5728  0B6E  0820               	movf	__tdiv_to_l_@quot,w
  5729  0B6F  00F0               	movwf	?__tdiv_to_l_
  5730  0B70  0008               	return
  5731  0B71                     __end_of__tdiv_to_l_:	
  5732                           
  5733                           	psect	text541
  5734  0A5A                     __ptext541:	
  5735 ;; =============== function __tdiv_to_l_ ends ============
  5736                           
  5737                           
  5738 ;; *************** function _getch *****************
  5739 ;; Defined at:
  5740 ;;		line 248 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  5741 ;; Parameters:    Size  Location     Type
  5742 ;;		None
  5743 ;; Auto vars:     Size  Location     Type
  5744 ;;		None
  5745 ;; Return value:  Size  Location     Type
  5746 ;;                  1    wreg      unsigned char 
  5747 ;; Registers used:
  5748 ;;		wreg
  5749 ;; Tracked objects:
  5750 ;;		On entry : 160/20
  5751 ;;		On exit  : 160/0
  5752 ;;		Unchanged: FFE9F/0
  5753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5754 ;;      Params:         0       0       0       0       0
  5755 ;;      Locals:         0       0       0       0       0
  5756 ;;      Temps:          0       0       0       0       0
  5757 ;;      Totals:         0       0       0       0       0
  5758 ;;Total ram usage:        0 bytes
  5759 ;; Hardware stack levels used:    1
  5760 ;; This function calls:
  5761 ;;		Nothing
  5762 ;; This function is called by:
  5763 ;;		_main
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766  0A5A                     _getch:	
  5767  0A5A                     l1108:	
  5768                           ;C_PuertoSerial_usart.c: 249: while(!RCIF) continue;
  5769                           
  5770                           ; Regs used in _getch: [wreg]
  5771                           
  5772  0A5A  1283               	bcf	3,5	;RP0=0, select bank0
  5773  0A5B  1E8C               	btfss	12,5
  5774  0A5C  2A5A               	goto	l1108
  5775                           
  5776                           ;C_PuertoSerial_usart.c: 250: return RCREG;
  5777  0A5D  081A               	movf	26,w	;volatile
  5778  0A5E  0008               	return
  5779  0A5F                     __end_of_getch:	
  5780                           
  5781                           	psect	text542
  5782  0006                     __ptext542:	
  5783 ;; =============== function _getch ends ============
  5784                           
  5785                           
  5786 ;; *************** function _putch *****************
  5787 ;; Defined at:
  5788 ;;		line 242 in file "C:\Users\petir\Documents\PIC_PROG\C_PuertoSerial\C_PuertoSerial_usart.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;  dato            1    wreg     unsigned char 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  dato            1    0[COMMON] unsigned char 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;		None               void
  5795 ;; Registers used:
  5796 ;;		wreg
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 60/0
  5800 ;;		Unchanged: FFF9F/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5802 ;;      Params:         0       0       0       0       0
  5803 ;;      Locals:         1       0       0       0       0
  5804 ;;      Temps:          0       0       0       0       0
  5805 ;;      Totals:         1       0       0       0       0
  5806 ;;Total ram usage:        1 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		_main
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814  0006                     _putch:	
  5815                           
  5816                           ; Regs used in _putch: [wreg]
  5817                           ;putch@dato stored from wreg
  5818  0006  00F0               	movwf	putch@dato
  5819  0007                     l1102:	
  5820                           ;C_PuertoSerial_usart.c: 243: while(!TXIF) continue;
  5821                           
  5822  0007  1283               	bcf	3,5	;RP0=0, select bank0
  5823  0008  1303               	bcf	3,6	;RP1=0, select bank0
  5824  0009  1E0C               	btfss	12,4
  5825  000A  2807               	goto	l1102
  5826                           
  5827                           ;C_PuertoSerial_usart.c: 244: TXREG=dato;
  5828  000B  0870               	movf	putch@dato,w
  5829  000C  0099               	movwf	25	;volatile
  5830  000D  0008               	return
  5831  000E                     __end_of_putch:	
  5832                           
  5833                           	psect	text544
  5834  0000                     __ptext544:	
  5835 ;; =============== function _msecbase ends ============
  5836                           
  5837  007E                     btemp	set	126	;btemp
  5838  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Mon Nov 04 20:16:49 2019

                    pc 0002         ___bmul@product 007A           ___awdiv@sign 007B                     fsr 0004  
  ___wmul@multiplicand 0072           ___ftadd@exp1 0047           ___ftadd@exp2 0046           ___ftadd@sign 0045  
                  _RA6 002E                    _RA7 002F                    _RE1 0049                    _PR2 0092  
                  _nin 00C5                    _num 00C2                    fsr0 0004                    indf 0000  
         ___awmod@sign 0075            lcd_goto@pos 0075                   l1102 0007                   l1111 0000  
                 l1105 0000                   l1202 0000                   l1108 0A5A                   l1070 0000  
                 l1055 0AF5                   l1064 0000                   l1160 002B                   l1058 0000  
                 l1082 0000                   l1067 0000                   l1092 0F56                   l1079 0000  
                 l2312 0666                   l2225 0E1C                   l2234 0000                   l2228 0000  
                 l2332 0000                   l2413 0000                   l2192 0000                   l2256 0CC5  
                 l2345 0000                   l5001 0000                   l2450 0B5E                   l2443 0000  
                 l2355 0000                   l5011 0C73                   l5003 0000                   l2435 0000  
                 l5013 0000                   l5101 0000                   l2198 0000                   l2374 0000  
                 l2278 0000                   l2359 0000                   l5031 0000                   l5007 0C6C  
                 l5111 0582                   l5103 0000                   l5041 0CAD                   l5025 0000  
                 l5017 0C82                   l5113 0000                   l5105 0000                   l5043 0000  
                 l5035 0C9F                   l5027 0000                   l5019 0000                   l5123 0598  
                 l5115 0000                   l5107 0578                   l5203 03A1                   l2493 0C13  
                 l2485 0BF4                   l5061 0CDB                   l5053 0000                   l5037 0CA4  
                 l5029 0C90                   l5125 0000                   l5117 0000                   l5141 0A69  
                 l5133 0000                   l5221 0467                   l5213 03FD                   l5301 0000  
                 l2486 0000                   l5071 0000                   l5063 0000                   l5055 0CD0  
                 l5047 0CBC                   l5039 0CA9                   l5127 0000                   l5119 058E  
                 l5135 0000                   l5151 0AA8                   l5231 0000                   l5311 0110  
                 l5073 0CF7                   l5065 0000                   l5049 0CC1                   l5129 0000  
                 l5145 0000                   l5161 0000                   l5209 03E6                   l5233 0000  
                 l5241 0000                   l5401 0314                   l5321 0162                   l5313 0000  
                 l5305 0100                   l4611 0000                   l4603 0000                   l5059 0000  
                 l5091 0000                   l5083 0556                   l5139 0000                   l5163 0000  
                 l5155 0000                   l5227 04AC                   l5243 0000                   l5331 0000  
                 l5403 0320                   l5411 032C                   l4621 0B29                   l4613 0000  
                 l4605 0B07                   l5069 0000                   l5093 0000                   l5077 0000  
                 l5149 0A9D                   l5165 0000                   l5157 0000                   l5173 0000  
                 l5237 0000                   l5245 0000                   l5341 01DE                   l5333 0000  
                 l5325 0173                   l5261 002D                   l5501 0000                   l5421 0000  
                 l4631 0000                   l4623 0000                   l4615 0000                   l4607 0B0C  
                 l5095 0000                   l5167 0000                   l5159 0000                   l5183 0000  
                 l5191 0000                   l5239 0000                   l5247 0000                   l5335 0000  
                 l5271 0000                   l5263 003F                   l5511 0F51                   l5503 0000  
                 l5431 0000                   l5423 0000                   l5415 0000                   l4641 0B5A  
                 l4617 0000                   l4705 0000                   l4721 0000                   l4713 0000  
                 l4801 0636                   l5097 0000                   l5089 0567                   l5169 0000  
                 l5361 021C                   l5353 0000                   l5337 01A1                   l5257 0028  
                 l5409 0012                   l5249 0000                   l5521 0000                   l5513 0000  
                 l5441 0000                   l5433 0000                   l5425 0000                   l5417 0000  
                 l4627 0000                   l4619 0000                   l4651 0000                   l4707 0000  
                 l4723 0000                   l4715 06C7                   l4731 0000                   l4811 0000  
                 l4803 063B                   l5099 0000                   l5187 0DEA                   l5179 0D96  
                 l5195 0000                   l5371 0000                   l5355 0214                   l5347 01E0  
                 l5339 0000                   l5291 0000                   l5283 0000                   l5275 0000  
                 l5267 0000                   l5531 0000                   l5523 0000                   l5507 0000  
                 l5451 0000                   l5443 0000                   l5435 0000                   l5427 0000  
                 l5419 0000                   l4637 0B52                   l4661 0000                   l4653 0B7E  
                 l4733 0000                   l4821 0000                   l4813 0000                   l4805 0000  
                 l4901 0000                   l5381 0000                   l5373 024D                   l5365 024A  
                 l5293 0000                   l5285 0000                   l5277 0079                   l5269 0000  
                 l5533 0000                   l5525 0000                   l5517 0000                   l5509 0000  
                 l5461 0000                   l5453 0000                   l5445 0000                   l5437 0000  
                 l5429 0000                   l4591 0000                   l4647 0B68                   l4639 0000  
                 l4671 0000                   l4663 0000                   l4655 0B83                   l4719 06CF  
                 l4743 0000                   l4735 0E16                   l4831 0000                   l4823 0662  
                 l4807 0000                   l5391 0000                   l5383 0000                   l5375 0261  
                 l5287 0000                   l5279 0000                   l5535 0000                   l5527 0000  
                 l5519 0000                   l5471 0000                   l5463 0000                   l5455 0000  
                 l5447 0000                   l5439 0000                   l4593 0000                   l4665 0000  
                 l4729 0000                   l4761 0000                   l4753 0000                   l4833 067E  
                 l4809 0000                   l4921 0000                   l4913 060F                   l5385 0289  
                 l5369 0000                   l5297 00C9                   l5289 0000                   l5545 0FDD  
                 l5537 0000                   l5529 0000                   l5473 0000                   l5465 0000  
                 l5457 0000                   l5449 0000                   l4683 0C07                   l4675 0000  
                 l4667 0000                   l4747 0000                   l4739 0000                   l4755 0000  
                 l4771 0000                   l4819 065A                   l4851 04D6                   l4843 0000  
                 l4931 0000                   l5387 02A8                   l5379 0270                   l5299 0000  
                 l5547 0000                   l5539 0000                   l5475 0000                   l5467 0000  
                 l5459 0000                   l4597 0000                   l4693 0C1D                   l4685 0000  
                 l4677 0000                   l4669 0BB4                   l4749 0E29                   l4765 0E43  
                 l4757 0E2F                   l4781 05D3                   l4773 0000                   l4829 0670  
                 l4861 04E4                   l4853 0000                   l4845 04CD                   l4837 0000  
                 l4917 061E                   l4909 0000                   l4941 0000                   l5397 0000  
                 l5389 0000                   l5549 0000                   l5493 0000                   l5485 0EEC  
                 l5477 0000                   l5469 0000                   l4687 0C0F                   l4767 0000  
                 l4759 0000                   l4783 05D8                   l4775 05CA                   l4871 0000  
                 l4863 0000                   l4839 0000                   l4919 0000                   l4951 07EF  
                 l5399 0000                   l5487 0000                   l5479 0000                   l4697 0000  
                 l4793 0000                   l4785 05E2                   l4873 04FB                   l4849 0000  
                 l4881 0000                   l4945 0000                   l4929 0000                   l4961 0000  
                 l5489 0000                   l4699 05B6                   l4795 0000                   l4787 05E7  
                 l4779 05CE                   l4875 0000                   l4867 0000                   l4939 07C4  
                 l4963 0512                   l4955 0000                   l5499 0F1B                   l4797 0000  
                 l4789 05EC                   l4877 0503                   l4949 0000                   l4981 0000  
                 l4957 0000                   l4799 0000                   l4895 0000                   l4975 0525  
                 l4983 0538                   l4967 0519                   l4991 0ADD                   l4889 0697  
                 l4897 06BC                   l4985 0000                   l4987 0540                   l4995 0000  
                 l4997 0ADF                   l4999 0000                   STR_1 087C                   _T0IF 005A  
                 u2125 052B                   u2065 07D7                   u2155 0AE5                   u1475 0B38  
                 u1820 0000                   u1565 0BD8                   u2615 0141                   u1825 063F  
                 u2705 0256                   u2570 0000                   u2715 026B                   u2645 0160  
                 u1935 04ED                   u2575 008F                   u2815 0F66                   u2665 020D  
                 u2770 0EDC                   u1985 06A5                   u2785 0F0A                   u2795 0F39  
                 _RCIF 0065                   _TMR0 0001                   _TXIF 0064                   _main 0E5D  
         ___ftpack@arg 0070           ___ftpack@exp 0073                   btemp 007E                   start 0000  
         _sprintf$1888 00A0      ___bmul@multiplier 007B           ___ftmul@cntr 003A           ___ftmul@sign 003B  
         ___fttol@exp1 002C           ___fttol@lval 0028                  ?_main 0070        __end_of___awdiv 0508  
      __end_of___lbdiv 0E2B        __end_of___ftadd 0D0B        __end_of___awmod 0545        __end_of___lbmod 0E47  
      __end_of___ftneg 0800                  _ANSEL 0188        __end_of___lldiv 07F8        __end_of___ftmul 05B4  
      ___awdiv@divisor 0076        __end_of___llmod 06C5        __end_of___ftsub 0C49        __end_of___fttol 0687  
      ___awdiv@counter 007A                  _RCREG 001A                  _RCSTA 0018                  _SPBRG 0099  
                _PORTA 0005                  _PORTD 0008                  _TRISA 0085                  _TRISB 0086  
                _TRISD 0088                  _TRISE 0089                  _TXREG 0019                  _TXSTA 0098  
         ___lltoft@exp 007C          ___awtoft@sign 007B                  _getch 0A5A                  _scale 0331  
                _pause 0ADD          ___ftpack@sign 0074                  _putch 0006                  main@i 006B  
                main@x 006F                  pclath 000A                  status 0003                  wtemp0 007E  
      __end_of_sprintf 0331        ___lbdiv@divisor 0075        ___lbdiv@counter 0077           __end_of_main 1000  
               ??_main 005B          ___fttol@sign1 0027   __size_of__tdiv_to_l_ 0078                 ?_getch 0070  
               _ADCON0 001F                 _ADCON1 009F       ___llmod@dividend 0024                 ?_scale 003C  
               _ADRESH 001E                 _ADRESL 009E                 _CCPR1L 0015                 ?_pause 0070  
     ___awdiv@dividend 0078       __end_of___awtoft 0A7C                 ?_putch 0070       __end_of___ftpack 0600  
               _ANSELH 0189       __end_of___lltoft 0ABB                 _INTCON 000B                 _OSCCON 008F  
               _TMR2ON 0092                 _TRISC6 043E                 _TRISC7 043F       __end_of_lcd_goto 0AC2  
               ___bmul 05B4                 ___ftge 0600                 ___wmul 06C5              ??___awdiv 007A  
            ??___lbdiv 0076              ??___ftadd 0042              ??___awmod 0074              ??___lbmod 0071  
            ??___ftneg 0073              ??___lldiv 0078              ??___ftmul 0033              ??___llmod 007D  
            ??___ftsub 007E              ??___fttol 0024                 _fround 0D0B       ___awdiv@quotient 007C  
      ___awmod@divisor 0070        ___awmod@counter 0074       __end_of_msecbase 0AF9  ___ftmul@f3_as_product 0037  
               pause@x 0072              ??_sprintf 0056       ___lbdiv@dividend 0076        ___lbmod@divisor 0070  
      ___lbmod@counter 0073             ___ftadd@f1 003C             ___ftadd@f2 003F             ___ftge@ff1 0070  
           ___ftge@ff2 0073             ___ftneg@f1 0070             ___awtoft@c 0078    ___bmul@multiplicand 0079  
           ___ftmul@f1 002D             ___ftmul@f2 0030             ___ftsub@f1 004B             ___ftsub@f2 0048  
           ___fttol@f1 0020         __pcstackCOMMON 0070           __pidataBANK1 0000             ___lltoft@c 0078  
        __end_of_getch 0A5F          __end_of_scale 04C3          __end_of_pause 0AEE          __end_of_putch 000E  
     ___lbdiv@quotient 0078      main@char_recibido 006A             __div_to_l_ 0B71     __size_of_lcd_clear 0009  
   __size_of_lcd_putch 0003                ??_getch 0070        __div_to_l_@exp1 0025     __size_of_lcd_write 0012  
      __div_to_l_@cntr 0024           sprintf@integ 00AD                ??_scale 003F                ??_pause 0072  
      __div_to_l_@quot 0020                ??_putch 0070             __pbssBANK1 00C2          __div_to_l_@f1 0070  
        __div_to_l_@f2 0073             __pmaintext 0E5D                ?___bmul 0079                ?___ftge 0070  
              ?___wmul 0070                _CCP1CON 0017                _CCP2CON 001D                _BAUDCTL 0187  
              ?_fround 0048              ?___awtoft 0078              ?___ftpack 0070              ?___lltoft 0078  
              _T2CKPS0 0090                _T2CKPS1 0091                _GO_DONE 00F9              ?_lcd_goto 0070  
            ?_msecbase 0070             _scale$2835 0043      __end_of_lcd_clear 0ACB        __size_of___bmul 000E  
      __size_of___ftge 002C      __end_of_lcd_putch 0ABE                ___awdiv 04C3                ___lbdiv 0E10  
              ___ftadd 0C49                ___awmod 0508                ___lbmod 0E2B      __end_of_lcd_write 0ADD  
              ___ftneg 07F8                ___lldiv 07B0        __size_of___wmul 0019                ___ftmul 0545  
              ___llmod 0687                ___ftsub 0C33                ___fttol 062C             ??___awtoft 007B  
           ??___ftpack 0075        __size_of_fround 0105             ??___lltoft 007C            ?__div_to_l_ 0070  
              _dpowers 0854       ___awmod@dividend 0072                _sprintf 000E             ??_lcd_goto 0075  
 end_of_initialization 0A97             ??_msecbase 0070        ___lldiv@divisor 0070        ___lldiv@counter 007C  
       __tdiv_to_l_@f1 0070         __tdiv_to_l_@f2 0073          ??__tdiv_to_l_ 0076       ___lbmod@dividend 0072  
           main@i_1825 006D            ___lbmod@rem 0074             main@buffer 005F             lcd_putch@c 0075  
  __size_of__div_to_l_ 00B5             lcd_write@c 0074            ___ftmul@exp 0036         __end_of___bmul 05C2  
       __end_of___ftge 062C         __end_of___wmul 06DE         __end_of_fround 0E10    start_initialization 0A7C  
  __end_of__tdiv_to_l_ 0B71        ___llmod@divisor 0020        ___llmod@counter 007D               ??___bmul 007A  
             ??___ftge 0076               ??___wmul 0074            __pdataBANK1 00B7               ??_fround 007E  
         pause@msvalue 0070             fround@prec 0051      __size_of___awtoft 001D      __size_of___ftpack 003E  
    __size_of___lltoft 0020          __pcstackBANK0 0020          __pcstackBANK1 00A0      __size_of_lcd_goto 0004  
          sprintf@_val 00A9            sprintf@flag 00A5            sprintf@fval 00B3            sprintf@prec 00A7  
    __size_of_msecbase 000B               ?___awdiv 0076               ?___lbdiv 0075               ?___ftadd 003C  
            __ptext520 0D0B              __ptext521 0ACB              __ptext530 07F8              __ptext522 0A9B  
            __ptext514 000E              __ptext531 0687              __ptext523 0A5F              __ptext515 0ABE  
             ?___awmod 0070              __ptext540 0AF9              __ptext532 04C3              __ptext524 0545  
            __ptext516 0ABB              __ptext541 0A5A              __ptext533 062C              __ptext525 0C49  
            __ptext517 0AC2              __ptext542 0006              __ptext534 05C2              __ptext526 0ADD  
            __ptext518 0C33              __ptext543 0AEE              __ptext535 0E2B              __ptext527 0508  
            __ptext519 0331              __ptext544 0000              __ptext536 0E10              __ptext528 07B0  
            __ptext537 06C5              __ptext529 0600              __ptext538 05B4              __ptext539 0B71  
             ?___lbmod 0070               ?___ftneg 0070               ?___lldiv 0070               ?___ftmul 002D  
             ?___llmod 0020               ?___ftsub 0048              __npowers_ 0806               ?___fttol 0020  
            _lcd_clear 0AC2              __pstrings 0800            __tdiv_to_l_ 0AF9              _lcd_putch 0ABB  
            _lcd_write 0ACB           ??__div_to_l_ 0076         __size_of_getch 0005               ?_sprintf 0052  
       __size_of_scale 0192         __size_of_pause 0011         __size_of_putch 0008         ___wmul@product 0074  
   __end_of__div_to_l_ 0C26              main@F1732 00B7             ?_lcd_clear 0070             ?_lcd_putch 0070  
          __stringbase 0805             ?_lcd_write 0070      ___wmul@multiplier 0070       __size_of___awdiv 0045  
     __size_of___lbdiv 001B       __size_of___ftadd 00C2       __size_of___awmod 003D       __size_of___lbmod 001C  
     __size_of___ftneg 0008       __size_of___lldiv 0048       __size_of___ftmul 006F       __size_of___llmod 003E  
     __size_of___ftsub 0016       __size_of___fttol 005B               ___awtoft 0A5F               ___ftpack 05C2  
          _fround$2833 004E            _fround$2834 004B               ___lltoft 0A9B             sprintf@exp 00B1  
             __powers_ 082D               _lcd_goto 0ABE       __size_of_sprintf 0323          __size_of_main 01A3  
             _msecbase 0AEE            ??_lcd_clear 0075            ??_lcd_putch 0075            ??_lcd_write 0074  
            putch@dato 0070               scale@scl 0046              sprintf@ap 00A4       __tdiv_to_l_@exp1 0025  
     __tdiv_to_l_@cntr 0024              sprintf@sp 00B0       __tdiv_to_l_@quot 0020       ___lldiv@dividend 0074  
            stringcode 0800           ?__tdiv_to_l_ 0070             _OPTION_REG 0081               sprintf@c 00B6  
             sprintf@f 0052       ___lldiv@quotient 0078               stringdir 0800               stringtab 0800  
